Search.setIndex({"alltitles": {"API Reference": [[132, "api-reference"]], "Arguments": [[4, "arguments"]], "Attributes:": [[31, "attributes"]], "Best Practices": [[4, null]], "Block Encodings": [[0, "block-encodings"], [2, "block-encodings"]], "Branches": [[134, "branches"]], "Building the docs": [[33, "building-the-docs"]], "CLAM": [[2, "clam"], [3, "clam"]], "Circuit Operators": [[2, "circuit-operators"], [3, "circuit-operators"]], "Citation": [[132, "citation"]], "Clifford+T Decomposition": [[4, "clifford-t-decomposition"]], "Code review": [[6, "code-review"]], "Configuring pyliqtr to be debugged": [[7, "configuring-pyliqtr-to-be-debugged"]], "Configuring specific tests to be debugged": [[7, "configuring-specific-tests-to-be-debugged"]], "Contributing to pyliqtr": [[6, null]], "Contribution instructions": [[6, "contribution-instructions"]], "Debugger": [[7, null]], "Development cycle": [[134, "development-cycle"]], "Disclaimer": [[133, "disclaimer"]], "Documentation": [[6, "documentation"], [33, null]], "Environments": [[133, "environments"]], "Gate Decomposition": [[2, "gate-decomposition"], [2, "id1"], [3, "gate-decomposition"]], "Guidelines": [[33, "guidelines"]], "High-level changelog (not all inclusive of all changes)": [[5, null]], "I. Quantum Signal Processing": [[0, "i-quantum-signal-processing"]], "II. Eigenvalue Estimation": [[0, "ii-eigenvalue-estimation"]], "III. Qubitized Components": [[0, "iii-qubitized-components"]], "IV. PEST: Generating Electronic Structure Hamiltonians": [[0, "iv-pest-generating-electronic-structure-hamiltonians"]], "Implements": [[16, "implements"], [16, "id142"], [16, "id144"], [16, "id145"], [16, "id146"]], "Indices and tables": [[132, "indices-and-tables"]], "Installing pyliqtr": [[133, null]], "Internal API reference, for users customizing behavior": [[3, null]], "LIQTR Like \ud83d\udc4d : Circuit Decomposition": [[4, "liqtr-like-circuit-decomposition"]], "LIQTR Like \ud83d\udc4d : Circuit Scheduling": [[4, "liqtr-like-circuit-scheduling"]], "LIQTR Like \ud83d\udc4d : Export of circuits to OpenQASM": [[4, "liqtr-like-export-of-circuits-to-openqasm"]], "LIQTR Like \ud83d\udc4d : Resource Analysis": [[4, "liqtr-like-resource-analysis"]], "Methods:": [[31, "methods"]], "Module contents": [[9, "module-src"], [10, "module-src.pyLIQTR"], [11, "module-src.pyLIQTR.BlockEncodings"], [12, "module-src.pyLIQTR.PhaseEstimation"], [13, "module-src.pyLIQTR.PhaseEstimation.tests"], [14, "module-src.pyLIQTR.ProblemInstances"], [15, "module-src.pyLIQTR.circuits"], [16, "module-src.pyLIQTR.circuits.operators"], [17, "module-src.pyLIQTR.circuits.operators.tests"], [18, "module-src.pyLIQTR.circuits.tests"], [19, "module-src.pyLIQTR.clam"], [20, "module-src.pyLIQTR.clam.linearization_tools"], [21, "module-src.pyLIQTR.clam.tests"], [22, "module-src.pyLIQTR.gate_decomp"], [23, "module-src.pyLIQTR.gate_decomp.tests"], [24, "module-src.pyLIQTR.pest_interface"], [25, "module-src.pyLIQTR.phase_factors"], [26, "module-src.pyLIQTR.phase_factors.fourier_response"], [27, "module-src.pyLIQTR.phase_factors.optimization"], [28, "module-src.pyLIQTR.qubitization"], [29, "module-src.pyLIQTR.scheduler"], [30, "module-src.pyLIQTR.tests"], [31, "module-src.pyLIQTR.utils"], [32, "module-src.pyLIQTR.utils.tests"]], "Notes about speed and usage": [[4, "notes-about-speed-and-usage"]], "Output Circuit": [[22, "output-circuit"]], "Overview": [[4, "overview"]], "Phase Estimation": [[2, "phase-estimation"]], "Phase Factor Generation": [[0, "phase-factor-generation"]], "Phase Factors": [[2, "phase-factors"], [3, "phase-factors"]], "Problem Instances": [[2, "problem-instances"]], "QSP/QSVT Sequences": [[0, "qsp-qsvt-sequences"]], "Qubitization": [[2, "qubitization"]], "Qubitized phase estimation": [[0, "qubitized-phase-estimation"]], "Qubitized primitives": [[0, "qubitized-primitives"]], "Release cycle": [[134, "release-cycle"]], "Release instructions": [[134, "release-instructions"]], "Releases and development": [[134, null]], "Running the debugger": [[7, "running-the-debugger"]], "Scheduler": [[2, "scheduler"], [3, "scheduler"]], "Select & Prepare Oracles": [[0, "select-prepare-oracles"]], "Setting the Precision": [[22, "setting-the-precision"]], "Style": [[6, "style"]], "Submodules": [[11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [28, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"]], "Subpackages": [[9, "subpackages"], [10, "subpackages"], [12, "subpackages"], [15, "subpackages"], [16, "subpackages"], [19, "subpackages"], [22, "subpackages"], [25, "subpackages"], [31, "subpackages"]], "Testing": [[6, "testing"]], "User Documentation": [[132, "user-documentation"]], "Utility Methods": [[2, "utility-methods"], [3, "utility-methods"]], "V. Problem Instances": [[0, "v-problem-instances"]], "VI. Tutorials <a id=\"tutorials\"></a>": [[0, "vi-tutorials"]], "VII. Classical Simulation Methods (pyLIQTR.clam)": [[0, "vii-classical-simulation-methods-pyliqtr-clam"]], "VIII. General Utilities / Operations (pyLIQTR.clam)": [[0, "viii-general-utilities-operations-pyliqtr-clam"]], "Welcome to pyLIQTR\u2019s documentation!": [[132, null]], "openqasm Note": [[4, "openqasm-note"]], "pyLIQTR": [[1, null]], "pyLIQTR API Reference": [[2, null]], "pyLIQTR Features": [[0, null]], "pyliqtr installation steps": [[133, "pyliqtr-installation-steps"]], "src": [[8, null]], "src package": [[9, null]], "src.pyLIQTR package": [[10, null]], "src.pyLIQTR.BlockEncodings package": [[11, null]], "src.pyLIQTR.BlockEncodings.BlockEncoding": [[34, null]], "src.pyLIQTR.BlockEncodings.BlockEncoding module": [[11, "module-src.pyLIQTR.BlockEncodings.BlockEncoding"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization": [[35, null]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization module": [[11, "module-src.pyLIQTR.BlockEncodings.CarlemanLinearization"]], "src.pyLIQTR.BlockEncodings.DoubleFactorized": [[36, null]], "src.pyLIQTR.BlockEncodings.DoubleFactorized module": [[11, "module-src.pyLIQTR.BlockEncodings.DoubleFactorized"]], "src.pyLIQTR.BlockEncodings.FirstQuantized": [[37, null]], "src.pyLIQTR.BlockEncodings.FirstQuantized module": [[11, "module-src.pyLIQTR.BlockEncodings.FirstQuantized"]], "src.pyLIQTR.BlockEncodings.LinearT": [[38, null]], "src.pyLIQTR.BlockEncodings.LinearT module": [[11, "module-src.pyLIQTR.BlockEncodings.LinearT"]], "src.pyLIQTR.BlockEncodings.PauliStringLCU": [[39, null]], "src.pyLIQTR.BlockEncodings.PauliStringLCU module": [[11, "module-src.pyLIQTR.BlockEncodings.PauliStringLCU"]], "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding": [[40, null]], "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding module": [[11, "module-src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding"]], "src.pyLIQTR.BlockEncodings.getEncoding": [[41, null]], "src.pyLIQTR.BlockEncodings.getEncoding module": [[11, "module-src.pyLIQTR.BlockEncodings.getEncoding"]], "src.pyLIQTR.PhaseEstimation package": [[12, null]], "src.pyLIQTR.PhaseEstimation.pe": [[42, null]], "src.pyLIQTR.PhaseEstimation.pe module": [[12, "module-src.pyLIQTR.PhaseEstimation.pe"]], "src.pyLIQTR.PhaseEstimation.pe_gates": [[43, null]], "src.pyLIQTR.PhaseEstimation.pe_gates module": [[12, "module-src.pyLIQTR.PhaseEstimation.pe_gates"]], "src.pyLIQTR.PhaseEstimation.pe_sim": [[44, null]], "src.pyLIQTR.PhaseEstimation.pe_sim module": [[12, "module-src.pyLIQTR.PhaseEstimation.pe_sim"]], "src.pyLIQTR.PhaseEstimation.tests package": [[13, null]], "src.pyLIQTR.PhaseEstimation.tests.test_pe_gates module": [[13, "module-src.pyLIQTR.PhaseEstimation.tests.test_pe_gates"]], "src.pyLIQTR.ProblemInstances package": [[14, null]], "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian": [[45, null]], "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian module": [[14, "module-src.pyLIQTR.ProblemInstances.ChemicalHamiltonian"]], "src.pyLIQTR.ProblemInstances.ElectronicStructure": [[46, null]], "src.pyLIQTR.ProblemInstances.ElectronicStructure module": [[14, "module-src.pyLIQTR.ProblemInstances.ElectronicStructure"]], "src.pyLIQTR.ProblemInstances.LatticeInstance": [[47, null]], "src.pyLIQTR.ProblemInstances.LatticeInstance module": [[14, "module-src.pyLIQTR.ProblemInstances.LatticeInstance"]], "src.pyLIQTR.ProblemInstances.MatrixInstance": [[48, null]], "src.pyLIQTR.ProblemInstances.MatrixInstance module": [[14, "module-src.pyLIQTR.ProblemInstances.MatrixInstance"]], "src.pyLIQTR.ProblemInstances.MoleculeParameters module": [[14, "module-src.pyLIQTR.ProblemInstances.MoleculeParameters"]], "src.pyLIQTR.ProblemInstances.NonlinearODE": [[49, null]], "src.pyLIQTR.ProblemInstances.NonlinearODE module": [[14, "module-src.pyLIQTR.ProblemInstances.NonlinearODE"]], "src.pyLIQTR.ProblemInstances.ProblemInstance": [[50, null]], "src.pyLIQTR.ProblemInstances.ProblemInstance module": [[14, "module-src.pyLIQTR.ProblemInstances.ProblemInstance"]], "src.pyLIQTR.ProblemInstances.fermionic_models": [[51, null]], "src.pyLIQTR.ProblemInstances.fermionic_models module": [[14, "module-src.pyLIQTR.ProblemInstances.fermionic_models"]], "src.pyLIQTR.ProblemInstances.getInstance": [[52, null]], "src.pyLIQTR.ProblemInstances.getInstance module": [[14, "module-src.pyLIQTR.ProblemInstances.getInstance"]], "src.pyLIQTR.ProblemInstances.spin_models": [[53, null]], "src.pyLIQTR.ProblemInstances.spin_models module": [[14, "module-src.pyLIQTR.ProblemInstances.spin_models"]], "src.pyLIQTR.circuits package": [[15, null]], "src.pyLIQTR.circuits.operators package": [[16, null]], "src.pyLIQTR.circuits.operators.AddMod": [[54, null]], "src.pyLIQTR.circuits.operators.AddMod module": [[16, "module-src.pyLIQTR.circuits.operators.AddMod"]], "src.pyLIQTR.circuits.operators.BinaryToUnary": [[55, null]], "src.pyLIQTR.circuits.operators.BinaryToUnary module": [[16, "module-src.pyLIQTR.circuits.operators.BinaryToUnary"]], "src.pyLIQTR.circuits.operators.BitwiseZRotation": [[56, null]], "src.pyLIQTR.circuits.operators.BitwiseZRotation module": [[16, "module-src.pyLIQTR.circuits.operators.BitwiseZRotation"]], "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard module": [[16, "module-src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard"]], "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition": [[57, null]], "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition module": [[16, "module-src.pyLIQTR.circuits.operators.ControlledUniformSuperposition"]], "src.pyLIQTR.circuits.operators.DF_InnerPrepare": [[58, null]], "src.pyLIQTR.circuits.operators.DF_InnerPrepare module": [[16, "module-src.pyLIQTR.circuits.operators.DF_InnerPrepare"]], "src.pyLIQTR.circuits.operators.DF_OuterPrepare": [[59, null]], "src.pyLIQTR.circuits.operators.DF_OuterPrepare module": [[16, "module-src.pyLIQTR.circuits.operators.DF_OuterPrepare"]], "src.pyLIQTR.circuits.operators.DF_RotationsBlock": [[60, null]], "src.pyLIQTR.circuits.operators.DF_RotationsBlock module": [[16, "module-src.pyLIQTR.circuits.operators.DF_RotationsBlock"]], "src.pyLIQTR.circuits.operators.EqualityTest module": [[16, "module-src.pyLIQTR.circuits.operators.EqualityTest"]], "src.pyLIQTR.circuits.operators.ExampleFMatrices": [[61, null]], "src.pyLIQTR.circuits.operators.ExampleFMatrices module": [[16, "module-src.pyLIQTR.circuits.operators.ExampleFMatrices"]], "src.pyLIQTR.circuits.operators.FixupTableQROM": [[62, null]], "src.pyLIQTR.circuits.operators.FixupTableQROM module": [[16, "module-src.pyLIQTR.circuits.operators.FixupTableQROM"]], "src.pyLIQTR.circuits.operators.FlagZeroAsFailure module": [[16, "module-src.pyLIQTR.circuits.operators.FlagZeroAsFailure"]], "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition": [[63, null]], "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition module": [[16, "module-src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition"]], "src.pyLIQTR.circuits.operators.PhaseGradientRotation": [[64, null]], "src.pyLIQTR.circuits.operators.PhaseGradientRotation module": [[16, "module-src.pyLIQTR.circuits.operators.PhaseGradientRotation"]], "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded module": [[16, "module-src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded"]], "src.pyLIQTR.circuits.operators.PrepareNu module": [[16, "module-src.pyLIQTR.circuits.operators.PrepareNu"]], "src.pyLIQTR.circuits.operators.PrepareNuSuperposition module": [[16, "module-src.pyLIQTR.circuits.operators.PrepareNuSuperposition"]], "src.pyLIQTR.circuits.operators.PreparePowerTwoState module": [[16, "module-src.pyLIQTR.circuits.operators.PreparePowerTwoState"]], "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized module": [[16, "module-src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized"]], "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized module": [[16, "module-src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized"]], "src.pyLIQTR.circuits.operators.ProductPauliExponentials": [[65, null]], "src.pyLIQTR.circuits.operators.ProductPauliExponentials module": [[16, "module-src.pyLIQTR.circuits.operators.ProductPauliExponentials"]], "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute": [[66, null]], "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute module": [[16, "module-src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute"]], "src.pyLIQTR.circuits.operators.RotationsQROM": [[67, null]], "src.pyLIQTR.circuits.operators.RotationsQROM module": [[16, "module-src.pyLIQTR.circuits.operators.RotationsQROM"]], "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ module": [[16, "module-src.pyLIQTR.circuits.operators.UniformSuperpositionIJ"]], "src.pyLIQTR.circuits.operators.cascading_translation": [[68, null]], "src.pyLIQTR.circuits.operators.cascading_translation module": [[16, "module-src.pyLIQTR.circuits.operators.cascading_translation"]], "src.pyLIQTR.circuits.operators.cyclic_shift": [[69, null]], "src.pyLIQTR.circuits.operators.cyclic_shift module": [[16, "module-src.pyLIQTR.circuits.operators.cyclic_shift"]], "src.pyLIQTR.circuits.operators.diagonal_bitstring": [[70, null]], "src.pyLIQTR.circuits.operators.diagonal_bitstring module": [[16, "module-src.pyLIQTR.circuits.operators.diagonal_bitstring"]], "src.pyLIQTR.circuits.operators.hamiltonian_encodings": [[71, null]], "src.pyLIQTR.circuits.operators.hamiltonian_encodings module": [[16, "module-src.pyLIQTR.circuits.operators.hamiltonian_encodings"]], "src.pyLIQTR.circuits.operators.multiCZ": [[72, null]], "src.pyLIQTR.circuits.operators.multiCZ module": [[16, "module-src.pyLIQTR.circuits.operators.multiCZ"]], "src.pyLIQTR.circuits.operators.prepare": [[73, null]], "src.pyLIQTR.circuits.operators.prepare module": [[16, "module-src.pyLIQTR.circuits.operators.prepare"]], "src.pyLIQTR.circuits.operators.prepare_FirstQuantized module": [[16, "module-src.pyLIQTR.circuits.operators.prepare_FirstQuantized"]], "src.pyLIQTR.circuits.operators.prepare_LinearT": [[74, null]], "src.pyLIQTR.circuits.operators.prepare_LinearT module": [[16, "module-src.pyLIQTR.circuits.operators.prepare_LinearT"]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu": [[75, null]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu module": [[16, "module-src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu"]], "src.pyLIQTR.circuits.operators.reflect": [[76, null]], "src.pyLIQTR.circuits.operators.reflect module": [[16, "module-src.pyLIQTR.circuits.operators.reflect"]], "src.pyLIQTR.circuits.operators.selectV": [[77, null]], "src.pyLIQTR.circuits.operators.selectV module": [[16, "module-src.pyLIQTR.circuits.operators.selectV"]], "src.pyLIQTR.circuits.operators.selectVutils": [[78, null]], "src.pyLIQTR.circuits.operators.selectVutils module": [[16, "module-src.pyLIQTR.circuits.operators.selectVutils"]], "src.pyLIQTR.circuits.operators.select_LinearT": [[79, null]], "src.pyLIQTR.circuits.operators.select_LinearT module": [[16, "module-src.pyLIQTR.circuits.operators.select_LinearT"]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu": [[80, null]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu module": [[16, "module-src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu"]], "src.pyLIQTR.circuits.operators.select_prepare_pauli": [[81, null]], "src.pyLIQTR.circuits.operators.select_prepare_pauli module": [[16, "module-src.pyLIQTR.circuits.operators.select_prepare_pauli"]], "src.pyLIQTR.circuits.operators.swap_network": [[82, null]], "src.pyLIQTR.circuits.operators.swap_network module": [[16, "module-src.pyLIQTR.circuits.operators.swap_network"]], "src.pyLIQTR.circuits.operators.tests package": [[17, null]], "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary"]], "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard"]], "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition"]], "src.pyLIQTR.circuits.operators.tests.test_EqualityTest module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_EqualityTest"]], "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure"]], "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition"]], "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized"]], "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials"]], "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute"]], "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_RotationsQROM"]], "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ"]], "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_cyclic_shift"]], "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring"]], "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings"]], "src.pyLIQTR.circuits.operators.tests.test_multiCZ module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_multiCZ"]], "src.pyLIQTR.circuits.operators.tests.test_prepare module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_prepare"]], "src.pyLIQTR.circuits.operators.tests.test_qtAdd module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_qtAdd"]], "src.pyLIQTR.circuits.operators.tests.test_reflect module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_reflect"]], "src.pyLIQTR.circuits.operators.tests.test_selectV module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_selectV"]], "src.pyLIQTR.circuits.operators.tests.test_translation module": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_translation"]], "src.pyLIQTR.circuits.operators.tests.utils module": [[17, "module-src.pyLIQTR.circuits.operators.tests.utils"]], "src.pyLIQTR.circuits.operators.translation": [[83, null]], "src.pyLIQTR.circuits.operators.translation module": [[16, "module-src.pyLIQTR.circuits.operators.translation"]], "src.pyLIQTR.circuits.pyLCircuit module": [[15, "module-src.pyLIQTR.circuits.pyLCircuit"]], "src.pyLIQTR.circuits.pyLOperator module": [[15, "module-src.pyLIQTR.circuits.pyLOperator"]], "src.pyLIQTR.circuits.qsp module": [[15, "module-src.pyLIQTR.circuits.qsp"]], "src.pyLIQTR.circuits.tests package": [[18, null]], "src.pyLIQTR.circuits.tests.test_pyLCircuit module": [[18, "module-src.pyLIQTR.circuits.tests.test_pyLCircuit"]], "src.pyLIQTR.circuits.tests.test_pyLOperator module": [[18, "module-src.pyLIQTR.circuits.tests.test_pyLOperator"]], "src.pyLIQTR.clam package": [[19, null]], "src.pyLIQTR.clam.atomic_lattice module": [[19, "src-pyliqtr-clam-atomic-lattice-module"]], "src.pyLIQTR.clam.cell_complex": [[84, null]], "src.pyLIQTR.clam.cell_complex module": [[19, "module-src.pyLIQTR.clam.cell_complex"]], "src.pyLIQTR.clam.geometry": [[85, null]], "src.pyLIQTR.clam.geometry module": [[19, "module-src.pyLIQTR.clam.geometry"]], "src.pyLIQTR.clam.lattice module": [[19, "module-src.pyLIQTR.clam.lattice"]], "src.pyLIQTR.clam.lattice_definitions": [[86, null]], "src.pyLIQTR.clam.lattice_definitions module": [[19, "module-src.pyLIQTR.clam.lattice_definitions"]], "src.pyLIQTR.clam.linearization_tools package": [[20, null]], "src.pyLIQTR.clam.linearization_tools.burgers_nonlinear module": [[20, "src-pyliqtr-clam-linearization-tools-burgers-nonlinear-module"]], "src.pyLIQTR.clam.linearization_tools.linearization_tools module": [[20, "src-pyliqtr-clam-linearization-tools-linearization-tools-module"]], "src.pyLIQTR.clam.linearization_tools.multilinear_algebra module": [[20, "module-src.pyLIQTR.clam.linearization_tools.multilinear_algebra"]], "src.pyLIQTR.clam.linearization_tools.vlasov_spectral module": [[20, "module-src.pyLIQTR.clam.linearization_tools.vlasov_spectral"]], "src.pyLIQTR.clam.multilinear_algebra": [[87, null]], "src.pyLIQTR.clam.multilinear_algebra module": [[19, "module-src.pyLIQTR.clam.multilinear_algebra"]], "src.pyLIQTR.clam.operator_complex": [[88, null]], "src.pyLIQTR.clam.operator_complex module": [[19, "module-src.pyLIQTR.clam.operator_complex"]], "src.pyLIQTR.clam.operator_lattice": [[89, null]], "src.pyLIQTR.clam.operator_lattice module": [[19, "module-src.pyLIQTR.clam.operator_lattice"]], "src.pyLIQTR.clam.operator_sims": [[90, null]], "src.pyLIQTR.clam.operator_sims module": [[19, "module-src.pyLIQTR.clam.operator_sims"]], "src.pyLIQTR.clam.operator_strings": [[91, null]], "src.pyLIQTR.clam.operator_strings module": [[19, "module-src.pyLIQTR.clam.operator_strings"]], "src.pyLIQTR.clam.operators": [[92, null]], "src.pyLIQTR.clam.operators module": [[19, "module-src.pyLIQTR.clam.operators"]], "src.pyLIQTR.clam.physical_data": [[93, null]], "src.pyLIQTR.clam.physical_data module": [[19, "module-src.pyLIQTR.clam.physical_data"]], "src.pyLIQTR.clam.simqsp": [[94, null]], "src.pyLIQTR.clam.simqsp module": [[19, "module-src.pyLIQTR.clam.simqsp"]], "src.pyLIQTR.clam.tensor_methods": [[95, null]], "src.pyLIQTR.clam.tensor_methods module": [[19, "module-src.pyLIQTR.clam.tensor_methods"]], "src.pyLIQTR.clam.tests package": [[21, null]], "src.pyLIQTR.clam.tests.test_heisenberg module": [[21, "module-src.pyLIQTR.clam.tests.test_heisenberg"]], "src.pyLIQTR.clam.time_dynamics": [[96, null]], "src.pyLIQTR.clam.time_dynamics module": [[19, "module-src.pyLIQTR.clam.time_dynamics"]], "src.pyLIQTR.clam.utilities module": [[19, "module-src.pyLIQTR.clam.utilities"]], "src.pyLIQTR.gate_decomp package": [[22, null]], "src.pyLIQTR.gate_decomp.cirq_transforms": [[97, null]], "src.pyLIQTR.gate_decomp.cirq_transforms module": [[22, "module-src.pyLIQTR.gate_decomp.cirq_transforms"]], "src.pyLIQTR.gate_decomp.clifford_gates": [[98, null]], "src.pyLIQTR.gate_decomp.clifford_gates module": [[22, "module-src.pyLIQTR.gate_decomp.clifford_gates"]], "src.pyLIQTR.gate_decomp.ellipse": [[99, null]], "src.pyLIQTR.gate_decomp.ellipse module": [[22, "module-src.pyLIQTR.gate_decomp.ellipse"]], "src.pyLIQTR.gate_decomp.exact_decomp": [[100, null]], "src.pyLIQTR.gate_decomp.exact_decomp module": [[22, "module-src.pyLIQTR.gate_decomp.exact_decomp"]], "src.pyLIQTR.gate_decomp.gate_approximation": [[101, null]], "src.pyLIQTR.gate_decomp.gate_approximation module": [[22, "module-src.pyLIQTR.gate_decomp.gate_approximation"]], "src.pyLIQTR.gate_decomp.grid_operator": [[102, null]], "src.pyLIQTR.gate_decomp.grid_operator module": [[22, "module-src.pyLIQTR.gate_decomp.grid_operator"]], "src.pyLIQTR.gate_decomp.matrices": [[103, null]], "src.pyLIQTR.gate_decomp.matrices module": [[22, "module-src.pyLIQTR.gate_decomp.matrices"]], "src.pyLIQTR.gate_decomp.point_enumeration": [[104, null]], "src.pyLIQTR.gate_decomp.point_enumeration module": [[22, "module-src.pyLIQTR.gate_decomp.point_enumeration"]], "src.pyLIQTR.gate_decomp.rings": [[105, null]], "src.pyLIQTR.gate_decomp.rings module": [[22, "module-src.pyLIQTR.gate_decomp.rings"]], "src.pyLIQTR.gate_decomp.rotation_gates": [[106, null]], "src.pyLIQTR.gate_decomp.rotation_gates module": [[22, "module-src.pyLIQTR.gate_decomp.rotation_gates"]], "src.pyLIQTR.gate_decomp.solve_diophantine": [[107, null]], "src.pyLIQTR.gate_decomp.solve_diophantine module": [[22, "module-src.pyLIQTR.gate_decomp.solve_diophantine"]], "src.pyLIQTR.gate_decomp.tests package": [[23, null]], "src.pyLIQTR.gate_decomp.tests.benchmarks module": [[23, "module-src.pyLIQTR.gate_decomp.tests.benchmarks"]], "src.pyLIQTR.gate_decomp.tests.conftest module": [[23, "module-src.pyLIQTR.gate_decomp.tests.conftest"]], "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers module": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_cirq_transformers"]], "src.pyLIQTR.gate_decomp.tests.test_exact_decomp module": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_exact_decomp"]], "src.pyLIQTR.gate_decomp.tests.test_matrices module": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_matrices"]], "src.pyLIQTR.gate_decomp.tests.test_point_enumeration module": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_point_enumeration"]], "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine module": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_solve_diophantine"]], "src.pyLIQTR.pest_interface package": [[24, null]], "src.pyLIQTR.pest_interface.pest_python module": [[24, "module-src.pyLIQTR.pest_interface.pest_python"]], "src.pyLIQTR.phase_factors package": [[25, null]], "src.pyLIQTR.phase_factors.angler": [[108, null]], "src.pyLIQTR.phase_factors.angler module": [[25, "module-src.pyLIQTR.phase_factors.angler"]], "src.pyLIQTR.phase_factors.conversions": [[109, null]], "src.pyLIQTR.phase_factors.conversions module": [[25, "module-src.pyLIQTR.phase_factors.conversions"]], "src.pyLIQTR.phase_factors.fourier_response package": [[26, null]], "src.pyLIQTR.phase_factors.fourier_response.fourier_response module": [[26, "module-src.pyLIQTR.phase_factors.fourier_response.fourier_response"]], "src.pyLIQTR.phase_factors.named_factors": [[110, null]], "src.pyLIQTR.phase_factors.named_factors module": [[25, "module-src.pyLIQTR.phase_factors.named_factors"]], "src.pyLIQTR.phase_factors.optimization package": [[27, null]], "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly module": [[27, "module-src.pyLIQTR.phase_factors.optimization.ChebyshevPoly"]], "src.pyLIQTR.phase_factors.optimization.angler_optimization module": [[27, "module-src.pyLIQTR.phase_factors.optimization.angler_optimization"]], "src.pyLIQTR.phase_factors.optimization.expander module": [[27, "module-src.pyLIQTR.phase_factors.optimization.expander"]], "src.pyLIQTR.phase_factors.optimization.fitter module": [[27, "module-src.pyLIQTR.phase_factors.optimization.fitter"]], "src.pyLIQTR.phase_factors.phase_factors": [[111, null]], "src.pyLIQTR.phase_factors.phase_factors module": [[25, "module-src.pyLIQTR.phase_factors.phase_factors"]], "src.pyLIQTR.phase_factors.simulation": [[112, null]], "src.pyLIQTR.phase_factors.simulation module": [[25, "module-src.pyLIQTR.phase_factors.simulation"]], "src.pyLIQTR.qubitization package": [[28, null]], "src.pyLIQTR.qubitization.phase_estimation": [[113, null]], "src.pyLIQTR.qubitization.phase_estimation module": [[28, "module-src.pyLIQTR.qubitization.phase_estimation"]], "src.pyLIQTR.qubitization.qsvt": [[114, null]], "src.pyLIQTR.qubitization.qsvt module": [[28, "module-src.pyLIQTR.qubitization.qsvt"]], "src.pyLIQTR.qubitization.qsvt_dynamics": [[115, null]], "src.pyLIQTR.qubitization.qsvt_dynamics module": [[28, "module-src.pyLIQTR.qubitization.qsvt_dynamics"]], "src.pyLIQTR.qubitization.qubitized_gates": [[116, null]], "src.pyLIQTR.qubitization.qubitized_gates module": [[28, "module-src.pyLIQTR.qubitization.qubitized_gates"]], "src.pyLIQTR.scheduler package": [[29, null]], "src.pyLIQTR.scheduler.DAG": [[117, null]], "src.pyLIQTR.scheduler.DAG module": [[29, "module-src.pyLIQTR.scheduler.DAG"]], "src.pyLIQTR.scheduler.Instruction": [[118, null]], "src.pyLIQTR.scheduler.Instruction module": [[29, "module-src.pyLIQTR.scheduler.Instruction"]], "src.pyLIQTR.scheduler.scheduler": [[119, null]], "src.pyLIQTR.scheduler.scheduler module": [[29, "module-src.pyLIQTR.scheduler.scheduler"]], "src.pyLIQTR.scheduler.scheduler_utils": [[120, null]], "src.pyLIQTR.scheduler.scheduler_utils module": [[29, "module-src.pyLIQTR.scheduler.scheduler_utils"]], "src.pyLIQTR.scheduler.sets": [[121, null]], "src.pyLIQTR.scheduler.sets module": [[29, "module-src.pyLIQTR.scheduler.sets"]], "src.pyLIQTR.tests package": [[30, null]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates module": [[30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates"]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate module": [[30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate"]], "src.pyLIQTR.utils package": [[31, null]], "src.pyLIQTR.utils.Hamiltonian": [[122, null]], "src.pyLIQTR.utils.Hamiltonian module": [[31, "module-src.pyLIQTR.utils.Hamiltonian"]], "src.pyLIQTR.utils.circuit_decomposition": [[123, null]], "src.pyLIQTR.utils.circuit_decomposition module": [[31, "module-src.pyLIQTR.utils.circuit_decomposition"]], "src.pyLIQTR.utils.df_utils module": [[31, "src-pyliqtr-utils-df-utils-module"]], "src.pyLIQTR.utils.gate_complexity module": [[31, "module-src.pyLIQTR.utils.gate_complexity"]], "src.pyLIQTR.utils.get_hdf5": [[124, null]], "src.pyLIQTR.utils.get_hdf5 module": [[31, "module-src.pyLIQTR.utils.get_hdf5"]], "src.pyLIQTR.utils.global_ancilla_manager": [[125, null]], "src.pyLIQTR.utils.global_ancilla_manager module": [[31, "module-src.pyLIQTR.utils.global_ancilla_manager"]], "src.pyLIQTR.utils.pauli_string_manip": [[126, null]], "src.pyLIQTR.utils.pauli_string_manip module": [[31, "module-src.pyLIQTR.utils.pauli_string_manip"]], "src.pyLIQTR.utils.plot_helpers": [[127, null]], "src.pyLIQTR.utils.plot_helpers module": [[31, "module-src.pyLIQTR.utils.plot_helpers"]], "src.pyLIQTR.utils.printing": [[128, null]], "src.pyLIQTR.utils.printing module": [[31, "module-src.pyLIQTR.utils.printing"]], "src.pyLIQTR.utils.qsp_helpers": [[129, null]], "src.pyLIQTR.utils.qsp_helpers module": [[31, "module-src.pyLIQTR.utils.qsp_helpers"]], "src.pyLIQTR.utils.resource_analysis": [[130, null]], "src.pyLIQTR.utils.resource_analysis module": [[31, "module-src.pyLIQTR.utils.resource_analysis"]], "src.pyLIQTR.utils.tests package": [[32, null]], "src.pyLIQTR.utils.tests.conftest module": [[32, "module-src.pyLIQTR.utils.tests.conftest"]], "src.pyLIQTR.utils.tests.test_gate_complexity module": [[32, "module-src.pyLIQTR.utils.tests.test_gate_complexity"]], "src.pyLIQTR.utils.tests.test_printing module": [[32, "module-src.pyLIQTR.utils.tests.test_printing"]], "src.pyLIQTR.utils.tests.test_resoure_analyze module": [[32, "module-src.pyLIQTR.utils.tests.test_resoure_analyze"]], "src.pyLIQTR.utils.tests.test_utils module": [[32, "module-src.pyLIQTR.utils.tests.test_utils"]], "src.pyLIQTR.utils.utils": [[131, null]], "src.pyLIQTR.utils.utils module": [[31, "module-src.pyLIQTR.utils.utils"]], "v0.3.0": [[5, "v0-3-0"]], "v0.3.1": [[5, "v0-3-1"]], "v1.0.0": [[5, "v1-0-0"]], "v1.1.1": [[5, "v1-1-1"]], "v1.2.0": [[5, "v1-2-0"]]}, "docnames": ["Features", "_autosummary/pyLIQTR", "api", "api-internal", "best_practice", "changelog", "contribute", "debugger", "docs/_modules/modules", "docs/_modules/src", "docs/_modules/src.pyLIQTR", "docs/_modules/src.pyLIQTR.BlockEncodings", "docs/_modules/src.pyLIQTR.PhaseEstimation", "docs/_modules/src.pyLIQTR.PhaseEstimation.tests", "docs/_modules/src.pyLIQTR.ProblemInstances", "docs/_modules/src.pyLIQTR.circuits", "docs/_modules/src.pyLIQTR.circuits.operators", "docs/_modules/src.pyLIQTR.circuits.operators.tests", "docs/_modules/src.pyLIQTR.circuits.tests", "docs/_modules/src.pyLIQTR.clam", "docs/_modules/src.pyLIQTR.clam.linearization_tools", "docs/_modules/src.pyLIQTR.clam.tests", "docs/_modules/src.pyLIQTR.gate_decomp", "docs/_modules/src.pyLIQTR.gate_decomp.tests", "docs/_modules/src.pyLIQTR.pest_interface", "docs/_modules/src.pyLIQTR.phase_factors", "docs/_modules/src.pyLIQTR.phase_factors.fourier_response", "docs/_modules/src.pyLIQTR.phase_factors.optimization", "docs/_modules/src.pyLIQTR.qubitization", "docs/_modules/src.pyLIQTR.scheduler", "docs/_modules/src.pyLIQTR.tests", "docs/_modules/src.pyLIQTR.utils", "docs/_modules/src.pyLIQTR.utils.tests", "document", "generated/src.pyLIQTR.BlockEncodings.BlockEncoding", "generated/src.pyLIQTR.BlockEncodings.CarlemanLinearization", "generated/src.pyLIQTR.BlockEncodings.DoubleFactorized", "generated/src.pyLIQTR.BlockEncodings.FirstQuantized", "generated/src.pyLIQTR.BlockEncodings.LinearT", "generated/src.pyLIQTR.BlockEncodings.PauliStringLCU", "generated/src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", "generated/src.pyLIQTR.BlockEncodings.getEncoding", "generated/src.pyLIQTR.PhaseEstimation.pe", "generated/src.pyLIQTR.PhaseEstimation.pe_gates", "generated/src.pyLIQTR.PhaseEstimation.pe_sim", "generated/src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", "generated/src.pyLIQTR.ProblemInstances.ElectronicStructure", "generated/src.pyLIQTR.ProblemInstances.LatticeInstance", "generated/src.pyLIQTR.ProblemInstances.MatrixInstance", "generated/src.pyLIQTR.ProblemInstances.NonlinearODE", "generated/src.pyLIQTR.ProblemInstances.ProblemInstance", "generated/src.pyLIQTR.ProblemInstances.fermionic_models", "generated/src.pyLIQTR.ProblemInstances.getInstance", "generated/src.pyLIQTR.ProblemInstances.spin_models", "generated/src.pyLIQTR.circuits.operators.AddMod", "generated/src.pyLIQTR.circuits.operators.BinaryToUnary", "generated/src.pyLIQTR.circuits.operators.BitwiseZRotation", "generated/src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", "generated/src.pyLIQTR.circuits.operators.DF_InnerPrepare", "generated/src.pyLIQTR.circuits.operators.DF_OuterPrepare", "generated/src.pyLIQTR.circuits.operators.DF_RotationsBlock", "generated/src.pyLIQTR.circuits.operators.ExampleFMatrices", "generated/src.pyLIQTR.circuits.operators.FixupTableQROM", "generated/src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", "generated/src.pyLIQTR.circuits.operators.PhaseGradientRotation", "generated/src.pyLIQTR.circuits.operators.ProductPauliExponentials", "generated/src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", "generated/src.pyLIQTR.circuits.operators.RotationsQROM", "generated/src.pyLIQTR.circuits.operators.cascading_translation", "generated/src.pyLIQTR.circuits.operators.cyclic_shift", "generated/src.pyLIQTR.circuits.operators.diagonal_bitstring", "generated/src.pyLIQTR.circuits.operators.hamiltonian_encodings", "generated/src.pyLIQTR.circuits.operators.multiCZ", "generated/src.pyLIQTR.circuits.operators.prepare", "generated/src.pyLIQTR.circuits.operators.prepare_LinearT", "generated/src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", "generated/src.pyLIQTR.circuits.operators.reflect", "generated/src.pyLIQTR.circuits.operators.selectV", "generated/src.pyLIQTR.circuits.operators.selectVutils", "generated/src.pyLIQTR.circuits.operators.select_LinearT", "generated/src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", "generated/src.pyLIQTR.circuits.operators.select_prepare_pauli", "generated/src.pyLIQTR.circuits.operators.swap_network", "generated/src.pyLIQTR.circuits.operators.translation", "generated/src.pyLIQTR.clam.cell_complex", "generated/src.pyLIQTR.clam.geometry", "generated/src.pyLIQTR.clam.lattice_definitions", "generated/src.pyLIQTR.clam.multilinear_algebra", "generated/src.pyLIQTR.clam.operator_complex", "generated/src.pyLIQTR.clam.operator_lattice", "generated/src.pyLIQTR.clam.operator_sims", "generated/src.pyLIQTR.clam.operator_strings", "generated/src.pyLIQTR.clam.operators", "generated/src.pyLIQTR.clam.physical_data", "generated/src.pyLIQTR.clam.simqsp", "generated/src.pyLIQTR.clam.tensor_methods", "generated/src.pyLIQTR.clam.time_dynamics", "generated/src.pyLIQTR.gate_decomp.cirq_transforms", "generated/src.pyLIQTR.gate_decomp.clifford_gates", "generated/src.pyLIQTR.gate_decomp.ellipse", "generated/src.pyLIQTR.gate_decomp.exact_decomp", "generated/src.pyLIQTR.gate_decomp.gate_approximation", "generated/src.pyLIQTR.gate_decomp.grid_operator", "generated/src.pyLIQTR.gate_decomp.matrices", "generated/src.pyLIQTR.gate_decomp.point_enumeration", "generated/src.pyLIQTR.gate_decomp.rings", "generated/src.pyLIQTR.gate_decomp.rotation_gates", "generated/src.pyLIQTR.gate_decomp.solve_diophantine", "generated/src.pyLIQTR.phase_factors.angler", "generated/src.pyLIQTR.phase_factors.conversions", "generated/src.pyLIQTR.phase_factors.named_factors", "generated/src.pyLIQTR.phase_factors.phase_factors", "generated/src.pyLIQTR.phase_factors.simulation", "generated/src.pyLIQTR.qubitization.phase_estimation", "generated/src.pyLIQTR.qubitization.qsvt", "generated/src.pyLIQTR.qubitization.qsvt_dynamics", "generated/src.pyLIQTR.qubitization.qubitized_gates", "generated/src.pyLIQTR.scheduler.DAG", "generated/src.pyLIQTR.scheduler.Instruction", "generated/src.pyLIQTR.scheduler.scheduler", "generated/src.pyLIQTR.scheduler.scheduler_utils", "generated/src.pyLIQTR.scheduler.sets", "generated/src.pyLIQTR.utils.Hamiltonian", "generated/src.pyLIQTR.utils.circuit_decomposition", "generated/src.pyLIQTR.utils.get_hdf5", "generated/src.pyLIQTR.utils.global_ancilla_manager", "generated/src.pyLIQTR.utils.pauli_string_manip", "generated/src.pyLIQTR.utils.plot_helpers", "generated/src.pyLIQTR.utils.printing", "generated/src.pyLIQTR.utils.qsp_helpers", "generated/src.pyLIQTR.utils.resource_analysis", "generated/src.pyLIQTR.utils.utils", "index", "install", "release"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["Features.md", "_autosummary\\pyLIQTR.rst", "api.rst", "api-internal.rst", "best_practice.md", "changelog.md", "contribute.md", "debugger.md", "docs\\_modules\\modules.rst", "docs\\_modules\\src.rst", "docs\\_modules\\src.pyLIQTR.rst", "docs\\_modules\\src.pyLIQTR.BlockEncodings.rst", "docs\\_modules\\src.pyLIQTR.PhaseEstimation.rst", "docs\\_modules\\src.pyLIQTR.PhaseEstimation.tests.rst", "docs\\_modules\\src.pyLIQTR.ProblemInstances.rst", "docs\\_modules\\src.pyLIQTR.circuits.rst", "docs\\_modules\\src.pyLIQTR.circuits.operators.rst", "docs\\_modules\\src.pyLIQTR.circuits.operators.tests.rst", "docs\\_modules\\src.pyLIQTR.circuits.tests.rst", "docs\\_modules\\src.pyLIQTR.clam.rst", "docs\\_modules\\src.pyLIQTR.clam.linearization_tools.rst", "docs\\_modules\\src.pyLIQTR.clam.tests.rst", "docs\\_modules\\src.pyLIQTR.gate_decomp.rst", "docs\\_modules\\src.pyLIQTR.gate_decomp.tests.rst", "docs\\_modules\\src.pyLIQTR.pest_interface.rst", "docs\\_modules\\src.pyLIQTR.phase_factors.rst", "docs\\_modules\\src.pyLIQTR.phase_factors.fourier_response.rst", "docs\\_modules\\src.pyLIQTR.phase_factors.optimization.rst", "docs\\_modules\\src.pyLIQTR.qubitization.rst", "docs\\_modules\\src.pyLIQTR.scheduler.rst", "docs\\_modules\\src.pyLIQTR.tests.rst", "docs\\_modules\\src.pyLIQTR.utils.rst", "docs\\_modules\\src.pyLIQTR.utils.tests.rst", "document.md", "generated\\src.pyLIQTR.BlockEncodings.BlockEncoding.rst", "generated\\src.pyLIQTR.BlockEncodings.CarlemanLinearization.rst", "generated\\src.pyLIQTR.BlockEncodings.DoubleFactorized.rst", "generated\\src.pyLIQTR.BlockEncodings.FirstQuantized.rst", "generated\\src.pyLIQTR.BlockEncodings.LinearT.rst", "generated\\src.pyLIQTR.BlockEncodings.PauliStringLCU.rst", "generated\\src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding.rst", "generated\\src.pyLIQTR.BlockEncodings.getEncoding.rst", "generated\\src.pyLIQTR.PhaseEstimation.pe.rst", "generated\\src.pyLIQTR.PhaseEstimation.pe_gates.rst", "generated\\src.pyLIQTR.PhaseEstimation.pe_sim.rst", "generated\\src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.rst", "generated\\src.pyLIQTR.ProblemInstances.ElectronicStructure.rst", "generated\\src.pyLIQTR.ProblemInstances.LatticeInstance.rst", "generated\\src.pyLIQTR.ProblemInstances.MatrixInstance.rst", "generated\\src.pyLIQTR.ProblemInstances.NonlinearODE.rst", "generated\\src.pyLIQTR.ProblemInstances.ProblemInstance.rst", "generated\\src.pyLIQTR.ProblemInstances.fermionic_models.rst", "generated\\src.pyLIQTR.ProblemInstances.getInstance.rst", "generated\\src.pyLIQTR.ProblemInstances.spin_models.rst", "generated\\src.pyLIQTR.circuits.operators.AddMod.rst", "generated\\src.pyLIQTR.circuits.operators.BinaryToUnary.rst", "generated\\src.pyLIQTR.circuits.operators.BitwiseZRotation.rst", "generated\\src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.rst", "generated\\src.pyLIQTR.circuits.operators.DF_InnerPrepare.rst", "generated\\src.pyLIQTR.circuits.operators.DF_OuterPrepare.rst", "generated\\src.pyLIQTR.circuits.operators.DF_RotationsBlock.rst", "generated\\src.pyLIQTR.circuits.operators.ExampleFMatrices.rst", "generated\\src.pyLIQTR.circuits.operators.FixupTableQROM.rst", "generated\\src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.rst", "generated\\src.pyLIQTR.circuits.operators.PhaseGradientRotation.rst", "generated\\src.pyLIQTR.circuits.operators.ProductPauliExponentials.rst", "generated\\src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute.rst", "generated\\src.pyLIQTR.circuits.operators.RotationsQROM.rst", "generated\\src.pyLIQTR.circuits.operators.cascading_translation.rst", "generated\\src.pyLIQTR.circuits.operators.cyclic_shift.rst", "generated\\src.pyLIQTR.circuits.operators.diagonal_bitstring.rst", "generated\\src.pyLIQTR.circuits.operators.hamiltonian_encodings.rst", "generated\\src.pyLIQTR.circuits.operators.multiCZ.rst", "generated\\src.pyLIQTR.circuits.operators.prepare.rst", "generated\\src.pyLIQTR.circuits.operators.prepare_LinearT.rst", "generated\\src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.rst", "generated\\src.pyLIQTR.circuits.operators.reflect.rst", "generated\\src.pyLIQTR.circuits.operators.selectV.rst", "generated\\src.pyLIQTR.circuits.operators.selectVutils.rst", "generated\\src.pyLIQTR.circuits.operators.select_LinearT.rst", "generated\\src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.rst", "generated\\src.pyLIQTR.circuits.operators.select_prepare_pauli.rst", "generated\\src.pyLIQTR.circuits.operators.swap_network.rst", "generated\\src.pyLIQTR.circuits.operators.translation.rst", "generated\\src.pyLIQTR.clam.cell_complex.rst", "generated\\src.pyLIQTR.clam.geometry.rst", "generated\\src.pyLIQTR.clam.lattice_definitions.rst", "generated\\src.pyLIQTR.clam.multilinear_algebra.rst", "generated\\src.pyLIQTR.clam.operator_complex.rst", "generated\\src.pyLIQTR.clam.operator_lattice.rst", "generated\\src.pyLIQTR.clam.operator_sims.rst", "generated\\src.pyLIQTR.clam.operator_strings.rst", "generated\\src.pyLIQTR.clam.operators.rst", "generated\\src.pyLIQTR.clam.physical_data.rst", "generated\\src.pyLIQTR.clam.simqsp.rst", "generated\\src.pyLIQTR.clam.tensor_methods.rst", "generated\\src.pyLIQTR.clam.time_dynamics.rst", "generated\\src.pyLIQTR.gate_decomp.cirq_transforms.rst", "generated\\src.pyLIQTR.gate_decomp.clifford_gates.rst", "generated\\src.pyLIQTR.gate_decomp.ellipse.rst", "generated\\src.pyLIQTR.gate_decomp.exact_decomp.rst", "generated\\src.pyLIQTR.gate_decomp.gate_approximation.rst", "generated\\src.pyLIQTR.gate_decomp.grid_operator.rst", "generated\\src.pyLIQTR.gate_decomp.matrices.rst", "generated\\src.pyLIQTR.gate_decomp.point_enumeration.rst", "generated\\src.pyLIQTR.gate_decomp.rings.rst", "generated\\src.pyLIQTR.gate_decomp.rotation_gates.rst", "generated\\src.pyLIQTR.gate_decomp.solve_diophantine.rst", "generated\\src.pyLIQTR.phase_factors.angler.rst", "generated\\src.pyLIQTR.phase_factors.conversions.rst", "generated\\src.pyLIQTR.phase_factors.named_factors.rst", "generated\\src.pyLIQTR.phase_factors.phase_factors.rst", "generated\\src.pyLIQTR.phase_factors.simulation.rst", "generated\\src.pyLIQTR.qubitization.phase_estimation.rst", "generated\\src.pyLIQTR.qubitization.qsvt.rst", "generated\\src.pyLIQTR.qubitization.qsvt_dynamics.rst", "generated\\src.pyLIQTR.qubitization.qubitized_gates.rst", "generated\\src.pyLIQTR.scheduler.DAG.rst", "generated\\src.pyLIQTR.scheduler.Instruction.rst", "generated\\src.pyLIQTR.scheduler.scheduler.rst", "generated\\src.pyLIQTR.scheduler.scheduler_utils.rst", "generated\\src.pyLIQTR.scheduler.sets.rst", "generated\\src.pyLIQTR.utils.Hamiltonian.rst", "generated\\src.pyLIQTR.utils.circuit_decomposition.rst", "generated\\src.pyLIQTR.utils.get_hdf5.rst", "generated\\src.pyLIQTR.utils.global_ancilla_manager.rst", "generated\\src.pyLIQTR.utils.pauli_string_manip.rst", "generated\\src.pyLIQTR.utils.plot_helpers.rst", "generated\\src.pyLIQTR.utils.printing.rst", "generated\\src.pyLIQTR.utils.qsp_helpers.rst", "generated\\src.pyLIQTR.utils.resource_analysis.rst", "generated\\src.pyLIQTR.utils.utils.rst", "index.rst", "install.md", "release.md"], "indexentries": {"a() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.A", false]], "a_dtype (src.pyliqtr.circuits.operators.addmod.add attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.Add.a_dtype", false]], "add (class in src.pyliqtr.circuits.operators.addmod)": [[16, "src.pyLIQTR.circuits.operators.AddMod.Add", false]], "add() (src.pyliqtr.clam.cell_complex.cellcomplex method)": [[19, "src.pyLIQTR.clam.cell_complex.CellComplex.add", false]], "add_dependency() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.add_dependency", false]], "add_edge() (src.pyliqtr.clam.operator_lattice.operatorunitcell method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell.add_edge", false]], "add_measurement_result() (src.pyliqtr.utils.printing.qasminfo method)": [[31, "src.pyLIQTR.utils.printing.QASMInfo.add_measurement_result", false]], "add_site() (src.pyliqtr.clam.operator_lattice.operatorunitcell method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell.add_site", false]], "add_trotterized_unitary() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.add_trotterized_unitary", false]], "add_val (src.pyliqtr.circuits.operators.addmod.addmod attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.add_val", false]], "addmod (class in src.pyliqtr.circuits.operators.addmod)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod", false]], "adjoint() (src.pyliqtr.circuits.operators.preparenu.testnuinequality method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.adjoint", false]], "adjoint() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.adjoint", false]], "adjust_hamiltonian() (src.pyliqtr.utils.hamiltonian.hamiltonian method)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.adjust_hamiltonian", false]], "align_to_principal_axes() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.align_to_principal_axes", false]], "all_qubits (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.qubitized_gates.qubitizedreflection attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.qubitized_gates.qubitizedrotation attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation.all_qubits", false]], "all_qubits (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.all_qubits", false]], "allocate_resources() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.allocate_resources", false]], "alpha (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.alpha", false]], "alpha (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.alpha", false]], "alpha (src.pyliqtr.blockencodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding.alpha", false]], "alpha (src.pyliqtr.blockencodings.firstquantized.firstquantized attribute)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.alpha", false]], "alpha (src.pyliqtr.blockencodings.lineart.fermionic_lineart attribute)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.alpha", false]], "alpha (src.pyliqtr.blockencodings.paulistringlcu.paulistringlcu attribute)": [[11, "src.pyLIQTR.BlockEncodings.PauliStringLCU.PauliStringLCU.alpha", false]], "alpha (src.pyliqtr.probleminstances.probleminstance.probleminstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.alpha", false]], "alpha (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.alpha", false]], "alpha_prep() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.alpha_prep", false]], "alpha_prep() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.alpha_prep", false]], "alphas (src.pyliqtr.circuits.operators.prepare.prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.alphas", false]], "alphas (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.alphas", false]], "alphas (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.alphas", false]], "alt (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.alt", false]], "alt (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.alt", false]], "alt_data (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.alt_data", false]], "alt_signs_data (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.alt_signs_data", false]], "alternates_bitsize (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.alternates_bitsize", false]], "alternates_bitsize (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.alternates_bitsize", false]], "alternates_bitsize (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.alternates_bitsize", false]], "angler_abstract (class in src.pyliqtr.phase_factors.angler)": [[25, "src.pyLIQTR.phase_factors.angler.Angler_abstract", false]], "angler_fourier_response (class in src.pyliqtr.phase_factors.fourier_response.fourier_response)": [[26, "src.pyLIQTR.phase_factors.fourier_response.fourier_response.Angler_fourier_response", false]], "angler_opt (class in src.pyliqtr.phase_factors.optimization.angler_optimization)": [[27, "src.pyLIQTR.phase_factors.optimization.angler_optimization.Angler_opt", false]], "angler_random (class in src.pyliqtr.phase_factors.angler)": [[25, "src.pyLIQTR.phase_factors.angler.Angler_random", false]], "apown() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.APowN", false]], "append() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.append", false]], "append_tuple() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.append_tuple", false]], "apply_grid_operator() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.apply_grid_operator", false]], "apply_op_to_ellipse() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.apply_op_to_ellipse", false]], "apply_shift_operator() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.apply_shift_operator", false]], "applyandstep() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.applyAndStep", false]], "applyandstep() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.applyAndStep", false]], "applyandwalk() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.applyAndWalk", false]], "applyandwalk() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.applyAndWalk", false]], "approx_angle_with_br_bits() (in module src.pyliqtr.circuits.operators.phasegradientrotation)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.approx_angle_with_br_bits", false]], "approx_angles_as_ints_with_br_bits() (in module src.pyliqtr.blockencodings.doublefactorized)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.approx_angles_as_ints_with_br_bits", false]], "approximate_rz_direct() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.approximate_rz_direct", false]], "approximate_rz_fallback() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.approximate_rz_fallback", false]], "approxrz_direct() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.approxRz_direct", false]], "approxrz_fallback() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.approxRz_fallback", false]], "are_equivalent() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.are_equivalent", false]], "assign_execution_time() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.assign_execution_time", false]], "b() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.B", false]], "b_dtype (src.pyliqtr.circuits.operators.addmod.add attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.Add.b_dtype", false]], "benchmark_gse_circuit() (in module src.pyliqtr.gate_decomp.tests.benchmarks)": [[23, "src.pyLIQTR.gate_decomp.tests.benchmarks.benchmark_gse_circuit", false]], "benchmark_random_angles() (in module src.pyliqtr.gate_decomp.tests.benchmarks)": [[23, "src.pyLIQTR.gate_decomp.tests.benchmarks.benchmark_random_angles", false]], "binarytounary (class in src.pyliqtr.circuits.operators.binarytounary)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary", false]], "binarytounarybits (class in src.pyliqtr.circuits.operators.binarytounary)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits", false]], "binomsum() (in module src.pyliqtr.phase_factors.optimization.expander)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.binomsum", false]], "bit_list (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "id0", false], [12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.bit_list", false]], "bitsize (src.pyliqtr.circuits.operators.addmod.addmod attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.bitsize", false]], "bitwisezrotation (class in src.pyliqtr.circuits.operators.bitwisezrotation)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation", false]], "blockencoding (class in src.pyliqtr.blockencodings.blockencoding)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding", false]], "blockencoding_select_prepare (class in src.pyliqtr.blockencodings.blockencoding)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare", false]], "bphi (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.bphi", false]], "bphi (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.bphi", false]], "bphi (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.bphi", false]], "bphi (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials attribute)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.bphi", false]], "bpown() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.BPowN", false]], "br (src.pyliqtr.circuits.operators.bitwisezrotation.bitwisezrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation.br", false]], "br (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.br", false]], "br (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.br", false]], "br (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.br", false]], "br (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials attribute)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.br", false]], "build() (src.pyliqtr.clam.lattice.lattice method)": [[19, "src.pyLIQTR.clam.lattice.Lattice.build", false]], "build_call_graph() (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.equalitytest.equalitytest method)": [[16, "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.flagzeroasfailure.flagzeroasfailure method)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparemuunaryencoded.preparemuunaryencoded method)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparenu.preparenustate method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparenu.testnuinequality method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparenusuperposition.preparenusuperposition method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparepowertwostate.preparepowertwostate method)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.preparet_firstquantized.preparet_firstquantized method)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.build_call_graph", false]], "build_call_graph() (src.pyliqtr.circuits.operators.uniformsuperpositionij.uniformsuperpositionijfirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization.build_call_graph", false]], "build_cell() (src.pyliqtr.clam.operator_lattice.operatorunitcell method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell.build_cell", false]], "build_circuit_repeat_different_key() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.build_circuit_repeat_different_key", false]], "build_circuit_rotations_qrom() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.build_circuit_rotations_qrom", false]], "build_circuit_single() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.build_circuit_single", false]], "build_composite_bloq() (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.build_composite_bloq", false]], "build_composite_bloq() (src.pyliqtr.circuits.operators.preparenu.preparenustate method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.build_composite_bloq", false]], "build_dtable_dict() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.build_dtable_dict", false]], "c_i() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.c_i", false]], "c_xzx() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.c_xzx", false]], "c_z() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.c_z", false]], "c_zz() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.c_zz", false]], "calc_traj_op_wfn() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.calc_traj_op_wfn", false]], "calculate_bias() (in module src.pyliqtr.gate_decomp.ellipse)": [[22, "src.pyLIQTR.gate_decomp.ellipse.calculate_bias", false]], "calculate_skew() (in module src.pyliqtr.gate_decomp.ellipse)": [[22, "src.pyLIQTR.gate_decomp.ellipse.calculate_skew", false]], "candidate_generator_direct() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.candidate_generator_direct", false]], "candidate_generator_fallback() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.candidate_generator_fallback", false]], "carleman_linearization (class in src.pyliqtr.blockencodings.carlemanlinearization)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization", false]], "carlemanlinearization (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.CarlemanLinearization", false]], "cascadingtranslation (class in src.pyliqtr.circuits.operators.cascading_translation)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation", false]], "cascadingunary (class in src.pyliqtr.circuits.operators.cascading_translation)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary", false]], "catalyticallycontrolledhadamard (class in src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard)": [[16, "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard", false]], "cell (class in src.pyliqtr.clam.cell_complex)": [[19, "src.pyLIQTR.clam.cell_complex.Cell", false]], "cellcomplex (class in src.pyliqtr.clam.cell_complex)": [[19, "src.pyLIQTR.clam.cell_complex.CellComplex", false]], "chebyshev_func_m() (in module src.pyliqtr.phase_factors.optimization.fitter)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.chebyshev_func_m", false]], "chebyshev_m() (in module src.pyliqtr.phase_factors.optimization.fitter)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.chebyshev_m", false]], "chebyshevpoly (class in src.pyliqtr.phase_factors.optimization.chebyshevpoly)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly", false]], "check_common_angles() (in module src.pyliqtr.gate_decomp.rotation_gates)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.check_common_angles", false]], "check_common_cases() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.check_common_cases", false]], "chemical_phase_estimation() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.chemical_phase_estimation", false]], "chemicalhamiltonian (class in src.pyliqtr.probleminstances.chemicalhamiltonian)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian", false]], "childsselectv (class in src.pyliqtr.circuits.operators.selectv)": [[16, "src.pyLIQTR.circuits.operators.selectV.ChildsSelectV", false]], "circuit (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.circuit", false]], "circuit (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.circuit", false]], "circuit (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.circuit", false]], "circuit (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.circuit", false]], "circuit (src.pyliqtr.qubitization.qubitized_gates.qubitizedreflection attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection.circuit", false]], "circuit (src.pyliqtr.qubitization.qubitized_gates.qubitizedrotation attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation.circuit", false]], "circuit (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.circuit", false]], "circuit_compare() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.circuit_compare", false]], "circuit_decompose_multi() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.circuit_decompose_multi", false]], "circuit_decompose_once() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.circuit_decompose_once", false]], "cleanup() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.cleanup", false]], "clear_resources() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.clear_resources", false]], "cliff_t_cx() (src.pyliqtr.utils.gate_complexity.gatecomplexity method)": [[31, "src.pyLIQTR.utils.gate_complexity.GateComplexity.cliff_t_cx", false]], "cliff_t_cx_rot() (src.pyliqtr.utils.gate_complexity.gatecomplexity method)": [[31, "src.pyLIQTR.utils.gate_complexity.GateComplexity.cliff_t_cx_rot", false]], "cliff_t_cx_rot_toff() (src.pyliqtr.utils.gate_complexity.gatecomplexity method)": [[31, "src.pyLIQTR.utils.gate_complexity.GateComplexity.cliff_t_cx_rot_toff", false]], "clifford_plus_t_direct_transform() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.clifford_plus_t_direct_transform", false]], "close() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.close", false]], "close_grid() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.close_grid", false]], "close_hamiltonian() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.close_hamiltonian", false]], "cm_prop() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.cm_prop", false]], "cm_simulate() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.cm_simulate", false]], "coeffs() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.coeffs", false]], "complex_inst() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.complex_inst", false]], "compute_data_l() (src.pyliqtr.blockencodings.doublefactorized.doublefactorized method)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.compute_data_l", false]], "compute_x_points() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.compute_x_points", false]], "compute_y_points() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.compute_y_points", false]], "conj() (src.pyliqtr.gate_decomp.rings.z_omega method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.conj", false]], "conj() (src.pyliqtr.gate_decomp.rings.z_sqrt2 method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2.conj", false]], "conj2() (src.pyliqtr.gate_decomp.grid_operator.gridoperator method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.conj2", false]], "conj2() (src.pyliqtr.gate_decomp.rings.z_omega method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.conj2", false]], "cons() (src.pyliqtr.clam.cell_complex.operatorcell method)": [[19, "src.pyLIQTR.clam.cell_complex.OperatorCell.cons", false]], "consolidate_strings() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.consolidate_strings", false]], "constructbooleantree() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.constructBooleanTree", false]], "constructbooleantree() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.constructBooleanTree", false]], "contains() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.contains", false]], "control_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.control_registers", false]], "control_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.control_registers", false]], "control_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.control_registers", false]], "control_registers (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.control_registers", false]], "control_registers (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.control_registers", false]], "control_registers (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.control_registers", false]], "control_registers (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.control_registers", false]], "control_registers (src.pyliqtr.circuits.operators.swap_network.swapunary attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.control_registers", false]], "control_registers (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.control_registers", false]], "control_registers (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.control_registers", false]], "control_registers (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.control_registers", false]], "control_registers (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.control_registers", false]], "control_registers() (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.control_registers", false]], "controlled (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.controlled", false]], "controlledprepareuniformsuperposition (class in src.pyliqtr.circuits.operators.controlleduniformsuperposition)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition", false]], "convert() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.convert", false]], "convert_hamiltonian_terms_to_operators() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.convert_hamiltonian_terms_to_operators", false]], "convert_hamiltonian_terms_to_operators() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.convert_hamiltonian_terms_to_operators", false]], "convert_projector() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.convert_projector", false]], "convert_projector() (in module src.pyliqtr.utils.pauli_string_manip)": [[31, "src.pyLIQTR.utils.pauli_string_manip.convert_projector", false]], "convert_sparse_term() (in module src.pyliqtr.utils.pauli_string_manip)": [[31, "src.pyLIQTR.utils.pauli_string_manip.convert_sparse_term", false]], "convert_to_dense_pauli_string() (in module src.pyliqtr.utils.pauli_string_manip)": [[31, "src.pyLIQTR.utils.pauli_string_manip.convert_to_dense_pauli_string", false]], "convert_to_so3() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.convert_to_so3", false]], "convert_to_zsqrti() (in module src.pyliqtr.gate_decomp.matrices)": [[22, "src.pyLIQTR.gate_decomp.matrices.convert_to_zsqrti", false]], "convert_to_zsqrti_increase_k() (in module src.pyliqtr.gate_decomp.matrices)": [[22, "src.pyLIQTR.gate_decomp.matrices.convert_to_zsqrti_increase_k", false]], "corrections() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.corrections", false]], "count_clifford_and_rotations() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.count_clifford_and_rotations", false]], "count_exact() (src.pyliqtr.circuits.operators.hamiltonian_encodings.unitaryblockencode method)": [[16, "src.pyLIQTR.circuits.operators.hamiltonian_encodings.UnitaryBlockEncode.count_exact", false]], "count_exact() (src.pyliqtr.circuits.pyloperator.fakeoperator method)": [[15, "src.pyLIQTR.circuits.pyLOperator.fakeOperator.count_exact", false]], "count_exact() (src.pyliqtr.circuits.pyloperator.pyloperator method)": [[15, "src.pyLIQTR.circuits.pyLOperator.pyLOperator.count_exact", false]], "count_qubits() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.count_qubits", false]], "count_rotation_gates() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.count_rotation_gates", false]], "count_t_gates() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.count_t_gates", false]], "count_t_gates() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.count_T_gates", false]], "create_operator_op() (in module src.pyliqtr.gate_decomp.clifford_gates)": [[22, "src.pyLIQTR.gate_decomp.clifford_gates.create_operator_op", false]], "ctrlop() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.ctrlOp", false]], "ctrlop() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.ctrlOp", false]], "cubiclattice (class in src.pyliqtr.clam.lattice_definitions)": [[19, "src.pyLIQTR.clam.lattice_definitions.CubicLattice", false]], "custom_gateset_decomposition_catchall() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.custom_gateset_decomposition_catchall", false]], "cvs (src.pyliqtr.circuits.operators.addmod.addmod attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.cvs", false]], "cyclicshiftpermutation (class in src.pyliqtr.circuits.operators.cyclic_shift)": [[16, "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation", false]], "d (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.D", false]], "dag (class in src.pyliqtr.scheduler.dag)": [[29, "src.pyLIQTR.scheduler.DAG.DAG", false]], "dag_creation() (in module src.pyliqtr.scheduler.scheduler_utils)": [[29, "src.pyLIQTR.scheduler.scheduler_utils.dag_creation", false]], "dataandkeycondition (class in src.pyliqtr.circuits.operators.fixuptableqrom)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition", false]], "debugprint() (in module src.pyliqtr.circuits.operators.addmod)": [[16, "src.pyLIQTR.circuits.operators.AddMod.debugPrint", false]], "decomp_level (src.pyliqtr.circuits.pylcircuit.pylcircuit attribute)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.decomp_level", false]], "decomp_mixin (class in src.pyliqtr.gate_decomp.rotation_gates)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin", false]], "decompose() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.decompose", false]], "decompose() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.decompose", false]], "decompose_ccz() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.decompose_CCZ", false]], "decompose_cirq_directcpt() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.decompose_cirq_directCpT", false]], "decompose_diagonal_cirq() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.decompose_diagonal_cirq", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare method)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.carlemanlinearization.lcucorrections method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUCorrections.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.carlemanlinearization.lcuprep method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.carlemanlinearization.swapcorrections method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.SwapCorrections.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.blockencodings.doublefactorized.doublefactorized method)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.addmod.add method)": [[16, "src.pyLIQTR.circuits.operators.AddMod.Add.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.binarytounary.binarytounary method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.bitwisezrotation.bitwisezrotation method)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.cascading_translation.cascadingtranslation method)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard.catalyticallycontrolledhadamard method)": [[16, "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition method)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.cyclic_shift.cyclicshiftpermutation method)": [[16, "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare method)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare method)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock method)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.diagonal_bitstring.diagonalbitstring method)": [[16, "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.equalitytest.equalitytest method)": [[16, "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.examplefmatrices.f0_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.examplefmatrices.f1_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.examplefmatrices.f2_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.flaggedprepareuniformsuperposition.flaggedprepareuniformsuperposition method)": [[16, "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.FlaggedPrepareUniformSuperposition.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.flagzeroasfailure.flagzeroasfailure method)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation method)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart method)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart method)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.preparemuunaryencoded.preparemuunaryencoded method)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.preparenusuperposition.preparenusuperposition method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.preparepowertwostate.preparepowertwostate method)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.preparet_firstquantized.preparet_firstquantized method)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials method)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart method)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.select_prepare_pauli.prepare_pauli_lcu method)": [[16, "src.pyLIQTR.circuits.operators.select_prepare_pauli.prepare_pauli_lcu.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.swap_network.swapnetwork method)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.translation.translation method)": [[16, "src.pyLIQTR.circuits.operators.translation.Translation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.circuits.operators.uniformsuperpositionij.uniformsuperpositionijfirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation method)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qsvt.qsp_fourier_response method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSP_fourier_response.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qubitized_gates.qubitizedreflection method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qubitized_gates.qubitizedrotation method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation.decompose_from_registers", false]], "decompose_from_registers() (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.decompose_from_registers", false]], "decompose_once() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.decompose_once", false]], "decompose_op() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.decompose_op", false]], "delete_site() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.delete_site", false]], "delete_term() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.delete_term", false]], "dependencyedge (class in src.pyliqtr.scheduler.instruction)": [[29, "src.pyLIQTR.scheduler.Instruction.DependencyEdge", false]], "descriminant() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.descriminant", false]], "determinant() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.determinant", false]], "determine_gate_precision() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.determine_gate_precision", false]], "determine_shift_operator() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.determine_shift_operator", false]], "df_ (src.pyliqtr.phaseestimation.pe_sim.pe_simulator attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.df_", false]], "df_fragments() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.DF_fragments", false]], "diagonalbitstring (class in src.pyliqtr.circuits.operators.diagonal_bitstring)": [[16, "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring", false]], "diffphis() (in module src.pyliqtr.phase_factors.fourier_response.fourier_response)": [[26, "src.pyLIQTR.phase_factors.fourier_response.fourier_response.diffphis", false]], "disentangle_recursion() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.disentangle_recursion", false]], "disentangle_recursion() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.disentangle_recursion", false]], "disentangle_recursive() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.disentangle_recursive", false]], "disentangle_recursive() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.disentangle_recursive", false]], "distance_dict() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.distance_dict", false]], "divide() (src.pyliqtr.gate_decomp.rings.z_sqrt2 method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2.divide", false]], "divide_sqrt2() (src.pyliqtr.gate_decomp.rings.z_sqrt2 method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2.divide_sqrt2", false]], "do_negative_z_rotation (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.do_negative_z_rotation", false]], "doublefactorized (class in src.pyliqtr.blockencodings.doublefactorized)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized", false]], "doublefactorized (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.DoubleFactorized", false]], "dpw_jw_alternating_spin (class in src.pyliqtr.pest_interface.pest_python)": [[24, "src.pyLIQTR.pest_interface.pest_python.dpw_jw_alternating_spin", false]], "dpw_to_pw_cutoff() (in module src.pyliqtr.pest_interface.pest_python)": [[24, "src.pyLIQTR.pest_interface.pest_python.dpw_to_pw_cutoff", false]], "draw() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.draw", false]], "draw_lattice() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.draw_lattice", false]], "draw_lattice_2d() (in module src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.draw_lattice_2d", false]], "edge (class in src.pyliqtr.clam.operator_complex)": [[19, "src.pyLIQTR.clam.operator_complex.Edge", false]], "electronic_structure_lineart_encoding() (in module src.pyliqtr.utils.tests.conftest)": [[32, "src.pyLIQTR.utils.tests.conftest.electronic_structure_LinearT_encoding", false]], "electronic_structure_lineart_encoding() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.electronic_structure_LinearT_encoding", false]], "electronicstructure (class in src.pyliqtr.probleminstances.electronicstructure)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure", false]], "elements() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.elements", false]], "elements() (src.pyliqtr.gate_decomp.matrices.so3 method)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3.elements", false]], "ellipse (class in src.pyliqtr.gate_decomp.ellipse)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse", false]], "empty() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.empty", false]], "equalitytest (class in src.pyliqtr.circuits.operators.equalitytest)": [[16, "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest", false]], "erf() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.erf", false]], "erf_shifted() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.erf_shifted", false]], "estimate_phase() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.estimate_phase", false]], "estimate_resources() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.estimate_resources", false]], "estimate_t_count_direct() (in module src.pyliqtr.gate_decomp.tests.benchmarks)": [[23, "src.pyLIQTR.gate_decomp.tests.benchmarks.estimate_t_count_direct", false]], "estimate_t_count_fallback() (in module src.pyliqtr.gate_decomp.tests.benchmarks)": [[23, "src.pyLIQTR.gate_decomp.tests.benchmarks.estimate_t_count_fallback", false]], "eta (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.eta", false]], "eta (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.eta", false]], "eval() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.eval", false]], "eval_approx() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.eval_approx", false]], "eval_chebyshev() (in module src.pyliqtr.phase_factors.optimization.chebyshevpoly)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.eval_chebyshev", false]], "eval_chebyshev() (in module src.pyliqtr.phase_factors.optimization.expander)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.eval_chebyshev", false]], "eval_chebyshev_strict() (in module src.pyliqtr.phase_factors.optimization.chebyshevpoly)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.eval_chebyshev_strict", false]], "eval_chebyshev_strict() (in module src.pyliqtr.phase_factors.optimization.expander)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.eval_chebyshev_strict", false]], "eval_func() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.eval_func", false]], "eval_sequence() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.eval_sequence", false]], "eval_sequence_qsvt() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.eval_sequence_qsvt", false]], "evens() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.evens", false]], "exact_decomp() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.exact_decomp", false]], "exact_decomp_compressed() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.exact_decomp_compressed", false]], "exact_decomp_compressed_m() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.exact_decomp_compressed_m", false]], "exact_decomp_to_matrix_string() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.exact_decomp_to_matrix_string", false]], "exact_decomp_to_qasm() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.exact_decomp_to_qasm", false]], "expand_projectors() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.expand_projectors", false]], "expander (class in src.pyliqtr.phase_factors.optimization.expander)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander", false]], "expansion (src.pyliqtr.phase_factors.named_factors.f_cosine attribute)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_cosine.expansion", false]], "expansion (src.pyliqtr.phase_factors.named_factors.f_exp_fourier_response attribute)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_exp_fourier_response.expansion", false]], "expansion (src.pyliqtr.phase_factors.named_factors.f_sine attribute)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_sine.expansion", false]], "expansion (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.expansion", false]], "expansion_coeffs (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.expansion_coeffs", false]], "expansion_degree (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.expansion_degree", false]], "expansion_error() (src.pyliqtr.phase_factors.phase_factors.phasefactors method)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.expansion_error", false]], "expansion_eval() (src.pyliqtr.phase_factors.phase_factors.phasefactors method)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.expansion_eval", false]], "exponential_decay_even() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.exponential_decay_even", false]], "exponential_decay_odd() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.exponential_decay_odd", false]], "expop() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.expOp", false]], "expop() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.expOp", false]], "extra_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.extra_registers", false]], "extra_registers (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.extra_registers", false]], "extra_registers (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.extra_registers", false]], "extrac_info_from_sim() (src.pyliqtr.phaseestimation.pe_sim.pe_simulator method)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.extrac_info_from_sim", false]], "extract_info_from_sim() (src.pyliqtr.phaseestimation.pe_sim.pe_simulator static method)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.extract_info_from_sim", false]], "f() (src.pyliqtr.phase_factors.phase_factors.phasefactors method)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.f", false]], "f0_operator (class in src.pyliqtr.circuits.operators.examplefmatrices)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator", false]], "f0_oracle() (src.pyliqtr.probleminstances.nonlinearode.foperators method)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators.F0_oracle", false]], "f1_operator (class in src.pyliqtr.circuits.operators.examplefmatrices)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator", false]], "f1_oracle() (src.pyliqtr.probleminstances.nonlinearode.foperators method)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators.F1_oracle", false]], "f2_operator (class in src.pyliqtr.circuits.operators.examplefmatrices)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator", false]], "f2_oracle() (src.pyliqtr.probleminstances.nonlinearode.foperators method)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators.F2_oracle", false]], "f_cosine (class in src.pyliqtr.phase_factors.named_factors)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_cosine", false]], "f_exp_fourier_response (class in src.pyliqtr.phase_factors.named_factors)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_exp_fourier_response", false]], "f_oracles (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.F_oracles", false]], "f_sine (class in src.pyliqtr.phase_factors.named_factors)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_sine", false]], "fakeoperator (class in src.pyliqtr.circuits.pyloperator)": [[15, "src.pyLIQTR.circuits.pyLOperator.fakeOperator", false]], "fan() (in module src.pyliqtr.clam.operators)": [[19, "src.pyLIQTR.clam.operators.fan", false]], "fcr() (in module src.pyliqtr.clam.operators)": [[19, "src.pyLIQTR.clam.operators.fcr", false]], "fermi() (in module src.pyliqtr.clam.physical_data)": [[19, "src.pyLIQTR.clam.physical_data.fermi", false]], "fermi_hubbard_dynamics() (in module src.pyliqtr.utils.tests.conftest)": [[32, "src.pyLIQTR.utils.tests.conftest.fermi_hubbard_dynamics", false]], "fermi_hubbard_dynamics() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.fermi_hubbard_dynamics", false]], "fermi_hubbard_square_encoding (class in src.pyliqtr.blockencodings.fermi_hubbard_square_encoding)": [[11, "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding", false]], "fermihubbard (class in src.pyliqtr.probleminstances.fermionic_models)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbard", false]], "fermihubbardnnn (class in src.pyliqtr.probleminstances.fermionic_models)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN", false]], "fermihubbardsquare (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.FermiHubbardSquare", false]], "fermionic (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.Fermionic", false]], "fermionic_lineart (class in src.pyliqtr.blockencodings.lineart)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT", false]], "fermionicprepare_lineart (class in src.pyliqtr.circuits.operators.prepare_lineart)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT", false]], "fermionicselect_lineart (class in src.pyliqtr.circuits.operators.select_lineart)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT", false]], "fermionprepare (class in src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrepare", false]], "fermionpreprepare (class in src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrePrepare", false]], "fermionselect (class in src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.FermionSelect", false]], "find_bounding_ellipse_direct() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_bounding_ellipse_direct", false]], "find_bounding_ellipse_fallback() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_bounding_ellipse_fallback", false]], "find_ellipse_bounding_box() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_ellipse_bounding_box", false]], "find_grid_operator() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_grid_operator", false]], "find_k() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_k", false]], "find_prime_factor_z_omega() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.find_prime_factor_Z_OMEGA", false]], "find_prime_factors_integers() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.find_prime_factors_integers", false]], "find_prime_factors_z_sqrt2() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.find_prime_factors_Z_SQRT2", false]], "find_u_candidates_direct() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.find_u_candidates_direct", false]], "finish() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.finish", false]], "first_two_items() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.first_two_items", false]], "firstquantized (class in src.pyliqtr.blockencodings.firstquantized)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized", false]], "firstquantized (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.FirstQuantized", false]], "fit (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.fit", false]], "fitter (class in src.pyliqtr.phase_factors.optimization.fitter)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter", false]], "fixuptableqrom (class in src.pyliqtr.circuits.operators.fixuptableqrom)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM", false]], "flaggedprepareuniformsuperposition (class in src.pyliqtr.circuits.operators.flaggedprepareuniformsuperposition)": [[16, "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.FlaggedPrepareUniformSuperposition", false]], "flagzeroasfailure (class in src.pyliqtr.circuits.operators.flagzeroasfailure)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure", false]], "foperators (class in src.pyliqtr.probleminstances.nonlinearode)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators", false]], "force_det_one() (in module src.pyliqtr.gate_decomp.ellipse)": [[22, "src.pyLIQTR.gate_decomp.ellipse.force_det_one", false]], "free_instructions() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.free_instructions", false]], "free_resources() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.free_resources", false]], "from_axes() (src.pyliqtr.gate_decomp.ellipse.ellipse class method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.from_axes", false]], "from_measurement() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.from_measurement", false]], "from_tf_arrays() (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare class method)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.from_Tf_arrays", false]], "from_tuv_arrays() (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart class method)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.from_TUV_arrays", false]], "from_z_sqrt2() (src.pyliqtr.gate_decomp.rings.z_omega class method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.from_Z_SQRT2", false]], "full() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.full", false]], "func() (src.pyliqtr.phase_factors.named_factors.f_cosine method)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_cosine.func", false]], "func() (src.pyliqtr.phase_factors.named_factors.f_exp_fourier_response method)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_exp_fourier_response.func", false]], "func() (src.pyliqtr.phase_factors.named_factors.f_sine method)": [[25, "src.pyLIQTR.phase_factors.named_factors.f_sine.func", false]], "g_minus() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.g_minus", false]], "g_plus() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.g_plus", false]], "gate_complexity() (in module src.pyliqtr.utils.gate_complexity)": [[31, "src.pyLIQTR.utils.gate_complexity.gate_complexity", false]], "gate_counting() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.gate_counting", false]], "gatecomplexity (class in src.pyliqtr.utils.gate_complexity)": [[31, "src.pyLIQTR.utils.gate_complexity.GateComplexity", false]], "gaussian() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.gaussian", false]], "gen_pre_prepare() (in module src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.gen_pre_prepare", false]], "generate() (src.pyliqtr.phase_factors.angler.angler_abstract method)": [[25, "src.pyLIQTR.phase_factors.angler.Angler_abstract.generate", false]], "generate() (src.pyliqtr.phase_factors.angler.angler_random method)": [[25, "src.pyLIQTR.phase_factors.angler.Angler_random.generate", false]], "generate() (src.pyliqtr.phase_factors.fourier_response.fourier_response.angler_fourier_response method)": [[26, "src.pyLIQTR.phase_factors.fourier_response.fourier_response.Angler_fourier_response.generate", false]], "generate() (src.pyliqtr.phase_factors.optimization.angler_optimization.angler_opt method)": [[27, "src.pyLIQTR.phase_factors.optimization.angler_optimization.Angler_opt.generate", false]], "generate() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.generate", false]], "generate_circuit() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.generate_circuit", false]], "generate_qsp_circuit() (in module src.pyliqtr.circuits.qsp)": [[15, "src.pyLIQTR.circuits.qsp.generate_QSP_circuit", false]], "generate_qubits() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.generate_qubits", false]], "generate_qubits_from_size() (in module src.pyliqtr.circuits.qsp)": [[15, "src.pyLIQTR.circuits.qsp.generate_qubits_from_size", false]], "generate_test_unitary() (src.pyliqtr.phaseestimation.pe.phaseestimation method)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.generate_test_unitary", false]], "generator_decompose() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.generator_decompose", false]], "geometry (class in src.pyliqtr.clam.geometry)": [[19, "src.pyLIQTR.clam.geometry.Geometry", false]], "geometry_angstrom_to_bohr() (in module src.pyliqtr.clam.geometry)": [[19, "src.pyLIQTR.clam.geometry.geometry_angstrom_to_bohr", false]], "get_alpha() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.get_alpha", false]], "get_alpha() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.get_alpha", false]], "get_alpha() (src.pyliqtr.probleminstances.electronicstructure.electronicstructure method)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure.get_alpha", false]], "get_alpha() (src.pyliqtr.probleminstances.fermionic_models.fermihubbardnnn method)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN.get_alpha", false]], "get_alpha() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.get_alpha", false]], "get_alpha() (src.pyliqtr.probleminstances.moleculeparameters.moleculeparameters method)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters.get_alpha", false]], "get_approx_error() (src.pyliqtr.blockencodings.lineart.fermionic_lineart method)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.get_approx_error", false]], "get_approximate_t_depth() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.get_approximate_t_depth", false]], "get_available() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.get_available", false]], "get_center() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.get_center", false]], "get_chebyshev_domain() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.get_chebyshev_domain", false]], "get_clifford_count() (src.pyliqtr.gate_decomp.rotation_gates.decomp_mixin method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin.get_Clifford_count", false]], "get_coeff_norm() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.get_coeff_norm", false]], "get_common_gate_ops() (in module src.pyliqtr.circuits.operators.tests.test_prepare)": [[17, "src.pyLIQTR.circuits.operators.tests.test_prepare.get_common_gate_ops", false]], "get_condition_format_string() (src.pyliqtr.circuits.operators.fixuptableqrom.dataandkeycondition method)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition.get_condition_format_string", false]], "get_data_dependencies() (src.pyliqtr.scheduler.instruction.instruction method)": [[29, "src.pyLIQTR.scheduler.Instruction.Instruction.get_data_dependencies", false]], "get_decomp_levels() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.get_decomp_levels", false]], "get_equiv_class() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.get_equiv_class", false]], "get_givens_angles() (src.pyliqtr.blockencodings.doublefactorized.doublefactorized method)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.get_givens_angles", false]], "get_hdf5() (in module src.pyliqtr.utils.get_hdf5)": [[31, "src.pyLIQTR.utils.get_hdf5.get_hdf5", false]], "get_index_set_zigzag() (in module src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.get_index_set_zigzag", false]], "get_instruction2node_map() (in module src.pyliqtr.scheduler.scheduler_utils)": [[29, "src.pyLIQTR.scheduler.scheduler_utils.get_instruction2node_map", false]], "get_measurement_result() (src.pyliqtr.utils.printing.qasminfo method)": [[31, "src.pyLIQTR.utils.printing.QASMInfo.get_measurement_result", false]], "get_minmax() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.get_minmax", false]], "get_n_m() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.get_n_M", false]], "get_n_r() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.get_n_R", false]], "get_n_t() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.get_n_T", false]], "get_nonzero_match() (in module src.pyliqtr.clam.utilities)": [[19, "src.pyLIQTR.clam.utilities.get_nonzero_match", false]], "get_norm() (src.pyliqtr.probleminstances.matrixinstance.matrixinstance method)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.get_norm", false]], "get_num_plane_waves() (src.pyliqtr.probleminstances.moleculeparameters.moleculeparameters method)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters.get_num_plane_waves", false]], "get_num_pot_sols() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.get_num_pot_sols", false]], "get_num_pot_sols_scaled() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.get_num_pot_sols_scaled", false]], "get_num_rotation_gates() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.get_num_rotation_gates", false]], "get_params_from_geometry_file() (src.pyliqtr.probleminstances.moleculeparameters.moleculeparameters method)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters.get_params_from_geometry_file", false]], "get_parity() (src.pyliqtr.gate_decomp.matrices.so3 method)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3.get_parity", false]], "get_partial_state() (in module src.pyliqtr.circuits.operators.tests.utils)": [[17, "src.pyLIQTR.circuits.operators.tests.utils.get_partial_state", false]], "get_pts() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.get_pts", false]], "get_pts_m() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.get_pts_m", false]], "get_qsp_operators() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.get_qsp_operators", false]], "get_qsp_operators_lcu_r() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.get_qsp_operators_lcu_r", false]], "get_qsp_phase_op() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.get_qsp_phase_op", false]], "get_qsp_signal_op() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.get_qsp_signal_op", false]], "get_qsp_signal_state() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.get_qsp_signal_state", false]], "get_qubits_by_keys() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.get_qubits_by_keys", false]], "get_resouces() (src.pyliqtr.gate_decomp.rotation_gates.decomp_mixin method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin.get_resouces", false]], "get_resource_state() (in module src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.get_resource_state", false]], "get_resource_state() (in module src.pyliqtr.tests.test_qualtran_resource_analyze_single_gate)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate.get_resource_state", false]], "get_ring_elts_direct() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.get_ring_elts_direct", false]], "get_ring_elts_fallback() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.get_ring_elts_fallback", false]], "get_state_vector() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.get_state_vector", false]], "get_steps_from_logeps() (in module src.pyliqtr.phase_factors.fourier_response.fourier_response)": [[26, "src.pyLIQTR.phase_factors.fourier_response.fourier_response.get_steps_from_logeps", false]], "get_syllables() (in module src.pyliqtr.gate_decomp.exact_decomp)": [[22, "src.pyLIQTR.gate_decomp.exact_decomp.get_syllables", false]], "get_t_count() (src.pyliqtr.gate_decomp.rotation_gates.decomp_mixin method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin.get_T_count", false]], "get_t_counts_from_rotations() (in module src.pyliqtr.circuits.pylcircuit)": [[15, "src.pyLIQTR.circuits.pyLCircuit.get_T_counts_from_rotations", false]], "get_t_counts_from_rotations() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.get_T_counts_from_rotations", false]], "get_term() (src.pyliqtr.clam.operator_lattice.operatorunitcell method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell.get_term", false]], "get_units() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.get_units", false]], "get_vector_i() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.get_vector_I", false]], "getangleandqubits() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.getAngleAndQubits", false]], "getangleandqubits2() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.getAngleAndQubits2", false]], "getencoding() (in module src.pyliqtr.blockencodings.getencoding)": [[11, "src.pyLIQTR.BlockEncodings.getEncoding.getEncoding", false]], "gethamiltonianandqubits() (src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings.testencodings method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings.getHamiltonianAndQubits", false]], "gethamiltonianandqubits() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.getHamiltonianAndQubits", false]], "gethamiltonianandqubits2() (src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings.testencodings method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings.getHamiltonianAndQubits2", false]], "gethamiltonianandqubits2() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.getHamiltonianAndQubits2", false]], "getinstance() (in module src.pyliqtr.probleminstances.getinstance)": [[14, "src.pyLIQTR.ProblemInstances.getInstance.getInstance", false]], "getlinequbitindexmap() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.getLineQubitIndexMap", false]], "getlinequbitindexmap() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.getLineQubitIndexMap", false]], "getlogepsilon() (in module src.pyliqtr.phase_factors.fourier_response.fourier_response)": [[26, "src.pyLIQTR.phase_factors.fourier_response.fourier_response.getlogepsilon", false]], "getoperator() (src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings.testencodings method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings.getOperator", false]], "getqubitfrommap() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.getQubitFromMap", false]], "getqubitfrommap() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.getQubitFromMap", false]], "getqubits() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.getQubits", false]], "getqubits2() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.getQubits2", false]], "gett_array (src.pyliqtr.blockencodings.lineart.fermionic_lineart attribute)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.getT_array", false]], "getterms (src.pyliqtr.blockencodings.paulistringlcu.paulistringlcu attribute)": [[11, "src.pyLIQTR.BlockEncodings.PauliStringLCU.PauliStringLCU.getTerms", false]], "getu_array (src.pyliqtr.blockencodings.lineart.fermionic_lineart attribute)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.getU_array", false]], "getunitary() (src.pyliqtr.circuits.operators.tests.test_cyclic_shift.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift.TestTranslation.getUnitary", false]], "getunitary() (src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring.testdiagonalbitstring method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring.getUnitary", false]], "getunitary() (src.pyliqtr.circuits.operators.tests.test_translation.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_translation.TestTranslation.getUnitary", false]], "getv_array (src.pyliqtr.blockencodings.lineart.fermionic_lineart attribute)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.getV_array", false]], "getvector() (src.pyliqtr.circuits.operators.tests.test_cyclic_shift.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift.TestTranslation.getVector", false]], "getvector() (src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring.testdiagonalbitstring method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring.getVector", false]], "getvector() (src.pyliqtr.circuits.operators.tests.test_translation.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_translation.TestTranslation.getVector", false]], "globalqubitmanager (class in src.pyliqtr.utils.global_ancilla_manager)": [[31, "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager", false]], "gradient_optimization() (src.pyliqtr.phase_factors.optimization.angler_optimization.angler_opt method)": [[27, "src.pyLIQTR.phase_factors.optimization.angler_optimization.Angler_opt.gradient_optimization", false]], "gridoperator (class in src.pyliqtr.gate_decomp.grid_operator)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator", false]], "gridpt_to_id() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.gridpt_to_id", false]], "h() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.H", false]], "ham_from_pauli_tuples() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ham_from_pauli_tuples", false]], "hamiltonian (class in src.pyliqtr.utils.hamiltonian)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian", false]], "hamiltonian_tensors (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian attribute)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.hamiltonian_tensors", false]], "hamiltoniancoefficients (class in src.pyliqtr.pest_interface.pest_python)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients", false]], "handle_scalar() (in module src.pyliqtr.phase_factors.optimization.angler_optimization)": [[27, "src.pyLIQTR.phase_factors.optimization.angler_optimization.handle_scalar", false]], "handle_scalar() (in module src.pyliqtr.phase_factors.optimization.expander)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.handle_scalar", false]], "heisenberg (class in src.pyliqtr.probleminstances.spin_models)": [[14, "src.pyLIQTR.ProblemInstances.spin_models.Heisenberg", false]], "heisenberg_phase_estimation() (in module src.pyliqtr.utils.tests.conftest)": [[32, "src.pyLIQTR.utils.tests.conftest.heisenberg_phase_estimation", false]], "heisenberg_phase_estimation() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.heisenberg_phase_estimation", false]], "hundred_gates() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.hundred_gates", false]], "i() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.I", false]], "i() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.I", false]], "id_to_gridpt() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.id_to_gridpt", false]], "ig_plot_convergence() (in module src.pyliqtr.utils.plot_helpers)": [[31, "src.pyLIQTR.utils.plot_helpers.ig_plot_convergence", false]], "ig_plot_fit() (in module src.pyliqtr.utils.plot_helpers)": [[31, "src.pyLIQTR.utils.plot_helpers.ig_plot_fit", false]], "ig_plot_scalar_qsp() (in module src.pyliqtr.utils.plot_helpers)": [[31, "src.pyLIQTR.utils.plot_helpers.ig_plot_scalar_qsp", false]], "increase() (in module src.pyliqtr.gate_decomp.rings)": [[22, "src.pyLIQTR.gate_decomp.rings.increase", false]], "incrementbooleantree() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.incrementBooleanTree", false]], "incrementbooleantree() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.incrementBooleanTree", false]], "init_state (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.init_state", false]], "inner_prep_extra_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.inner_prep_extra_registers", false]], "innerprepare (class in src.pyliqtr.circuits.operators.df_innerprepare)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare", false]], "instruction (class in src.pyliqtr.scheduler.instruction)": [[29, "src.pyLIQTR.scheduler.Instruction.Instruction", false]], "intercept_decompose() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.intercept_decompose", false]], "inverse() (src.pyliqtr.gate_decomp.grid_operator.gridoperator method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.inverse", false]], "inverse() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.inverse", false]], "is_adjoint (src.pyliqtr.circuits.operators.preparenu.testnuinequality attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.is_adjoint", false]], "is_directcpt_gate() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.is_directCpT_gate", false]], "is_fermionic (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.is_fermionic", false]], "is_filtered_gate() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.is_filtered_gate", false]], "is_gate_clifford_plus_t() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.is_gate_clifford_plus_T", false]], "is_lcu (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.is_lcu", false]], "is_odd() (in module src.pyliqtr.gate_decomp.matrices)": [[22, "src.pyLIQTR.gate_decomp.matrices.is_odd", false]], "is_positive_semi_definite() (src.pyliqtr.gate_decomp.ellipse.ellipse method)": [[22, "src.pyLIQTR.gate_decomp.ellipse.Ellipse.is_positive_semi_definite", false]], "is_prime() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.is_prime", false]], "is_reducible() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.is_reducible", false]], "is_reducible() (in module src.pyliqtr.gate_decomp.rings)": [[22, "src.pyLIQTR.gate_decomp.rings.is_reducible", false]], "islinux() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.isLinux", false]], "ismac() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.isMac", false]], "iswindows() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.isWindows", false]], "ja_cos() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.ja_cos", false]], "ja_sin() (src.pyliqtr.phase_factors.optimization.expander.expander method)": [[27, "src.pyLIQTR.phase_factors.optimization.expander.Expander.ja_sin", false]], "junk_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.junk_registers", false]], "junk_registers (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.junk_registers", false]], "junk_registers (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.junk_registers", false]], "junk_registers (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.junk_registers", false]], "junk_registers (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.junk_registers", false]], "junk_registers (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.junk_registers", false]], "junk_registers (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.junk_registers", false]], "junk_registers (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.junk_registers", false]], "junk_registers (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.junk_registers", false]], "k() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.K", false]], "kagomelattice (class in src.pyliqtr.clam.lattice_definitions)": [[19, "src.pyLIQTR.clam.lattice_definitions.KagomeLattice", false]], "keep (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.keep", false]], "keep (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.keep", false]], "keep() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.keep", false]], "keep_bitsize (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.keep_bitsize", false]], "keep_bitsize (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.keep_bitsize", false]], "keep_bitsize (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.keep_bitsize", false]], "keep_bitsize (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.keep_bitsize", false]], "keep_data (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.keep_data", false]], "keys (src.pyliqtr.circuits.operators.fixuptableqrom.dataandkeycondition attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition.keys", false]], "l1_norm_of_coeffs (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.l1_norm_of_coeffs", false]], "label_to_pauli() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.label_to_pauli", false]], "lam (src.pyliqtr.blockencodings.firstquantized.firstquantized attribute)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.lam", false]], "lam (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian attribute)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.lam", false]], "lam_tp() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.lam_Tp", false]], "lam_u() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.lam_U", false]], "lam_v() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.lam_V", false]], "lambda_zeta (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.lambda_zeta", false]], "lambda_zeta (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.lambda_zeta", false]], "lattice (class in src.pyliqtr.clam.lattice)": [[19, "src.pyLIQTR.clam.lattice.Lattice", false]], "lattice_to_ops() (src.pyliqtr.clam.operator_lattice.operatorlattice method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorLattice.lattice_to_ops", false]], "latticeinstance (class in src.pyliqtr.probleminstances.latticeinstance)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance", false]], "lcucorrections (class in src.pyliqtr.blockencodings.carlemanlinearization)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUCorrections", false]], "lcuprep (class in src.pyliqtr.blockencodings.carlemanlinearization)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep", false]], "legacy_resource_profile() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.legacy_resource_profile", false]], "lineart (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.LinearT", false]], "listify() (in module src.pyliqtr.clam.utilities)": [[19, "src.pyLIQTR.clam.utilities.listify", false]], "load() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.load", false]], "load_coordinates() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.load_coordinates", false]], "loglen (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.loglen", false]], "logm_vals (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.logM_vals", false]], "m_param (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.m_param", false]], "m_param (src.pyliqtr.circuits.operators.preparenu.preparenustate attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.m_param", false]], "m_param (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.m_param", false]], "m_to_np() (in module src.pyliqtr.phase_factors.optimization.fitter)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.m_to_np", false]], "m_vals (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.M_vals", false]], "magnitude_squared() (src.pyliqtr.gate_decomp.rings.z_omega method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.magnitude_squared", false]], "main() (in module src.pyliqtr.gate_decomp.tests.benchmarks)": [[23, "src.pyLIQTR.gate_decomp.tests.benchmarks.main", false]], "make_on() (src.pyliqtr.circuits.operators.binarytounary.binarytounary class method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.make_on", false]], "make_on() (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits class method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.make_on", false]], "make_on() (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation class method)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.make_on", false]], "manual_link() (in module src.pyliqtr.scheduler.scheduler_utils)": [[29, "src.pyLIQTR.scheduler.scheduler_utils.manual_link", false]], "mat_d_omega (class in src.pyliqtr.gate_decomp.matrices)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA", false]], "matrix (src.pyliqtr.probleminstances.matrixinstance.matrixinstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.matrix", false]], "matrix() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.matrix", false]], "matrix() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.matrix", false]], "matrix() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.matrix", false]], "matrixinstance (class in src.pyliqtr.probleminstances.matrixinstance)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance", false]], "measure_obs_site() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.measure_obs_site", false]], "measurement_uncompute() (src.pyliqtr.circuits.operators.qromwithmeasurementuncompute.qromwithmeasurementuncompute method)": [[16, "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute.QROMwithMeasurementUncompute.measurement_uncompute", false]], "med_phase (src.pyliqtr.phaseestimation.pe_sim.pe_simulator attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.med_phase", false]], "minmax() (in module src.pyliqtr.clam.utilities)": [[19, "src.pyLIQTR.clam.utilities.minmax", false]], "mk() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk", false]], "mk() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk", false]], "mk_id() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_id", false]], "mk_id() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_id", false]], "mk_id_s() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_id_s", false]], "mk_id_s() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_id_s", false]], "mk_idpad() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_idpad", false]], "mk_idpad() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_idpad", false]], "mk_idpad_s() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_idpad_s", false]], "mk_idpad_s() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_idpad_s", false]], "mk_ksum() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_ksum", false]], "mk_ksum() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_ksum", false]], "mk_ksum_s() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_ksum_s", false]], "mk_ksum_s() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_ksum_s", false]], "mk_n() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_n", false]], "mk_n() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_n", false]], "mk_n_s() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_n_s", false]], "mk_n_s() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_n_s", false]], "mk_s() (in module src.pyliqtr.clam.linearization_tools.multilinear_algebra)": [[20, "src.pyLIQTR.clam.linearization_tools.multilinear_algebra.mk_s", false]], "mk_s() (in module src.pyliqtr.clam.multilinear_algebra)": [[19, "src.pyLIQTR.clam.multilinear_algebra.mk_s", false]], "mod (src.pyliqtr.circuits.operators.addmod.addmod attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.mod", false]], "modify_coeff() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.modify_coeff", false]], "modify_type() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.modify_type", false]], "modular_sqrtm1() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.modular_sqrtm1", false]], "modular_square_root() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.modular_square_root", false]], "module": [[1, "module-pyLIQTR", false], [9, "module-src", false], [10, "module-src.pyLIQTR", false], [11, "module-src.pyLIQTR.BlockEncodings", false], [11, "module-src.pyLIQTR.BlockEncodings.BlockEncoding", false], [11, "module-src.pyLIQTR.BlockEncodings.CarlemanLinearization", false], [11, "module-src.pyLIQTR.BlockEncodings.DoubleFactorized", false], [11, "module-src.pyLIQTR.BlockEncodings.FirstQuantized", false], [11, "module-src.pyLIQTR.BlockEncodings.LinearT", false], [11, "module-src.pyLIQTR.BlockEncodings.PauliStringLCU", false], [11, "module-src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", false], [11, "module-src.pyLIQTR.BlockEncodings.getEncoding", false], [12, "module-src.pyLIQTR.PhaseEstimation", false], [12, "module-src.pyLIQTR.PhaseEstimation.pe", false], [12, "module-src.pyLIQTR.PhaseEstimation.pe_gates", false], [12, "module-src.pyLIQTR.PhaseEstimation.pe_sim", false], [13, "module-src.pyLIQTR.PhaseEstimation.tests", false], [13, "module-src.pyLIQTR.PhaseEstimation.tests.test_pe_gates", false], [14, "module-src.pyLIQTR.ProblemInstances", false], [14, "module-src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", false], [14, "module-src.pyLIQTR.ProblemInstances.ElectronicStructure", false], [14, "module-src.pyLIQTR.ProblemInstances.LatticeInstance", false], [14, "module-src.pyLIQTR.ProblemInstances.MatrixInstance", false], [14, "module-src.pyLIQTR.ProblemInstances.MoleculeParameters", false], [14, "module-src.pyLIQTR.ProblemInstances.NonlinearODE", false], [14, "module-src.pyLIQTR.ProblemInstances.ProblemInstance", false], [14, "module-src.pyLIQTR.ProblemInstances.fermionic_models", false], [14, "module-src.pyLIQTR.ProblemInstances.getInstance", false], [14, "module-src.pyLIQTR.ProblemInstances.spin_models", false], [15, "module-src.pyLIQTR.circuits", false], [15, "module-src.pyLIQTR.circuits.pyLCircuit", false], [15, "module-src.pyLIQTR.circuits.pyLOperator", false], [15, "module-src.pyLIQTR.circuits.qsp", false], [16, "module-src.pyLIQTR.circuits.operators", false], [16, "module-src.pyLIQTR.circuits.operators.AddMod", false], [16, "module-src.pyLIQTR.circuits.operators.BinaryToUnary", false], [16, "module-src.pyLIQTR.circuits.operators.BitwiseZRotation", false], [16, "module-src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard", false], [16, "module-src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", false], [16, "module-src.pyLIQTR.circuits.operators.DF_InnerPrepare", false], [16, "module-src.pyLIQTR.circuits.operators.DF_OuterPrepare", false], [16, "module-src.pyLIQTR.circuits.operators.DF_RotationsBlock", false], [16, "module-src.pyLIQTR.circuits.operators.EqualityTest", false], [16, "module-src.pyLIQTR.circuits.operators.ExampleFMatrices", false], [16, "module-src.pyLIQTR.circuits.operators.FixupTableQROM", false], [16, "module-src.pyLIQTR.circuits.operators.FlagZeroAsFailure", false], [16, "module-src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", false], [16, "module-src.pyLIQTR.circuits.operators.PhaseGradientRotation", false], [16, "module-src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded", false], [16, "module-src.pyLIQTR.circuits.operators.PrepareNu", false], [16, "module-src.pyLIQTR.circuits.operators.PrepareNuSuperposition", false], [16, "module-src.pyLIQTR.circuits.operators.PreparePowerTwoState", false], [16, "module-src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized", false], [16, "module-src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized", false], [16, "module-src.pyLIQTR.circuits.operators.ProductPauliExponentials", false], [16, "module-src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", false], [16, "module-src.pyLIQTR.circuits.operators.RotationsQROM", false], [16, "module-src.pyLIQTR.circuits.operators.UniformSuperpositionIJ", false], [16, "module-src.pyLIQTR.circuits.operators.cascading_translation", false], [16, "module-src.pyLIQTR.circuits.operators.cyclic_shift", false], [16, "module-src.pyLIQTR.circuits.operators.diagonal_bitstring", false], [16, "module-src.pyLIQTR.circuits.operators.hamiltonian_encodings", false], [16, "module-src.pyLIQTR.circuits.operators.multiCZ", false], [16, "module-src.pyLIQTR.circuits.operators.prepare", false], [16, "module-src.pyLIQTR.circuits.operators.prepare_FirstQuantized", false], [16, "module-src.pyLIQTR.circuits.operators.prepare_LinearT", false], [16, "module-src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", false], [16, "module-src.pyLIQTR.circuits.operators.reflect", false], [16, "module-src.pyLIQTR.circuits.operators.selectV", false], [16, "module-src.pyLIQTR.circuits.operators.selectVutils", false], [16, "module-src.pyLIQTR.circuits.operators.select_LinearT", false], [16, "module-src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", false], [16, "module-src.pyLIQTR.circuits.operators.select_prepare_pauli", false], [16, "module-src.pyLIQTR.circuits.operators.swap_network", false], [16, "module-src.pyLIQTR.circuits.operators.translation", false], [17, "module-src.pyLIQTR.circuits.operators.tests", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_EqualityTest", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_RotationsQROM", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_cyclic_shift", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_multiCZ", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_prepare", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_qtAdd", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_reflect", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_selectV", false], [17, "module-src.pyLIQTR.circuits.operators.tests.test_translation", false], [17, "module-src.pyLIQTR.circuits.operators.tests.utils", false], [18, "module-src.pyLIQTR.circuits.tests", false], [18, "module-src.pyLIQTR.circuits.tests.test_pyLCircuit", false], [18, "module-src.pyLIQTR.circuits.tests.test_pyLOperator", false], [19, "module-src.pyLIQTR.clam", false], [19, "module-src.pyLIQTR.clam.cell_complex", false], [19, "module-src.pyLIQTR.clam.geometry", false], [19, "module-src.pyLIQTR.clam.lattice", false], [19, "module-src.pyLIQTR.clam.lattice_definitions", false], [19, "module-src.pyLIQTR.clam.multilinear_algebra", false], [19, "module-src.pyLIQTR.clam.operator_complex", false], [19, "module-src.pyLIQTR.clam.operator_lattice", false], [19, "module-src.pyLIQTR.clam.operator_sims", false], [19, "module-src.pyLIQTR.clam.operator_strings", false], [19, "module-src.pyLIQTR.clam.operators", false], [19, "module-src.pyLIQTR.clam.physical_data", false], [19, "module-src.pyLIQTR.clam.simqsp", false], [19, "module-src.pyLIQTR.clam.tensor_methods", false], [19, "module-src.pyLIQTR.clam.time_dynamics", false], [19, "module-src.pyLIQTR.clam.utilities", false], [20, "module-src.pyLIQTR.clam.linearization_tools", false], [20, "module-src.pyLIQTR.clam.linearization_tools.multilinear_algebra", false], [20, "module-src.pyLIQTR.clam.linearization_tools.vlasov_spectral", false], [21, "module-src.pyLIQTR.clam.tests", false], [21, "module-src.pyLIQTR.clam.tests.test_heisenberg", false], [22, "module-src.pyLIQTR.gate_decomp", false], [22, "module-src.pyLIQTR.gate_decomp.cirq_transforms", false], [22, "module-src.pyLIQTR.gate_decomp.clifford_gates", false], [22, "module-src.pyLIQTR.gate_decomp.ellipse", false], [22, "module-src.pyLIQTR.gate_decomp.exact_decomp", false], [22, "module-src.pyLIQTR.gate_decomp.gate_approximation", false], [22, "module-src.pyLIQTR.gate_decomp.grid_operator", false], [22, "module-src.pyLIQTR.gate_decomp.matrices", false], [22, "module-src.pyLIQTR.gate_decomp.point_enumeration", false], [22, "module-src.pyLIQTR.gate_decomp.rings", false], [22, "module-src.pyLIQTR.gate_decomp.rotation_gates", false], [22, "module-src.pyLIQTR.gate_decomp.solve_diophantine", false], [23, "module-src.pyLIQTR.gate_decomp.tests", false], [23, "module-src.pyLIQTR.gate_decomp.tests.benchmarks", false], [23, "module-src.pyLIQTR.gate_decomp.tests.conftest", false], [23, "module-src.pyLIQTR.gate_decomp.tests.test_cirq_transformers", false], [23, "module-src.pyLIQTR.gate_decomp.tests.test_exact_decomp", false], [23, "module-src.pyLIQTR.gate_decomp.tests.test_matrices", false], [23, "module-src.pyLIQTR.gate_decomp.tests.test_point_enumeration", false], [23, "module-src.pyLIQTR.gate_decomp.tests.test_solve_diophantine", false], [24, "module-src.pyLIQTR.pest_interface", false], [24, "module-src.pyLIQTR.pest_interface.pest_python", false], [25, "module-src.pyLIQTR.phase_factors", false], [25, "module-src.pyLIQTR.phase_factors.angler", false], [25, "module-src.pyLIQTR.phase_factors.conversions", false], [25, "module-src.pyLIQTR.phase_factors.named_factors", false], [25, "module-src.pyLIQTR.phase_factors.phase_factors", false], [25, "module-src.pyLIQTR.phase_factors.simulation", false], [26, "module-src.pyLIQTR.phase_factors.fourier_response", false], [26, "module-src.pyLIQTR.phase_factors.fourier_response.fourier_response", false], [27, "module-src.pyLIQTR.phase_factors.optimization", false], [27, "module-src.pyLIQTR.phase_factors.optimization.ChebyshevPoly", false], [27, "module-src.pyLIQTR.phase_factors.optimization.angler_optimization", false], [27, "module-src.pyLIQTR.phase_factors.optimization.expander", false], [27, "module-src.pyLIQTR.phase_factors.optimization.fitter", false], [28, "module-src.pyLIQTR.qubitization", false], [28, "module-src.pyLIQTR.qubitization.phase_estimation", false], [28, "module-src.pyLIQTR.qubitization.qsvt", false], [28, "module-src.pyLIQTR.qubitization.qsvt_dynamics", false], [28, "module-src.pyLIQTR.qubitization.qubitized_gates", false], [29, "module-src.pyLIQTR.scheduler", false], [29, "module-src.pyLIQTR.scheduler.DAG", false], [29, "module-src.pyLIQTR.scheduler.Instruction", false], [29, "module-src.pyLIQTR.scheduler.scheduler", false], [29, "module-src.pyLIQTR.scheduler.scheduler_utils", false], [29, "module-src.pyLIQTR.scheduler.sets", false], [30, "module-src.pyLIQTR.tests", false], [30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates", false], [30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate", false], [31, "module-src.pyLIQTR.utils", false], [31, "module-src.pyLIQTR.utils.Hamiltonian", false], [31, "module-src.pyLIQTR.utils.circuit_decomposition", false], [31, "module-src.pyLIQTR.utils.gate_complexity", false], [31, "module-src.pyLIQTR.utils.get_hdf5", false], [31, "module-src.pyLIQTR.utils.global_ancilla_manager", false], [31, "module-src.pyLIQTR.utils.pauli_string_manip", false], [31, "module-src.pyLIQTR.utils.plot_helpers", false], [31, "module-src.pyLIQTR.utils.printing", false], [31, "module-src.pyLIQTR.utils.qsp_helpers", false], [31, "module-src.pyLIQTR.utils.resource_analysis", false], [31, "module-src.pyLIQTR.utils.utils", false], [32, "module-src.pyLIQTR.utils.tests", false], [32, "module-src.pyLIQTR.utils.tests.conftest", false], [32, "module-src.pyLIQTR.utils.tests.test_gate_complexity", false], [32, "module-src.pyLIQTR.utils.tests.test_printing", false], [32, "module-src.pyLIQTR.utils.tests.test_resoure_analyze", false], [32, "module-src.pyLIQTR.utils.tests.test_utils", false], [34, "module-src.pyLIQTR.BlockEncodings.BlockEncoding", false], [35, "module-src.pyLIQTR.BlockEncodings.CarlemanLinearization", false], [36, "module-src.pyLIQTR.BlockEncodings.DoubleFactorized", false], [37, "module-src.pyLIQTR.BlockEncodings.FirstQuantized", false], [38, "module-src.pyLIQTR.BlockEncodings.LinearT", false], [39, "module-src.pyLIQTR.BlockEncodings.PauliStringLCU", false], [40, "module-src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", false], [41, "module-src.pyLIQTR.BlockEncodings.getEncoding", false], [42, "module-src.pyLIQTR.PhaseEstimation.pe", false], [43, "module-src.pyLIQTR.PhaseEstimation.pe_gates", false], [44, "module-src.pyLIQTR.PhaseEstimation.pe_sim", false], [45, "module-src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", false], [46, "module-src.pyLIQTR.ProblemInstances.ElectronicStructure", false], [47, "module-src.pyLIQTR.ProblemInstances.LatticeInstance", false], [48, "module-src.pyLIQTR.ProblemInstances.MatrixInstance", false], [49, "module-src.pyLIQTR.ProblemInstances.NonlinearODE", false], [50, "module-src.pyLIQTR.ProblemInstances.ProblemInstance", false], [51, "module-src.pyLIQTR.ProblemInstances.fermionic_models", false], [52, "module-src.pyLIQTR.ProblemInstances.getInstance", false], [53, "module-src.pyLIQTR.ProblemInstances.spin_models", false], [54, "module-src.pyLIQTR.circuits.operators.AddMod", false], [55, "module-src.pyLIQTR.circuits.operators.BinaryToUnary", false], [56, "module-src.pyLIQTR.circuits.operators.BitwiseZRotation", false], [57, "module-src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", false], [58, "module-src.pyLIQTR.circuits.operators.DF_InnerPrepare", false], [59, "module-src.pyLIQTR.circuits.operators.DF_OuterPrepare", false], [60, "module-src.pyLIQTR.circuits.operators.DF_RotationsBlock", false], [61, "module-src.pyLIQTR.circuits.operators.ExampleFMatrices", false], [62, "module-src.pyLIQTR.circuits.operators.FixupTableQROM", false], [63, "module-src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", false], [64, "module-src.pyLIQTR.circuits.operators.PhaseGradientRotation", false], [65, "module-src.pyLIQTR.circuits.operators.ProductPauliExponentials", false], [66, "module-src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", false], [67, "module-src.pyLIQTR.circuits.operators.RotationsQROM", false], [68, "module-src.pyLIQTR.circuits.operators.cascading_translation", false], [69, "module-src.pyLIQTR.circuits.operators.cyclic_shift", false], [70, "module-src.pyLIQTR.circuits.operators.diagonal_bitstring", false], [71, "module-src.pyLIQTR.circuits.operators.hamiltonian_encodings", false], [72, "module-src.pyLIQTR.circuits.operators.multiCZ", false], [73, "module-src.pyLIQTR.circuits.operators.prepare", false], [74, "module-src.pyLIQTR.circuits.operators.prepare_LinearT", false], [75, "module-src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", false], [76, "module-src.pyLIQTR.circuits.operators.reflect", false], [77, "module-src.pyLIQTR.circuits.operators.selectV", false], [78, "module-src.pyLIQTR.circuits.operators.selectVutils", false], [79, "module-src.pyLIQTR.circuits.operators.select_LinearT", false], [80, "module-src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", false], [81, "module-src.pyLIQTR.circuits.operators.select_prepare_pauli", false], [82, "module-src.pyLIQTR.circuits.operators.swap_network", false], [83, "module-src.pyLIQTR.circuits.operators.translation", false], [84, "module-src.pyLIQTR.clam.cell_complex", false], [85, "module-src.pyLIQTR.clam.geometry", false], [86, "module-src.pyLIQTR.clam.lattice_definitions", false], [87, "module-src.pyLIQTR.clam.multilinear_algebra", false], [88, "module-src.pyLIQTR.clam.operator_complex", false], [89, "module-src.pyLIQTR.clam.operator_lattice", false], [90, "module-src.pyLIQTR.clam.operator_sims", false], [91, "module-src.pyLIQTR.clam.operator_strings", false], [92, "module-src.pyLIQTR.clam.operators", false], [93, "module-src.pyLIQTR.clam.physical_data", false], [94, "module-src.pyLIQTR.clam.simqsp", false], [95, "module-src.pyLIQTR.clam.tensor_methods", false], [96, "module-src.pyLIQTR.clam.time_dynamics", false], [97, "module-src.pyLIQTR.gate_decomp.cirq_transforms", false], [98, "module-src.pyLIQTR.gate_decomp.clifford_gates", false], [99, "module-src.pyLIQTR.gate_decomp.ellipse", false], [100, "module-src.pyLIQTR.gate_decomp.exact_decomp", false], [101, "module-src.pyLIQTR.gate_decomp.gate_approximation", false], [102, "module-src.pyLIQTR.gate_decomp.grid_operator", false], [103, "module-src.pyLIQTR.gate_decomp.matrices", false], [104, "module-src.pyLIQTR.gate_decomp.point_enumeration", false], [105, "module-src.pyLIQTR.gate_decomp.rings", false], [106, "module-src.pyLIQTR.gate_decomp.rotation_gates", false], [107, "module-src.pyLIQTR.gate_decomp.solve_diophantine", false], [108, "module-src.pyLIQTR.phase_factors.angler", false], [109, "module-src.pyLIQTR.phase_factors.conversions", false], [110, "module-src.pyLIQTR.phase_factors.named_factors", false], [111, "module-src.pyLIQTR.phase_factors.phase_factors", false], [112, "module-src.pyLIQTR.phase_factors.simulation", false], [113, "module-src.pyLIQTR.qubitization.phase_estimation", false], [114, "module-src.pyLIQTR.qubitization.qsvt", false], [115, "module-src.pyLIQTR.qubitization.qsvt_dynamics", false], [116, "module-src.pyLIQTR.qubitization.qubitized_gates", false], [117, "module-src.pyLIQTR.scheduler.DAG", false], [118, "module-src.pyLIQTR.scheduler.Instruction", false], [119, "module-src.pyLIQTR.scheduler.scheduler", false], [120, "module-src.pyLIQTR.scheduler.scheduler_utils", false], [121, "module-src.pyLIQTR.scheduler.sets", false], [122, "module-src.pyLIQTR.utils.Hamiltonian", false], [123, "module-src.pyLIQTR.utils.circuit_decomposition", false], [124, "module-src.pyLIQTR.utils.get_hdf5", false], [125, "module-src.pyLIQTR.utils.global_ancilla_manager", false], [126, "module-src.pyLIQTR.utils.pauli_string_manip", false], [127, "module-src.pyLIQTR.utils.plot_helpers", false], [128, "module-src.pyLIQTR.utils.printing", false], [129, "module-src.pyLIQTR.utils.qsp_helpers", false], [130, "module-src.pyLIQTR.utils.resource_analysis", false], [131, "module-src.pyLIQTR.utils.utils", false]], "moleculeparameters (class in src.pyliqtr.probleminstances.moleculeparameters)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters", false]], "move_ready_to_execute() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.move_ready_to_execute", false]], "mu (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.mu", false]], "mu (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.mu", false]], "mul_by_sqrt2() (src.pyliqtr.gate_decomp.rings.z_omega method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.mul_by_sqrt2", false]], "mult_pow_2() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.mult_pow_2", false]], "mult_x_y_pt() (src.pyliqtr.gate_decomp.grid_operator.gridoperator method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.mult_x_y_pt", false]], "multi_ccx() (in module src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.multi_ccx", false]], "multicz (class in src.pyliqtr.circuits.operators.multicz)": [[16, "src.pyLIQTR.circuits.operators.multiCZ.MultiCZ", false]], "multiplex_aux() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.multiplex_aux", false]], "multiplex_aux() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.multiplex_aux", false]], "multiplexor() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.multiplexor", false]], "multiplexor() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.multiplexor", false]], "multiply_z_omega() (src.pyliqtr.gate_decomp.grid_operator.gridoperator method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.multiply_z_omega", false]], "n_bits (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.n_bits", false]], "n_lcu_terms() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.n_lcu_terms", false]], "n_lxi (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.n_LXi", false]], "n_phis (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.n_phis", false]], "n_points() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.n_points", false]], "n_qubits (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.electronicstructure.electronicstructure method)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.fermionic_models.fermihubbard method)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbard.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.fermionic_models.fermihubbardnnn method)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.matrixinstance.matrixinstance method)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.moleculeparameters.moleculeparameters method)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.nonlinearode.foperators method)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators.n_qubits", false]], "n_qubits() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.n_qubits", false]], "n_terms() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.n_terms", false]], "n_xi (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.n_Xi", false]], "n_xi (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.n_Xi", false]], "norm (src.pyliqtr.probleminstances.matrixinstance.matrixinstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.norm", false]], "normalize() (src.pyliqtr.probleminstances.matrixinstance.matrixinstance method)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.normalize", false]], "normalize_pauli_lcu() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.normalize_pauli_lcu", false]], "nth_operation() (src.pyliqtr.circuits.operators.binarytounary.binarytounary method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.nth_operation", false]], "nth_operation() (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary method)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.nth_operation", false]], "nth_operation() (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom method)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.nth_operation", false]], "nth_operation() (src.pyliqtr.circuits.operators.swap_network.swapunary method)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.nth_operation", false]], "nth_operation_callgraph() (src.pyliqtr.circuits.operators.rotationsqrom.rotationsqrom method)": [[16, "src.pyLIQTR.circuits.operators.RotationsQROM.RotationsQROM.nth_operation_callgraph", false]], "num_atoms (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_atoms", false]], "num_atoms (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.num_atoms", false]], "num_bits_m (src.pyliqtr.circuits.operators.preparenu.testnuinequality attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.num_bits_m", false]], "num_bits_nuc_pos (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_bits_nuc_pos", false]], "num_bits_nuc_pos (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.num_bits_nuc_pos", false]], "num_bits_p (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_bits_p", false]], "num_bits_p (src.pyliqtr.circuits.operators.preparenu.preparenustate attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.num_bits_p", false]], "num_bits_p (src.pyliqtr.circuits.operators.preparenu.testnuinequality attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.num_bits_p", false]], "num_bits_p (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.num_bits_p", false]], "num_bits_rot_aa (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_bits_rot_aa", false]], "num_bits_t (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_bits_t", false]], "num_data_bits (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.num_data_bits", false]], "num_phases (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.num_phases", false]], "num_qubits() (src.pyliqtr.blockencodings.blockencoding.blockencoding method)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare method)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.carlemanlinearization.lcucorrections method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUCorrections.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.carlemanlinearization.lcuprep method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.carlemanlinearization.swapcorrections method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.SwapCorrections.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.doublefactorized.doublefactorized method)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding method)": [[11, "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.lineart.fermionic_lineart method)": [[11, "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT.num_qubits", false]], "num_qubits() (src.pyliqtr.blockencodings.paulistringlcu.paulistringlcu method)": [[11, "src.pyLIQTR.BlockEncodings.PauliStringLCU.PauliStringLCU.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.addmod.addmod method)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.binarytounary.binarytounary method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits method)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.bitwisezrotation.bitwisezrotation method)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.cascading_translation.cascadingtranslation method)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary method)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard.catalyticallycontrolledhadamard method)": [[16, "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition method)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.cyclic_shift.cyclicshiftpermutation method)": [[16, "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare method)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare method)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock method)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.diagonal_bitstring.diagonalbitstring method)": [[16, "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.equalitytest.equalitytest method)": [[16, "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.examplefmatrices.f0_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.examplefmatrices.f1_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.examplefmatrices.f2_operator method)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom method)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.flaggedprepareuniformsuperposition.flaggedprepareuniformsuperposition method)": [[16, "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.FlaggedPrepareUniformSuperposition.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.flagzeroasfailure.flagzeroasfailure method)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.hamiltonian_encodings.unitaryblockencode method)": [[16, "src.pyLIQTR.circuits.operators.hamiltonian_encodings.UnitaryBlockEncode.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.multicz.multicz method)": [[16, "src.pyLIQTR.circuits.operators.multiCZ.MultiCZ.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation method)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart method)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart method)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.fermionprepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.fermionpreprepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrePrepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.preparemuunaryencoded.preparemuunaryencoded method)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.preparenusuperposition.preparenusuperposition method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.preparepowertwostate.preparepowertwostate method)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.preparet_firstquantized.preparet_firstquantized method)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials method)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.qromwithmeasurementuncompute.qromwithmeasurementuncompute method)": [[16, "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute.QROMwithMeasurementUncompute.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.reflect.reflect method)": [[16, "src.pyLIQTR.circuits.operators.reflect.Reflect.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.rotationsqrom.rotationsqrom method)": [[16, "src.pyLIQTR.circuits.operators.RotationsQROM.RotationsQROM.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart method)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.select_oracle_pauli_lcu.fermionselect method)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.FermionSelect.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.select_oracle_pauli_lcu.selvbase method)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.SelVBase.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.select_oracle_pauli_lcu.unaryiterate method)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.UnaryIterate.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.select_prepare_pauli.prepare_pauli_lcu method)": [[16, "src.pyLIQTR.circuits.operators.select_prepare_pauli.prepare_pauli_lcu.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.selectv.childsselectv method)": [[16, "src.pyLIQTR.circuits.operators.selectV.ChildsSelectV.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.selectv.qromselectv method)": [[16, "src.pyLIQTR.circuits.operators.selectV.QROMSelectV.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.swap_network.swapnetwork method)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.swap_network.swapunary method)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.translation.translation method)": [[16, "src.pyLIQTR.circuits.operators.translation.Translation.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.operators.uniformsuperpositionij.uniformsuperpositionijfirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization.num_qubits", false]], "num_qubits() (src.pyliqtr.circuits.pyloperator.fakeoperator method)": [[15, "src.pyLIQTR.circuits.pyLOperator.fakeOperator.num_qubits", false]], "num_qubits() (src.pyliqtr.gate_decomp.rotation_gates.decomp_mixin method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin.num_qubits", false]], "num_qubits() (src.pyliqtr.gate_decomp.rotation_gates.rx_decomp method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.rx_decomp.num_qubits", false]], "num_qubits() (src.pyliqtr.gate_decomp.rotation_gates.ry_decomp method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.ry_decomp.num_qubits", false]], "num_qubits() (src.pyliqtr.gate_decomp.rotation_gates.rz_decomp method)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.rz_decomp.num_qubits", false]], "num_qubits() (src.pyliqtr.phaseestimation.pe_gates.phaseoffset method)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.PhaseOffset.num_qubits", false]], "num_qubits() (src.pyliqtr.phaseestimation.pe_gates.s_k method)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.S_k.num_qubits", false]], "num_qubits() (src.pyliqtr.phaseestimation.pe_gates.trotter_unitary method)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.Trotter_Unitary.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation method)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qsvt.qsp_fourier_response method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSP_fourier_response.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qsvt.qsvt_abstract method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qubitized_gates.qubitizedreflection method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qubitized_gates.qubitizedrotation method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation.num_qubits", false]], "num_qubits() (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator method)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.num_qubits", false]], "num_qubits_in_registers() (src.pyliqtr.qubitization.qsvt.qsvt_abstract method)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.num_qubits_in_registers", false]], "num_runs (src.pyliqtr.phaseestimation.pe_sim.pe_simulator attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.num_runs", false]], "num_sites() (src.pyliqtr.clam.lattice.lattice method)": [[19, "src.pyLIQTR.clam.lattice.Lattice.num_sites", false]], "num_target_bits (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.num_target_bits", false]], "odds() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.odds", false]], "op_strings (class in src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings", false]], "op_strings() (src.pyliqtr.clam.operator_lattice.operatorlattice method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorLattice.op_strings", false]], "op_tuple_to_string() (in module src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.op_tuple_to_string", false]], "open_fermion_to_qasm() (in module src.pyliqtr.utils.utils)": [[31, "src.pyLIQTR.utils.utils.open_fermion_to_qasm", false]], "open_grid() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.open_grid", false]], "open_hamiltonian() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.open_hamiltonian", false]], "openqasm() (in module src.pyliqtr.utils.printing)": [[31, "src.pyLIQTR.utils.printing.openqasm", false]], "operator_list() (src.pyliqtr.clam.operator_lattice.operatorlattice method)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorLattice.operator_list", false]], "operator_power (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "id1", false], [12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.operator_power", false]], "operatorcell (class in src.pyliqtr.clam.cell_complex)": [[19, "src.pyLIQTR.clam.cell_complex.OperatorCell", false]], "operatorlattice (class in src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorLattice", false]], "operatorunitcell (class in src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell", false]], "ops() (src.pyliqtr.clam.cell_complex.operatorcell method)": [[19, "src.pyLIQTR.clam.cell_complex.OperatorCell.ops", false]], "optimize() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.optimize", false]], "ostring (class in src.pyliqtr.clam.operator_complex)": [[19, "src.pyLIQTR.clam.operator_complex.OString", false]], "outer_prep_extra_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.outer_prep_extra_registers", false]], "outerprepare (class in src.pyliqtr.circuits.operators.df_outerprepare)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare", false]], "pair_coeff_array() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.pair_coeff_array", false]], "pair_coeff_lookup() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.pair_coeff_lookup", false]], "pairs() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.pairs", false]], "parallelism_analysis() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.parallelism_analysis", false]], "parse_and_reconstruct() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.parse_and_reconstruct", false]], "parse_gate() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.parse_gate", false]], "parse_wfn_traj_op() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.parse_wfn_traj_op", false]], "pauli_terms() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.pauli_terms", false]], "paulilcu (src.pyliqtr.blockencodings.valid_encodings attribute)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS.PauliLCU", false]], "paulistringlcu (class in src.pyliqtr.blockencodings.paulistringlcu)": [[11, "src.pyLIQTR.BlockEncodings.PauliStringLCU.PauliStringLCU", false]], "pe_circuit (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.pe_circuit", false]], "pe_inst (src.pyliqtr.phaseestimation.pe_sim.pe_simulator attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.pe_inst", false]], "pe_simulator (class in src.pyliqtr.phaseestimation.pe_sim)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator", false]], "peq() (src.pyliqtr.blockencodings.firstquantized.firstquantized method)": [[11, "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized.Peq", false]], "phase_estimate (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.phase_estimate", false]], "phase_generator (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.phase_generator", false]], "phase_gradient_bits (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.phase_gradient_bits", false]], "phase_offset (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.phase_offset", false]], "phase_registers (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.phase_registers", false]], "phase_registers (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.phase_registers", false]], "phase_w_to_r() (in module src.pyliqtr.clam.simqsp)": [[19, "src.pyLIQTR.clam.simqsp.phase_w_to_r", false]], "phaseestimation (class in src.pyliqtr.phaseestimation.pe)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation", false]], "phasefactors (class in src.pyliqtr.phase_factors.phase_factors)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors", false]], "phasegradientzrotation (class in src.pyliqtr.circuits.operators.phasegradientrotation)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation", false]], "phaseoffset (class in src.pyliqtr.phaseestimation.pe_gates)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.PhaseOffset", false]], "phases_wx_to_r() (in module src.pyliqtr.phase_factors.conversions)": [[25, "src.pyLIQTR.phase_factors.conversions.phases_Wx_to_R", false]], "phi_wx_to_o() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.phi_Wx_to_O", false]], "phi_wx_to_qsvt() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.phi_Wx_to_qsvt", false]], "phi_wx_to_r() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.phi_Wx_to_R", false]], "phis (src.pyliqtr.phase_factors.phase_factors.phasefactors attribute)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.phis", false]], "plaquette (class in src.pyliqtr.clam.operator_complex)": [[19, "src.pyLIQTR.clam.operator_complex.Plaquette", false]], "plot_expansion_error() (src.pyliqtr.phase_factors.phase_factors.phasefactors method)": [[25, "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors.plot_expansion_error", false]], "plot_func_error() (in module src.pyliqtr.utils.plot_helpers)": [[31, "src.pyLIQTR.utils.plot_helpers.plot_func_error", false]], "pollard_rho() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.pollard_rho", false]], "populate_ready() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.populate_ready", false]], "pp_com (src.pyliqtr.circuits.operators.prepare.prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.pp_com", false]], "pp_com (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.pp_com", false]], "pp_ctl (src.pyliqtr.circuits.operators.prepare.prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.pp_ctl", false]], "pp_ctl (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.pp_ctl", false]], "pp_exp (src.pyliqtr.circuits.operators.prepare.prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.pp_exp", false]], "pp_exp (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.pp_exp", false]], "precision_bits (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.precision_bits", false]], "precision_is_valid() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.precision_is_valid", false]], "precision_order (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.precision_order", false]], "precision_qubit (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "id2", false], [12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.precision_qubit", false]], "prepare (class in src.pyliqtr.circuits.operators.prepare)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare", false]], "prepare_angles() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.prepare_angles", false]], "prepare_angles() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.prepare_angles", false]], "prepare_pauli_lcu (class in src.pyliqtr.circuits.operators.select_prepare_pauli)": [[16, "src.pyLIQTR.circuits.operators.select_prepare_pauli.prepare_pauli_lcu", false]], "preparefirstquantization (class in src.pyliqtr.circuits.operators.prepare_firstquantized)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization", false]], "preparemuunaryencoded (class in src.pyliqtr.circuits.operators.preparemuunaryencoded)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded", false]], "preparenustate (class in src.pyliqtr.circuits.operators.preparenu)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState", false]], "preparenusuperposition (class in src.pyliqtr.circuits.operators.preparenusuperposition)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition", false]], "prepareoracle() (in module src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.PrepareOracle", false]], "preparepowertwostate (class in src.pyliqtr.circuits.operators.preparepowertwostate)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState", false]], "preparet_firstquantized (class in src.pyliqtr.circuits.operators.preparet_firstquantized)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized", false]], "prepareuvfirstquantization (class in src.pyliqtr.circuits.operators.prepareuv_firstquantized)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization", false]], "pretty_name() (src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard.catalyticallycontrolledhadamard method)": [[16, "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.flagzeroasfailure.flagzeroasfailure method)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparemuunaryencoded.preparemuunaryencoded method)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparenu.preparenustate method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparenu.testnuinequality method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparenusuperposition.preparenusuperposition method)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparepowertwostate.preparepowertwostate method)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.preparet_firstquantized.preparet_firstquantized method)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized.pretty_name", false]], "pretty_name() (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization method)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.pretty_name", false]], "print() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.print", false]], "print_unit_cell() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.print_unit_cell", false]], "print_xyz() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.print_xyz", false]], "problem_size (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.problem_size", false]], "probleminstance (class in src.pyliqtr.probleminstances.probleminstance)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance", false]], "process() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.process", false]], "productpauliexponentials (class in src.pyliqtr.circuits.operators.productpauliexponentials)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials", false]], "prop_lvn() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.prop_lvn", false]], "prop_wfn() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.prop_wfn", false]], "ps_print_set() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_print_set", false]], "ps_print_set_merged() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_print_set_merged", false]], "ps_text_full_set() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_text_full_set", false]], "ps_text_full_set_withzero() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_text_full_set_withzero", false]], "ps_text_pad() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_text_pad", false]], "ps_text_to_matrix() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_text_to_matrix", false]], "ps_text_to_ops() (in module src.pyliqtr.clam.operator_strings)": [[19, "src.pyLIQTR.clam.operator_strings.ps_text_to_ops", false]], "purge_skeletons() (src.pyliqtr.clam.lattice.lattice method)": [[19, "src.pyLIQTR.clam.lattice.Lattice.purge_skeletons", false]], "pw_to_dpw_cutoff() (in module src.pyliqtr.pest_interface.pest_python)": [[24, "src.pyLIQTR.pest_interface.pest_python.pw_to_dpw_cutoff", false]], "pylcircuit (class in src.pyliqtr.circuits.pylcircuit)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit", false]], "pyliqtr": [[1, "module-pyLIQTR", false]], "pyloperator (class in src.pyliqtr.circuits.pyloperator)": [[15, "src.pyLIQTR.circuits.pyLOperator.pyLOperator", false]], "pylqt_t_complexity() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.pylqt_t_complexity", false]], "pytestmark (src.pyliqtr.circuits.operators.tests.test_productpauliexponentials.testproductpauliexponentials attribute)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials.pytestmark", false]], "pytestmark (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms attribute)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.pytestmark", false]], "qalloc() (src.pyliqtr.utils.global_ancilla_manager.globalqubitmanager method)": [[31, "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager.qalloc", false]], "qasm (src.pyliqtr.circuits.operators.fixuptableqrom.dataandkeycondition attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition.qasm", false]], "qasminfo (class in src.pyliqtr.utils.printing)": [[31, "src.pyLIQTR.utils.printing.QASMInfo", false]], "qborrow() (src.pyliqtr.utils.global_ancilla_manager.globalqubitmanager method)": [[31, "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager.qborrow", false]], "qfree() (src.pyliqtr.utils.global_ancilla_manager.globalqubitmanager method)": [[31, "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager.qfree", false]], "qrom_bloq (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.qrom_bloq", false]], "qromselectv (class in src.pyliqtr.circuits.operators.selectv)": [[16, "src.pyLIQTR.circuits.operators.selectV.QROMSelectV", false]], "qromwithmeasurementuncompute (class in src.pyliqtr.circuits.operators.qromwithmeasurementuncompute)": [[16, "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute.QROMwithMeasurementUncompute", false]], "qsp_exp_sim_r() (in module src.pyliqtr.clam.simqsp)": [[19, "src.pyLIQTR.clam.simqsp.qsp_exp_sim_r", false]], "qsp_fourier_response (class in src.pyliqtr.qubitization.qsvt)": [[28, "src.pyLIQTR.qubitization.qsvt.QSP_fourier_response", false]], "qsp_prepare (class in src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare", false]], "qsp_response() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.qsp_response", false]], "qsp_sequence() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.qsp_sequence", false]], "qspfilesio (class in src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.QSPFilesIO", false]], "qsvt_abstract (class in src.pyliqtr.qubitization.qsvt)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract", false]], "qsvt_dynamics() (in module src.pyliqtr.qubitization.qsvt_dynamics)": [[28, "src.pyLIQTR.qubitization.qsvt_dynamics.qsvt_dynamics", false]], "qsvt_real_polynomial (class in src.pyliqtr.qubitization.qsvt)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial", false]], "qsvt_real_polynomial_sum (class in src.pyliqtr.qubitization.qsvt)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum", false]], "qsvt_response() (in module src.pyliqtr.clam.operator_sims)": [[19, "src.pyLIQTR.clam.operator_sims.qsvt_response", false]], "qsvt_sequence() (src.pyliqtr.clam.simqsp.simqsp method)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP.qsvt_sequence", false]], "qubitizedphaseestimation (class in src.pyliqtr.qubitization.phase_estimation)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation", false]], "qubitizedreflection (class in src.pyliqtr.qubitization.qubitized_gates)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection", false]], "qubitizedrotation (class in src.pyliqtr.qubitization.qubitized_gates)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation", false]], "qubitizedwalkoperator (class in src.pyliqtr.qubitization.qubitized_gates)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator", false]], "r() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.R", false]], "random() (in module src.pyliqtr.gate_decomp.tests.test_cirq_transformers)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.random", false]], "random_decomp() (in module src.pyliqtr.gate_decomp.cirq_transforms)": [[22, "src.pyLIQTR.gate_decomp.cirq_transforms.random_decomp", false]], "read_poly() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.read_poly", false]], "readangles() (src.pyliqtr.utils.qsp_helpers.qspfilesio static method)": [[31, "src.pyLIQTR.utils.qsp_helpers.QSPFilesIO.readAngles", false]], "readhaml() (src.pyliqtr.utils.qsp_helpers.qspfilesio static method)": [[31, "src.pyLIQTR.utils.qsp_helpers.QSPFilesIO.readHaml", false]], "recenter() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.recenter", false]], "reduce() (in module src.pyliqtr.gate_decomp.gate_approximation)": [[22, "src.pyLIQTR.gate_decomp.gate_approximation.reduce", false]], "reduce() (in module src.pyliqtr.gate_decomp.rings)": [[22, "src.pyLIQTR.gate_decomp.rings.reduce", false]], "reduce() (src.pyliqtr.gate_decomp.matrices.so3 method)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3.reduce", false]], "reduce_by_1() (src.pyliqtr.gate_decomp.matrices.so3 method)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3.reduce_by_1", false]], "reduce_by_2() (src.pyliqtr.gate_decomp.matrices.so3 method)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3.reduce_by_2", false]], "reduce_by_sqrt2() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.reduce_by_sqrt2", false]], "reduce_skew() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.reduce_skew", false]], "reflect (class in src.pyliqtr.circuits.operators.reflect)": [[16, "src.pyLIQTR.circuits.operators.reflect.Reflect", false]], "reg_qubits (src.pyliqtr.circuits.operators.prepare.prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.reg_qubits", false]], "reg_qubits (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.reg_qubits", false]], "register_qubits (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.register_qubits", false]], "regsiter_qubits (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.regsiter_qubits", false]], "remez() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.remez", false]], "remove_dependencies() (src.pyliqtr.scheduler.dag.dag method)": [[29, "src.pyLIQTR.scheduler.DAG.DAG.remove_dependencies", false]], "remove_zeros() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.remove_zeros", false]], "replace_key() (src.pyliqtr.circuits.operators.fixuptableqrom.dataandkeycondition method)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition.replace_key", false]], "rescale_coeff_norm() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.rescale_coeff_norm", false]], "rescale_coeff_scalar() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.rescale_coeff_scalar", false]], "rescale_minmax() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.rescale_minmax", false]], "reset() (src.pyliqtr.utils.global_ancilla_manager.globalqubitmanager method)": [[31, "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager.reset", false]], "resolve() (src.pyliqtr.circuits.operators.fixuptableqrom.dataandkeycondition method)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition.resolve", false]], "resource_analysis_mode (in module src.pyliqtr.circuits.pylcircuit)": [[15, "src.pyLIQTR.circuits.pyLCircuit.RESOURCE_ANALYSIS_MODE", false]], "resource_available() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.resource_available", false]], "resource_counts() (src.pyliqtr.scheduler.instruction.instruction method)": [[29, "src.pyLIQTR.scheduler.Instruction.Instruction.resource_counts", false]], "resourceanalyze() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.resourceAnalyze", false]], "resources (src.pyliqtr.circuits.pylcircuit.pylcircuit attribute)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.resources", false]], "ring_gcd() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.ring_gcd", false]], "rotation_to_t() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.rotation_to_t", false]], "rotationsblock (class in src.pyliqtr.circuits.operators.df_rotationsblock)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock", false]], "rotationsqrom (class in src.pyliqtr.circuits.operators.rotationsqrom)": [[16, "src.pyLIQTR.circuits.operators.RotationsQROM.RotationsQROM", false]], "rx_decomp (class in src.pyliqtr.gate_decomp.rotation_gates)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.rx_decomp", false]], "ry_decomp (class in src.pyliqtr.gate_decomp.rotation_gates)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.ry_decomp", false]], "rz_decomp (class in src.pyliqtr.gate_decomp.rotation_gates)": [[22, "src.pyLIQTR.gate_decomp.rotation_gates.rz_decomp", false]], "s() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.S", false]], "s_k (class in src.pyliqtr.phaseestimation.pe_gates)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.S_k", false]], "sanitize_meas_name() (src.pyliqtr.utils.printing.qasminfo method)": [[31, "src.pyLIQTR.utils.printing.QASMInfo.sanitize_meas_name", false]], "save() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.save", false]], "scale_ellipse() (in module src.pyliqtr.gate_decomp.ellipse)": [[22, "src.pyLIQTR.gate_decomp.ellipse.scale_ellipse", false]], "scaled_one_dim_grid_problem() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.scaled_one_dim_grid_problem", false]], "schedule() (src.pyliqtr.scheduler.scheduler.scheduler method)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler.schedule", false]], "schedule_circuit() (in module src.pyliqtr.scheduler.scheduler)": [[29, "src.pyLIQTR.scheduler.scheduler.schedule_circuit", false]], "scheduler (class in src.pyliqtr.scheduler.scheduler)": [[29, "src.pyLIQTR.scheduler.scheduler.Scheduler", false]], "script_loc() (in module src.pyliqtr.utils.tests.test_printing)": [[32, "src.pyLIQTR.utils.tests.test_printing.script_loc", false]], "sd() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.Sd", false]], "selection_bitsize (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.selection_bitsize", false]], "selection_bitsize (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.selection_bitsize", false]], "selection_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.selection_registers", false]], "selection_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.selection_registers", false]], "selection_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.prepare_firstquantized.preparefirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.selection_registers", false]], "selection_registers (src.pyliqtr.circuits.operators.swap_network.swapunary attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.selection_registers", false]], "selection_registers (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.selection_registers", false]], "selection_registers (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.selection_registers", false]], "selection_registers (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.selection_registers", false]], "selection_registers (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.selection_registers", false]], "selection_registers() (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.selection_registers", false]], "selection_regs (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.selection_regs", false]], "selectoracle() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.SelectOracle", false]], "selvbase (class in src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.SelVBase", false]], "set_coeffs() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.set_coeffs", false]], "set_evens() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.set_evens", false]], "set_execution_time() (src.pyliqtr.scheduler.instruction.instruction method)": [[29, "src.pyLIQTR.scheduler.Instruction.Instruction.set_execution_time", false]], "set_label() (src.pyliqtr.clam.cell_complex.cell method)": [[19, "src.pyLIQTR.clam.cell_complex.Cell.set_label", false]], "set_num_qb() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.set_num_qb", false]], "set_odds() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.set_odds", false]], "set_parity() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.set_parity", false]], "set_poly() (src.pyliqtr.phase_factors.optimization.angler_optimization.angler_opt method)": [[27, "src.pyLIQTR.phase_factors.optimization.angler_optimization.Angler_opt.set_poly", false]], "set_precision() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.set_precision", false]], "set_root_solver() (src.pyliqtr.phase_factors.optimization.fitter.fitter method)": [[27, "src.pyLIQTR.phase_factors.optimization.fitter.Fitter.set_root_solver", false]], "set_type() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.set_type", false]], "set_units() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.set_units", false]], "setup() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.setUp", false]], "sigma_mu_bitsize (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.sigma_mu_bitsize", false]], "signature (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.signature", false]], "signature (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.signature", false]], "signature (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.signature", false]], "signature (src.pyliqtr.blockencodings.carlemanlinearization.lcucorrections attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUCorrections.signature", false]], "signature (src.pyliqtr.blockencodings.carlemanlinearization.lcuprep attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep.signature", false]], "signature (src.pyliqtr.blockencodings.carlemanlinearization.swapcorrections attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.SwapCorrections.signature", false]], "signature (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.signature", false]], "signature (src.pyliqtr.circuits.operators.addmod.addmod attribute)": [[16, "src.pyLIQTR.circuits.operators.AddMod.AddMod.signature", false]], "signature (src.pyliqtr.circuits.operators.binarytounary.binarytounarybits attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits.signature", false]], "signature (src.pyliqtr.circuits.operators.bitwisezrotation.bitwisezrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation.signature", false]], "signature (src.pyliqtr.circuits.operators.cascading_translation.cascadingtranslation attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation.signature", false]], "signature (src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard.catalyticallycontrolledhadamard attribute)": [[16, "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard.signature", false]], "signature (src.pyliqtr.circuits.operators.controlleduniformsuperposition.controlledprepareuniformsuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition.signature", false]], "signature (src.pyliqtr.circuits.operators.cyclic_shift.cyclicshiftpermutation attribute)": [[16, "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation.signature", false]], "signature (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.signature", false]], "signature (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.signature", false]], "signature (src.pyliqtr.circuits.operators.diagonal_bitstring.diagonalbitstring attribute)": [[16, "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring.signature", false]], "signature (src.pyliqtr.circuits.operators.equalitytest.equalitytest attribute)": [[16, "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest.signature", false]], "signature (src.pyliqtr.circuits.operators.examplefmatrices.f0_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator.signature", false]], "signature (src.pyliqtr.circuits.operators.examplefmatrices.f1_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator.signature", false]], "signature (src.pyliqtr.circuits.operators.examplefmatrices.f2_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator.signature", false]], "signature (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.signature", false]], "signature (src.pyliqtr.circuits.operators.flaggedprepareuniformsuperposition.flaggedprepareuniformsuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.FlaggedPrepareUniformSuperposition.signature", false]], "signature (src.pyliqtr.circuits.operators.flagzeroasfailure.flagzeroasfailure attribute)": [[16, "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure.signature", false]], "signature (src.pyliqtr.circuits.operators.phasegradientrotation.phasegradientzrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation.signature", false]], "signature (src.pyliqtr.circuits.operators.prepare_lineart.fermionicprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT.signature", false]], "signature (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.signature", false]], "signature (src.pyliqtr.circuits.operators.preparemuunaryencoded.preparemuunaryencoded attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded.signature", false]], "signature (src.pyliqtr.circuits.operators.preparenu.preparenustate attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState.signature", false]], "signature (src.pyliqtr.circuits.operators.preparenu.testnuinequality attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality.signature", false]], "signature (src.pyliqtr.circuits.operators.preparenusuperposition.preparenusuperposition attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition.signature", false]], "signature (src.pyliqtr.circuits.operators.preparepowertwostate.preparepowertwostate attribute)": [[16, "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState.signature", false]], "signature (src.pyliqtr.circuits.operators.preparet_firstquantized.preparet_firstquantized attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized.signature", false]], "signature (src.pyliqtr.circuits.operators.prepareuv_firstquantized.prepareuvfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization.signature", false]], "signature (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials attribute)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.signature", false]], "signature (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.signature", false]], "signature (src.pyliqtr.circuits.operators.select_prepare_pauli.prepare_pauli_lcu attribute)": [[16, "src.pyLIQTR.circuits.operators.select_prepare_pauli.prepare_pauli_lcu.signature", false]], "signature (src.pyliqtr.circuits.operators.swap_network.swapnetwork attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork.signature", false]], "signature (src.pyliqtr.circuits.operators.translation.translation attribute)": [[16, "src.pyLIQTR.circuits.operators.translation.Translation.signature", false]], "signature (src.pyliqtr.circuits.operators.uniformsuperpositionij.uniformsuperpositionijfirstquantization attribute)": [[16, "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization.signature", false]], "signature (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.signature", false]], "signature (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.signature", false]], "signature (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.signature", false]], "signature (src.pyliqtr.qubitization.qubitized_gates.qubitizedreflection attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection.signature", false]], "signature (src.pyliqtr.qubitization.qubitized_gates.qubitizedrotation attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation.signature", false]], "signature (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.signature", false]], "signs_data (src.pyliqtr.circuits.operators.df_innerprepare.innerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare.signs_data", false]], "sim_phase_estimation() (src.pyliqtr.phaseestimation.pe_sim.pe_simulator method)": [[12, "id5", false], [12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.sim_phase_estimation", false]], "sim_run (src.pyliqtr.phaseestimation.pe_sim.pe_simulator attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.sim_run", false]], "sim_run_analysis() (src.pyliqtr.phaseestimation.pe_sim.pe_simulator method)": [[12, "id6", false], [12, "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator.sim_run_analysis", false]], "simqsp (class in src.pyliqtr.clam.simqsp)": [[19, "src.pyLIQTR.clam.simqsp.SimQSP", false]], "simulation_phases() (in module src.pyliqtr.phase_factors.simulation)": [[25, "src.pyLIQTR.phase_factors.simulation.simulation_phases", false]], "simulation_phases() (in module src.pyliqtr.qubitization.qsvt_dynamics)": [[28, "src.pyLIQTR.qubitization.qsvt_dynamics.simulation_phases", false]], "single_gate() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.single_gate", false]], "single_gate() (src.pyliqtr.circuits.tests.test_pyloperator.testpyloperator method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLOperator.TestPyLOperator.single_gate", false]], "site (class in src.pyliqtr.clam.operator_complex)": [[19, "src.pyLIQTR.clam.operator_complex.Site", false]], "sites_to_array() (in module src.pyliqtr.clam.operator_lattice)": [[19, "src.pyLIQTR.clam.operator_lattice.sites_to_array", false]], "snorm() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.snorm", false]], "so3 (class in src.pyliqtr.gate_decomp.matrices)": [[22, "src.pyLIQTR.gate_decomp.matrices.SO3", false]], "solve_one_dim_grid_problem() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.solve_one_dim_grid_problem", false]], "solve_two_dim_grid_problem_ellipse() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.solve_two_dim_grid_problem_ellipse", false]], "solve_two_dim_grid_problem_upright_rectangles() (in module src.pyliqtr.gate_decomp.point_enumeration)": [[22, "src.pyLIQTR.gate_decomp.point_enumeration.solve_two_dim_grid_problem_upright_rectangles", false]], "solvediophantine() (in module src.pyliqtr.gate_decomp.solve_diophantine)": [[22, "src.pyLIQTR.gate_decomp.solve_diophantine.solveDiophantine", false]], "sparse_arrays (src.pyliqtr.probleminstances.matrixinstance.matrixinstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.sparse_arrays", false]], "sparse_matrix (src.pyliqtr.probleminstances.matrixinstance.matrixinstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.sparse_matrix", false]], "sparse_matrix() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.sparse_matrix", false]], "sparse_tuples (src.pyliqtr.probleminstances.matrixinstance.matrixinstance attribute)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.sparse_tuples", false]], "split_angles() (src.pyliqtr.circuits.operators.prepare.prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare.Prepare.split_angles", false]], "split_angles() (src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu.qsp_prepare method)": [[16, "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare.split_angles", false]], "splitin2() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.splitIn2", false]], "splitinpairs() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.splitInPairs", false]], "sqrt() (src.pyliqtr.gate_decomp.rings.z_sqrt2 method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2.sqrt", false]], "squarelattice (class in src.pyliqtr.clam.lattice_definitions)": [[19, "src.pyLIQTR.clam.lattice_definitions.SquareLattice", false]], "src": [[9, "module-src", false]], "src.pyliqtr": [[10, "module-src.pyLIQTR", false]], "src.pyliqtr.blockencodings": [[11, "module-src.pyLIQTR.BlockEncodings", false]], "src.pyliqtr.blockencodings.blockencoding": [[11, "module-src.pyLIQTR.BlockEncodings.BlockEncoding", false], [34, "module-src.pyLIQTR.BlockEncodings.BlockEncoding", false]], "src.pyliqtr.blockencodings.carlemanlinearization": [[11, "module-src.pyLIQTR.BlockEncodings.CarlemanLinearization", false], [35, "module-src.pyLIQTR.BlockEncodings.CarlemanLinearization", false]], "src.pyliqtr.blockencodings.doublefactorized": [[11, "module-src.pyLIQTR.BlockEncodings.DoubleFactorized", false], [36, "module-src.pyLIQTR.BlockEncodings.DoubleFactorized", false]], "src.pyliqtr.blockencodings.fermi_hubbard_square_encoding": [[11, "module-src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", false], [40, "module-src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", false]], "src.pyliqtr.blockencodings.firstquantized": [[11, "module-src.pyLIQTR.BlockEncodings.FirstQuantized", false], [37, "module-src.pyLIQTR.BlockEncodings.FirstQuantized", false]], "src.pyliqtr.blockencodings.getencoding": [[11, "module-src.pyLIQTR.BlockEncodings.getEncoding", false], [41, "module-src.pyLIQTR.BlockEncodings.getEncoding", false]], "src.pyliqtr.blockencodings.lineart": [[11, "module-src.pyLIQTR.BlockEncodings.LinearT", false], [38, "module-src.pyLIQTR.BlockEncodings.LinearT", false]], "src.pyliqtr.blockencodings.paulistringlcu": [[11, "module-src.pyLIQTR.BlockEncodings.PauliStringLCU", false], [39, "module-src.pyLIQTR.BlockEncodings.PauliStringLCU", false]], "src.pyliqtr.circuits": [[15, "module-src.pyLIQTR.circuits", false]], "src.pyliqtr.circuits.operators": [[16, "module-src.pyLIQTR.circuits.operators", false]], "src.pyliqtr.circuits.operators.addmod": [[16, "module-src.pyLIQTR.circuits.operators.AddMod", false], [54, "module-src.pyLIQTR.circuits.operators.AddMod", false]], "src.pyliqtr.circuits.operators.binarytounary": [[16, "module-src.pyLIQTR.circuits.operators.BinaryToUnary", false], [55, "module-src.pyLIQTR.circuits.operators.BinaryToUnary", false]], "src.pyliqtr.circuits.operators.bitwisezrotation": [[16, "module-src.pyLIQTR.circuits.operators.BitwiseZRotation", false], [56, "module-src.pyLIQTR.circuits.operators.BitwiseZRotation", false]], "src.pyliqtr.circuits.operators.cascading_translation": [[16, "module-src.pyLIQTR.circuits.operators.cascading_translation", false], [68, "module-src.pyLIQTR.circuits.operators.cascading_translation", false]], "src.pyliqtr.circuits.operators.catalyticallycontrolledhadamard": [[16, "module-src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard", false]], "src.pyliqtr.circuits.operators.controlleduniformsuperposition": [[16, "module-src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", false], [57, "module-src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", false]], "src.pyliqtr.circuits.operators.cyclic_shift": [[16, "module-src.pyLIQTR.circuits.operators.cyclic_shift", false], [69, "module-src.pyLIQTR.circuits.operators.cyclic_shift", false]], "src.pyliqtr.circuits.operators.df_innerprepare": [[16, "module-src.pyLIQTR.circuits.operators.DF_InnerPrepare", false], [58, "module-src.pyLIQTR.circuits.operators.DF_InnerPrepare", false]], "src.pyliqtr.circuits.operators.df_outerprepare": [[16, "module-src.pyLIQTR.circuits.operators.DF_OuterPrepare", false], [59, "module-src.pyLIQTR.circuits.operators.DF_OuterPrepare", false]], "src.pyliqtr.circuits.operators.df_rotationsblock": [[16, "module-src.pyLIQTR.circuits.operators.DF_RotationsBlock", false], [60, "module-src.pyLIQTR.circuits.operators.DF_RotationsBlock", false]], "src.pyliqtr.circuits.operators.diagonal_bitstring": [[16, "module-src.pyLIQTR.circuits.operators.diagonal_bitstring", false], [70, "module-src.pyLIQTR.circuits.operators.diagonal_bitstring", false]], "src.pyliqtr.circuits.operators.equalitytest": [[16, "module-src.pyLIQTR.circuits.operators.EqualityTest", false]], "src.pyliqtr.circuits.operators.examplefmatrices": [[16, "module-src.pyLIQTR.circuits.operators.ExampleFMatrices", false], [61, "module-src.pyLIQTR.circuits.operators.ExampleFMatrices", false]], "src.pyliqtr.circuits.operators.fixuptableqrom": [[16, "module-src.pyLIQTR.circuits.operators.FixupTableQROM", false], [62, "module-src.pyLIQTR.circuits.operators.FixupTableQROM", false]], "src.pyliqtr.circuits.operators.flaggedprepareuniformsuperposition": [[16, "module-src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", false], [63, "module-src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", false]], "src.pyliqtr.circuits.operators.flagzeroasfailure": [[16, "module-src.pyLIQTR.circuits.operators.FlagZeroAsFailure", false]], "src.pyliqtr.circuits.operators.hamiltonian_encodings": [[16, "module-src.pyLIQTR.circuits.operators.hamiltonian_encodings", false], [71, "module-src.pyLIQTR.circuits.operators.hamiltonian_encodings", false]], "src.pyliqtr.circuits.operators.multicz": [[16, "module-src.pyLIQTR.circuits.operators.multiCZ", false], [72, "module-src.pyLIQTR.circuits.operators.multiCZ", false]], "src.pyliqtr.circuits.operators.phasegradientrotation": [[16, "module-src.pyLIQTR.circuits.operators.PhaseGradientRotation", false], [64, "module-src.pyLIQTR.circuits.operators.PhaseGradientRotation", false]], "src.pyliqtr.circuits.operators.prepare": [[16, "module-src.pyLIQTR.circuits.operators.prepare", false], [73, "module-src.pyLIQTR.circuits.operators.prepare", false]], "src.pyliqtr.circuits.operators.prepare_firstquantized": [[16, "module-src.pyLIQTR.circuits.operators.prepare_FirstQuantized", false]], "src.pyliqtr.circuits.operators.prepare_lineart": [[16, "module-src.pyLIQTR.circuits.operators.prepare_LinearT", false], [74, "module-src.pyLIQTR.circuits.operators.prepare_LinearT", false]], "src.pyliqtr.circuits.operators.prepare_oracle_pauli_lcu": [[16, "module-src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", false], [75, "module-src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", false]], "src.pyliqtr.circuits.operators.preparemuunaryencoded": [[16, "module-src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded", false]], "src.pyliqtr.circuits.operators.preparenu": [[16, "module-src.pyLIQTR.circuits.operators.PrepareNu", false]], "src.pyliqtr.circuits.operators.preparenusuperposition": [[16, "module-src.pyLIQTR.circuits.operators.PrepareNuSuperposition", false]], "src.pyliqtr.circuits.operators.preparepowertwostate": [[16, "module-src.pyLIQTR.circuits.operators.PreparePowerTwoState", false]], "src.pyliqtr.circuits.operators.preparet_firstquantized": [[16, "module-src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized", false]], "src.pyliqtr.circuits.operators.prepareuv_firstquantized": [[16, "module-src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized", false]], "src.pyliqtr.circuits.operators.productpauliexponentials": [[16, "module-src.pyLIQTR.circuits.operators.ProductPauliExponentials", false], [65, "module-src.pyLIQTR.circuits.operators.ProductPauliExponentials", false]], "src.pyliqtr.circuits.operators.qromwithmeasurementuncompute": [[16, "module-src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", false], [66, "module-src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", false]], "src.pyliqtr.circuits.operators.reflect": [[16, "module-src.pyLIQTR.circuits.operators.reflect", false], [76, "module-src.pyLIQTR.circuits.operators.reflect", false]], "src.pyliqtr.circuits.operators.rotationsqrom": [[16, "module-src.pyLIQTR.circuits.operators.RotationsQROM", false], [67, "module-src.pyLIQTR.circuits.operators.RotationsQROM", false]], "src.pyliqtr.circuits.operators.select_lineart": [[16, "module-src.pyLIQTR.circuits.operators.select_LinearT", false], [79, "module-src.pyLIQTR.circuits.operators.select_LinearT", false]], "src.pyliqtr.circuits.operators.select_oracle_pauli_lcu": [[16, "module-src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", false], [80, "module-src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", false]], "src.pyliqtr.circuits.operators.select_prepare_pauli": [[16, "module-src.pyLIQTR.circuits.operators.select_prepare_pauli", false], [81, "module-src.pyLIQTR.circuits.operators.select_prepare_pauli", false]], "src.pyliqtr.circuits.operators.selectv": [[16, "module-src.pyLIQTR.circuits.operators.selectV", false], [77, "module-src.pyLIQTR.circuits.operators.selectV", false]], "src.pyliqtr.circuits.operators.selectvutils": [[16, "module-src.pyLIQTR.circuits.operators.selectVutils", false], [78, "module-src.pyLIQTR.circuits.operators.selectVutils", false]], "src.pyliqtr.circuits.operators.swap_network": [[16, "module-src.pyLIQTR.circuits.operators.swap_network", false], [82, "module-src.pyLIQTR.circuits.operators.swap_network", false]], "src.pyliqtr.circuits.operators.tests": [[17, "module-src.pyLIQTR.circuits.operators.tests", false]], "src.pyliqtr.circuits.operators.tests.test_binarytounary": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary", false]], "src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard", false]], "src.pyliqtr.circuits.operators.tests.test_cyclic_shift": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_cyclic_shift", false]], "src.pyliqtr.circuits.operators.tests.test_dataandkeycondition": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition", false]], "src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring", false]], "src.pyliqtr.circuits.operators.tests.test_equalitytest": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_EqualityTest", false]], "src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure", false]], "src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings", false]], "src.pyliqtr.circuits.operators.tests.test_multicz": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_multiCZ", false]], "src.pyliqtr.circuits.operators.tests.test_phasegradientrotation": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation", false]], "src.pyliqtr.circuits.operators.tests.test_prepare": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_prepare", false]], "src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded", false]], "src.pyliqtr.circuits.operators.tests.test_preparenusuperposition": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition", false]], "src.pyliqtr.circuits.operators.tests.test_preparepowertwostate": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState", false]], "src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized", false]], "src.pyliqtr.circuits.operators.tests.test_productpauliexponentials": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials", false]], "src.pyliqtr.circuits.operators.tests.test_qromwithmeasurementuncompute": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute", false]], "src.pyliqtr.circuits.operators.tests.test_qtadd": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_qtAdd", false]], "src.pyliqtr.circuits.operators.tests.test_reflect": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_reflect", false]], "src.pyliqtr.circuits.operators.tests.test_rotationsqrom": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_RotationsQROM", false]], "src.pyliqtr.circuits.operators.tests.test_selectv": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_selectV", false]], "src.pyliqtr.circuits.operators.tests.test_translation": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_translation", false]], "src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij": [[17, "module-src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ", false]], "src.pyliqtr.circuits.operators.tests.utils": [[17, "module-src.pyLIQTR.circuits.operators.tests.utils", false]], "src.pyliqtr.circuits.operators.translation": [[16, "module-src.pyLIQTR.circuits.operators.translation", false], [83, "module-src.pyLIQTR.circuits.operators.translation", false]], "src.pyliqtr.circuits.operators.uniformsuperpositionij": [[16, "module-src.pyLIQTR.circuits.operators.UniformSuperpositionIJ", false]], "src.pyliqtr.circuits.pylcircuit": [[15, "module-src.pyLIQTR.circuits.pyLCircuit", false]], "src.pyliqtr.circuits.pyloperator": [[15, "module-src.pyLIQTR.circuits.pyLOperator", false]], "src.pyliqtr.circuits.qsp": [[15, "module-src.pyLIQTR.circuits.qsp", false]], "src.pyliqtr.circuits.tests": [[18, "module-src.pyLIQTR.circuits.tests", false]], "src.pyliqtr.circuits.tests.test_pylcircuit": [[18, "module-src.pyLIQTR.circuits.tests.test_pyLCircuit", false]], "src.pyliqtr.circuits.tests.test_pyloperator": [[18, "module-src.pyLIQTR.circuits.tests.test_pyLOperator", false]], "src.pyliqtr.clam": [[19, "module-src.pyLIQTR.clam", false]], "src.pyliqtr.clam.cell_complex": [[19, "module-src.pyLIQTR.clam.cell_complex", false], [84, "module-src.pyLIQTR.clam.cell_complex", false]], "src.pyliqtr.clam.geometry": [[19, "module-src.pyLIQTR.clam.geometry", false], [85, "module-src.pyLIQTR.clam.geometry", false]], "src.pyliqtr.clam.lattice": [[19, "module-src.pyLIQTR.clam.lattice", false]], "src.pyliqtr.clam.lattice_definitions": [[19, "module-src.pyLIQTR.clam.lattice_definitions", false], [86, "module-src.pyLIQTR.clam.lattice_definitions", false]], "src.pyliqtr.clam.linearization_tools": [[20, "module-src.pyLIQTR.clam.linearization_tools", false]], "src.pyliqtr.clam.linearization_tools.multilinear_algebra": [[20, "module-src.pyLIQTR.clam.linearization_tools.multilinear_algebra", false]], "src.pyliqtr.clam.linearization_tools.vlasov_spectral": [[20, "module-src.pyLIQTR.clam.linearization_tools.vlasov_spectral", false]], "src.pyliqtr.clam.multilinear_algebra": [[19, "module-src.pyLIQTR.clam.multilinear_algebra", false], [87, "module-src.pyLIQTR.clam.multilinear_algebra", false]], "src.pyliqtr.clam.operator_complex": [[19, "module-src.pyLIQTR.clam.operator_complex", false], [88, "module-src.pyLIQTR.clam.operator_complex", false]], "src.pyliqtr.clam.operator_lattice": [[19, "module-src.pyLIQTR.clam.operator_lattice", false], [89, "module-src.pyLIQTR.clam.operator_lattice", false]], "src.pyliqtr.clam.operator_sims": [[19, "module-src.pyLIQTR.clam.operator_sims", false], [90, "module-src.pyLIQTR.clam.operator_sims", false]], "src.pyliqtr.clam.operator_strings": [[19, "module-src.pyLIQTR.clam.operator_strings", false], [91, "module-src.pyLIQTR.clam.operator_strings", false]], "src.pyliqtr.clam.operators": [[19, "module-src.pyLIQTR.clam.operators", false], [92, "module-src.pyLIQTR.clam.operators", false]], "src.pyliqtr.clam.physical_data": [[19, "module-src.pyLIQTR.clam.physical_data", false], [93, "module-src.pyLIQTR.clam.physical_data", false]], "src.pyliqtr.clam.simqsp": [[19, "module-src.pyLIQTR.clam.simqsp", false], [94, "module-src.pyLIQTR.clam.simqsp", false]], "src.pyliqtr.clam.tensor_methods": [[19, "module-src.pyLIQTR.clam.tensor_methods", false], [95, "module-src.pyLIQTR.clam.tensor_methods", false]], "src.pyliqtr.clam.tests": [[21, "module-src.pyLIQTR.clam.tests", false]], "src.pyliqtr.clam.tests.test_heisenberg": [[21, "module-src.pyLIQTR.clam.tests.test_heisenberg", false]], "src.pyliqtr.clam.time_dynamics": [[19, "module-src.pyLIQTR.clam.time_dynamics", false], [96, "module-src.pyLIQTR.clam.time_dynamics", false]], "src.pyliqtr.clam.utilities": [[19, "module-src.pyLIQTR.clam.utilities", false]], "src.pyliqtr.gate_decomp": [[22, "module-src.pyLIQTR.gate_decomp", false]], "src.pyliqtr.gate_decomp.cirq_transforms": [[22, "module-src.pyLIQTR.gate_decomp.cirq_transforms", false], [97, "module-src.pyLIQTR.gate_decomp.cirq_transforms", false]], "src.pyliqtr.gate_decomp.clifford_gates": [[22, "module-src.pyLIQTR.gate_decomp.clifford_gates", false], [98, "module-src.pyLIQTR.gate_decomp.clifford_gates", false]], "src.pyliqtr.gate_decomp.ellipse": [[22, "module-src.pyLIQTR.gate_decomp.ellipse", false], [99, "module-src.pyLIQTR.gate_decomp.ellipse", false]], "src.pyliqtr.gate_decomp.exact_decomp": [[22, "module-src.pyLIQTR.gate_decomp.exact_decomp", false], [100, "module-src.pyLIQTR.gate_decomp.exact_decomp", false]], "src.pyliqtr.gate_decomp.gate_approximation": [[22, "module-src.pyLIQTR.gate_decomp.gate_approximation", false], [101, "module-src.pyLIQTR.gate_decomp.gate_approximation", false]], "src.pyliqtr.gate_decomp.grid_operator": [[22, "module-src.pyLIQTR.gate_decomp.grid_operator", false], [102, "module-src.pyLIQTR.gate_decomp.grid_operator", false]], "src.pyliqtr.gate_decomp.matrices": [[22, "module-src.pyLIQTR.gate_decomp.matrices", false], [103, "module-src.pyLIQTR.gate_decomp.matrices", false]], "src.pyliqtr.gate_decomp.point_enumeration": [[22, "module-src.pyLIQTR.gate_decomp.point_enumeration", false], [104, "module-src.pyLIQTR.gate_decomp.point_enumeration", false]], "src.pyliqtr.gate_decomp.rings": [[22, "module-src.pyLIQTR.gate_decomp.rings", false], [105, "module-src.pyLIQTR.gate_decomp.rings", false]], "src.pyliqtr.gate_decomp.rotation_gates": [[22, "module-src.pyLIQTR.gate_decomp.rotation_gates", false], [106, "module-src.pyLIQTR.gate_decomp.rotation_gates", false]], "src.pyliqtr.gate_decomp.solve_diophantine": [[22, "module-src.pyLIQTR.gate_decomp.solve_diophantine", false], [107, "module-src.pyLIQTR.gate_decomp.solve_diophantine", false]], "src.pyliqtr.gate_decomp.tests": [[23, "module-src.pyLIQTR.gate_decomp.tests", false]], "src.pyliqtr.gate_decomp.tests.benchmarks": [[23, "module-src.pyLIQTR.gate_decomp.tests.benchmarks", false]], "src.pyliqtr.gate_decomp.tests.conftest": [[23, "module-src.pyLIQTR.gate_decomp.tests.conftest", false]], "src.pyliqtr.gate_decomp.tests.test_cirq_transformers": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_cirq_transformers", false]], "src.pyliqtr.gate_decomp.tests.test_exact_decomp": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_exact_decomp", false]], "src.pyliqtr.gate_decomp.tests.test_matrices": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_matrices", false]], "src.pyliqtr.gate_decomp.tests.test_point_enumeration": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_point_enumeration", false]], "src.pyliqtr.gate_decomp.tests.test_solve_diophantine": [[23, "module-src.pyLIQTR.gate_decomp.tests.test_solve_diophantine", false]], "src.pyliqtr.pest_interface": [[24, "module-src.pyLIQTR.pest_interface", false]], "src.pyliqtr.pest_interface.pest_python": [[24, "module-src.pyLIQTR.pest_interface.pest_python", false]], "src.pyliqtr.phase_factors": [[25, "module-src.pyLIQTR.phase_factors", false]], "src.pyliqtr.phase_factors.angler": [[25, "module-src.pyLIQTR.phase_factors.angler", false], [108, "module-src.pyLIQTR.phase_factors.angler", false]], "src.pyliqtr.phase_factors.conversions": [[25, "module-src.pyLIQTR.phase_factors.conversions", false], [109, "module-src.pyLIQTR.phase_factors.conversions", false]], "src.pyliqtr.phase_factors.fourier_response": [[26, "module-src.pyLIQTR.phase_factors.fourier_response", false]], "src.pyliqtr.phase_factors.fourier_response.fourier_response": [[26, "module-src.pyLIQTR.phase_factors.fourier_response.fourier_response", false]], "src.pyliqtr.phase_factors.named_factors": [[25, "module-src.pyLIQTR.phase_factors.named_factors", false], [110, "module-src.pyLIQTR.phase_factors.named_factors", false]], "src.pyliqtr.phase_factors.optimization": [[27, "module-src.pyLIQTR.phase_factors.optimization", false]], "src.pyliqtr.phase_factors.optimization.angler_optimization": [[27, "module-src.pyLIQTR.phase_factors.optimization.angler_optimization", false]], "src.pyliqtr.phase_factors.optimization.chebyshevpoly": [[27, "module-src.pyLIQTR.phase_factors.optimization.ChebyshevPoly", false]], "src.pyliqtr.phase_factors.optimization.expander": [[27, "module-src.pyLIQTR.phase_factors.optimization.expander", false]], "src.pyliqtr.phase_factors.optimization.fitter": [[27, "module-src.pyLIQTR.phase_factors.optimization.fitter", false]], "src.pyliqtr.phase_factors.phase_factors": [[25, "module-src.pyLIQTR.phase_factors.phase_factors", false], [111, "module-src.pyLIQTR.phase_factors.phase_factors", false]], "src.pyliqtr.phase_factors.simulation": [[25, "module-src.pyLIQTR.phase_factors.simulation", false], [112, "module-src.pyLIQTR.phase_factors.simulation", false]], "src.pyliqtr.phaseestimation": [[12, "module-src.pyLIQTR.PhaseEstimation", false]], "src.pyliqtr.phaseestimation.pe": [[12, "module-src.pyLIQTR.PhaseEstimation.pe", false], [42, "module-src.pyLIQTR.PhaseEstimation.pe", false]], "src.pyliqtr.phaseestimation.pe_gates": [[12, "module-src.pyLIQTR.PhaseEstimation.pe_gates", false], [43, "module-src.pyLIQTR.PhaseEstimation.pe_gates", false]], "src.pyliqtr.phaseestimation.pe_sim": [[12, "module-src.pyLIQTR.PhaseEstimation.pe_sim", false], [44, "module-src.pyLIQTR.PhaseEstimation.pe_sim", false]], "src.pyliqtr.phaseestimation.tests": [[13, "module-src.pyLIQTR.PhaseEstimation.tests", false]], "src.pyliqtr.phaseestimation.tests.test_pe_gates": [[13, "module-src.pyLIQTR.PhaseEstimation.tests.test_pe_gates", false]], "src.pyliqtr.probleminstances": [[14, "module-src.pyLIQTR.ProblemInstances", false]], "src.pyliqtr.probleminstances.chemicalhamiltonian": [[14, "module-src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", false], [45, "module-src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", false]], "src.pyliqtr.probleminstances.electronicstructure": [[14, "module-src.pyLIQTR.ProblemInstances.ElectronicStructure", false], [46, "module-src.pyLIQTR.ProblemInstances.ElectronicStructure", false]], "src.pyliqtr.probleminstances.fermionic_models": [[14, "module-src.pyLIQTR.ProblemInstances.fermionic_models", false], [51, "module-src.pyLIQTR.ProblemInstances.fermionic_models", false]], "src.pyliqtr.probleminstances.getinstance": [[14, "module-src.pyLIQTR.ProblemInstances.getInstance", false], [52, "module-src.pyLIQTR.ProblemInstances.getInstance", false]], "src.pyliqtr.probleminstances.latticeinstance": [[14, "module-src.pyLIQTR.ProblemInstances.LatticeInstance", false], [47, "module-src.pyLIQTR.ProblemInstances.LatticeInstance", false]], "src.pyliqtr.probleminstances.matrixinstance": [[14, "module-src.pyLIQTR.ProblemInstances.MatrixInstance", false], [48, "module-src.pyLIQTR.ProblemInstances.MatrixInstance", false]], "src.pyliqtr.probleminstances.moleculeparameters": [[14, "module-src.pyLIQTR.ProblemInstances.MoleculeParameters", false]], "src.pyliqtr.probleminstances.nonlinearode": [[14, "module-src.pyLIQTR.ProblemInstances.NonlinearODE", false], [49, "module-src.pyLIQTR.ProblemInstances.NonlinearODE", false]], "src.pyliqtr.probleminstances.probleminstance": [[14, "module-src.pyLIQTR.ProblemInstances.ProblemInstance", false], [50, "module-src.pyLIQTR.ProblemInstances.ProblemInstance", false]], "src.pyliqtr.probleminstances.spin_models": [[14, "module-src.pyLIQTR.ProblemInstances.spin_models", false], [53, "module-src.pyLIQTR.ProblemInstances.spin_models", false]], "src.pyliqtr.qubitization": [[28, "module-src.pyLIQTR.qubitization", false]], "src.pyliqtr.qubitization.phase_estimation": [[28, "module-src.pyLIQTR.qubitization.phase_estimation", false], [113, "module-src.pyLIQTR.qubitization.phase_estimation", false]], "src.pyliqtr.qubitization.qsvt": [[28, "module-src.pyLIQTR.qubitization.qsvt", false], [114, "module-src.pyLIQTR.qubitization.qsvt", false]], "src.pyliqtr.qubitization.qsvt_dynamics": [[28, "module-src.pyLIQTR.qubitization.qsvt_dynamics", false], [115, "module-src.pyLIQTR.qubitization.qsvt_dynamics", false]], "src.pyliqtr.qubitization.qubitized_gates": [[28, "module-src.pyLIQTR.qubitization.qubitized_gates", false], [116, "module-src.pyLIQTR.qubitization.qubitized_gates", false]], "src.pyliqtr.scheduler": [[29, "module-src.pyLIQTR.scheduler", false]], "src.pyliqtr.scheduler.dag": [[29, "module-src.pyLIQTR.scheduler.DAG", false], [117, "module-src.pyLIQTR.scheduler.DAG", false]], "src.pyliqtr.scheduler.instruction": [[29, "module-src.pyLIQTR.scheduler.Instruction", false], [118, "module-src.pyLIQTR.scheduler.Instruction", false]], "src.pyliqtr.scheduler.scheduler": [[29, "module-src.pyLIQTR.scheduler.scheduler", false], [119, "module-src.pyLIQTR.scheduler.scheduler", false]], "src.pyliqtr.scheduler.scheduler_utils": [[29, "module-src.pyLIQTR.scheduler.scheduler_utils", false], [120, "module-src.pyLIQTR.scheduler.scheduler_utils", false]], "src.pyliqtr.scheduler.sets": [[29, "module-src.pyLIQTR.scheduler.sets", false], [121, "module-src.pyLIQTR.scheduler.sets", false]], "src.pyliqtr.tests": [[30, "module-src.pyLIQTR.tests", false]], "src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates": [[30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates", false]], "src.pyliqtr.tests.test_qualtran_resource_analyze_single_gate": [[30, "module-src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate", false]], "src.pyliqtr.utils": [[31, "module-src.pyLIQTR.utils", false]], "src.pyliqtr.utils.circuit_decomposition": [[31, "module-src.pyLIQTR.utils.circuit_decomposition", false], [123, "module-src.pyLIQTR.utils.circuit_decomposition", false]], "src.pyliqtr.utils.gate_complexity": [[31, "module-src.pyLIQTR.utils.gate_complexity", false]], "src.pyliqtr.utils.get_hdf5": [[31, "module-src.pyLIQTR.utils.get_hdf5", false], [124, "module-src.pyLIQTR.utils.get_hdf5", false]], "src.pyliqtr.utils.global_ancilla_manager": [[31, "module-src.pyLIQTR.utils.global_ancilla_manager", false], [125, "module-src.pyLIQTR.utils.global_ancilla_manager", false]], "src.pyliqtr.utils.hamiltonian": [[31, "module-src.pyLIQTR.utils.Hamiltonian", false], [122, "module-src.pyLIQTR.utils.Hamiltonian", false]], "src.pyliqtr.utils.pauli_string_manip": [[31, "module-src.pyLIQTR.utils.pauli_string_manip", false], [126, "module-src.pyLIQTR.utils.pauli_string_manip", false]], "src.pyliqtr.utils.plot_helpers": [[31, "module-src.pyLIQTR.utils.plot_helpers", false], [127, "module-src.pyLIQTR.utils.plot_helpers", false]], "src.pyliqtr.utils.printing": [[31, "module-src.pyLIQTR.utils.printing", false], [128, "module-src.pyLIQTR.utils.printing", false]], "src.pyliqtr.utils.qsp_helpers": [[31, "module-src.pyLIQTR.utils.qsp_helpers", false], [129, "module-src.pyLIQTR.utils.qsp_helpers", false]], "src.pyliqtr.utils.resource_analysis": [[31, "module-src.pyLIQTR.utils.resource_analysis", false], [130, "module-src.pyLIQTR.utils.resource_analysis", false]], "src.pyliqtr.utils.tests": [[32, "module-src.pyLIQTR.utils.tests", false]], "src.pyliqtr.utils.tests.conftest": [[32, "module-src.pyLIQTR.utils.tests.conftest", false]], "src.pyliqtr.utils.tests.test_gate_complexity": [[32, "module-src.pyLIQTR.utils.tests.test_gate_complexity", false]], "src.pyliqtr.utils.tests.test_printing": [[32, "module-src.pyLIQTR.utils.tests.test_printing", false]], "src.pyliqtr.utils.tests.test_resoure_analyze": [[32, "module-src.pyLIQTR.utils.tests.test_resoure_analyze", false]], "src.pyliqtr.utils.tests.test_utils": [[32, "module-src.pyLIQTR.utils.tests.test_utils", false]], "src.pyliqtr.utils.utils": [[31, "module-src.pyLIQTR.utils.utils", false], [131, "module-src.pyLIQTR.utils.utils", false]], "state_multifermi_idx() (in module src.pyliqtr.clam.operators)": [[19, "src.pyLIQTR.clam.operators.state_multifermi_idx", false]], "state_vacuum() (in module src.pyliqtr.clam.operators)": [[19, "src.pyLIQTR.clam.operators.state_vacuum", false]], "stepright() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.stepRight", false]], "stepright() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.stepRight", false]], "strings() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.strings", false]], "subprepare_lineart (class in src.pyliqtr.circuits.operators.prepare_lineart)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT", false]], "sum_of_lcu_coeffs (src.pyliqtr.circuits.operators.df_outerprepare.outerprepare attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare.sum_of_lcu_coeffs", false]], "swapcorrections (class in src.pyliqtr.blockencodings.carlemanlinearization)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.SwapCorrections", false]], "swapnetwork (class in src.pyliqtr.circuits.operators.swap_network)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork", false]], "swapunary (class in src.pyliqtr.circuits.operators.swap_network)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary", false]], "szegedywalkoperator (class in src.pyliqtr.circuits.operators.hamiltonian_encodings)": [[16, "src.pyLIQTR.circuits.operators.hamiltonian_encodings.SzegedyWalkOperator", false]], "t() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.T", false]], "t() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.T", false]], "t_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.T_arr", false]], "t_complexity_from_circuit() (in module src.pyliqtr.utils.resource_analysis)": [[31, "src.pyLIQTR.utils.resource_analysis.t_complexity_from_circuit", false]], "target_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding.target_registers", false]], "target_registers (src.pyliqtr.blockencodings.blockencoding.blockencoding_select_prepare attribute)": [[11, "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare.target_registers", false]], "target_registers (src.pyliqtr.blockencodings.doublefactorized.doublefactorized attribute)": [[11, "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized.target_registers", false]], "target_registers (src.pyliqtr.circuits.operators.binarytounary.binarytounary attribute)": [[16, "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary.target_registers", false]], "target_registers (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.target_registers", false]], "target_registers (src.pyliqtr.circuits.operators.fixuptableqrom.fixuptableqrom attribute)": [[16, "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM.target_registers", false]], "target_registers (src.pyliqtr.circuits.operators.select_lineart.fermionicselect_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT.target_registers", false]], "target_registers (src.pyliqtr.circuits.operators.swap_network.swapunary attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.target_registers", false]], "target_registers (src.pyliqtr.qubitization.phase_estimation.qubitizedphaseestimation attribute)": [[28, "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation.target_registers", false]], "target_registers (src.pyliqtr.qubitization.qsvt.qsvt_abstract attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_abstract.target_registers", false]], "target_registers (src.pyliqtr.qubitization.qsvt.qsvt_real_polynomial_sum attribute)": [[28, "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum.target_registers", false]], "target_registers (src.pyliqtr.qubitization.qubitized_gates.qubitizedwalkoperator attribute)": [[28, "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator.target_registers", false]], "target_registers() (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization method)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.target_registers", false]], "td() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.Td", false]], "ten_gates() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.ten_gates", false]], "tensor() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.tensor", false]], "terms (src.pyliqtr.utils.hamiltonian.hamiltonian attribute)": [[31, "src.pyLIQTR.utils.Hamiltonian.Hamiltonian.terms", false]], "terms() (src.pyliqtr.clam.operator_strings.op_strings method)": [[19, "src.pyLIQTR.clam.operator_strings.op_strings.terms", false]], "terms_jw (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian attribute)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.terms_jw", false]], "test_a_op() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_A_op", false]], "test_accuracy_issue() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_accuracy_issue", false]], "test_b_op() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_B_op", false]], "test_base_class_pyloperator_creation() (src.pyliqtr.circuits.tests.test_pyloperator.testpyloperator method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLOperator.TestPyLOperator.test_base_class_pyloperator_creation", false]], "test_binarytounarybits() (src.pyliqtr.circuits.operators.tests.test_binarytounary.testbinarytounarybits method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits.test_BinaryToUnaryBits", false]], "test_binarytounarybits_complexity() (src.pyliqtr.circuits.operators.tests.test_binarytounary.testbinarytounarybits method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits.test_BinaryToUnaryBits_complexity", false]], "test_binarytounarybits_decomposes() (src.pyliqtr.circuits.operators.tests.test_binarytounary.testbinarytounarybits method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits.test_BinaryToUnaryBits_decomposes", false]], "test_binarytounarybits_inverse() (src.pyliqtr.circuits.operators.tests.test_binarytounary.testbinarytounarybits method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits.test_BinaryToUnaryBits_inverse", false]], "test_binarytounarybits_qasm() (src.pyliqtr.circuits.operators.tests.test_binarytounary.testbinarytounarybits method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits.test_BinaryToUnaryBits_qasm", false]], "test_catalyticallycontrolledhadamard() (src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard.testcatalyticallycontrolledhadamard method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard.test_CatalyticallyControlledHadamard", false]], "test_catalyticallycontrolledhadamard_decomposes() (src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard.testcatalyticallycontrolledhadamard method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard.test_CatalyticallyControlledHadamard_decomposes", false]], "test_catalyticallycontrolledhadamard_inverse() (src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard.testcatalyticallycontrolledhadamard method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard.test_CatalyticallyControlledHadamard_inverse", false]], "test_catalyticallycontrolledhadamard_qasm() (src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard.testcatalyticallycontrolledhadamard method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard.test_CatalyticallyControlledHadamard_qasm", false]], "test_catalyticallycontrolledhadamard_resources() (src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard.testcatalyticallycontrolledhadamard method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard.test_CatalyticallyControlledHadamard_resources", false]], "test_chemical_phase_estimation() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_chemical_phase_estimation", false]], "test_chemical_phase_estimation_context() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_chemical_phase_estimation_context", false]], "test_childs_basic() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.test_childs_basic", false]], "test_childs_count() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.test_childs_count", false]], "test_childs_decomp() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.test_childs_decomp", false]], "test_circuit_4_qubits() (in module src.pyliqtr.gate_decomp.tests.conftest)": [[23, "src.pyLIQTR.gate_decomp.tests.conftest.test_circuit_4_qubits", false]], "test_circuit_no_rz() (in module src.pyliqtr.gate_decomp.tests.conftest)": [[23, "src.pyLIQTR.gate_decomp.tests.conftest.test_circuit_no_rz", false]], "test_cirqft_adjoint_and() (src.pyliqtr.tests.test_qualtran_resource_analyze_single_gate.testcirqftsinglegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate.TestCirqFTSIngleGateDecompose.test_cirqft_adjoint_and", false]], "test_cirqft_and() (src.pyliqtr.tests.test_qualtran_resource_analyze_single_gate.testcirqftsinglegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate.TestCirqFTSIngleGateDecompose.test_cirqft_and", false]], "test_cirqft_apply_gate_to_lth_qubit() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_apply_gate_to_lth_qubit", false]], "test_cirqft_generic_select() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_generic_select", false]], "test_cirqft_hubbard() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_hubbard", false]], "test_cirqft_multi_target_cnot() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_multi_target_cnot", false]], "test_cirqft_multicontrol_pauli() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_multicontrol_pauli", false]], "test_cirqft_prepare_uniform_superposition() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_prepare_uniform_superposition", false]], "test_cirqft_walk_operator() (src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates.testcirqftmultiplegatedecompose method)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose.test_cirqft_walk_operator", false]], "test_classical_control_examples() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_classical_control_examples", false]], "test_compressed_rep1() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_compressed_rep1", false]], "test_compressed_rep2() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_compressed_rep2", false]], "test_convert_complicated() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_complicated", false]], "test_convert_h() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_H", false]], "test_convert_ht() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_HT", false]], "test_convert_s() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_S", false]], "test_convert_t() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_T", false]], "test_convert_t2() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_convert_T2", false]], "test_dataandkeycondition_resolve_array() (src.pyliqtr.circuits.operators.tests.test_dataandkeycondition.testdataandkeycondition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition.TestDataAndKeyCondition.test_DataAndKeyCondition_resolve_array", false]], "test_dataandkeycondition_resolve_int() (src.pyliqtr.circuits.operators.tests.test_dataandkeycondition.testdataandkeycondition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition.TestDataAndKeyCondition.test_DataAndKeyCondition_resolve_int", false]], "test_determine_gate_precision_circuit_precision_none() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_determine_gate_precision_circuit_precision_none", false]], "test_determine_gate_precision_no_rotational_gates() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_determine_gate_precision_no_rotational_gates", false]], "test_determine_gate_precision_only_circuit_precision() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_determine_gate_precision_only_circuit_precision", false]], "test_determine_gate_precision_only_gate_precision() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_determine_gate_precision_only_gate_precision", false]], "test_determine_gate_precision_valid_params() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_determine_gate_precision_valid_params", false]], "test_electronic_structure_context() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_electronic_structure_context", false]], "test_equality() (src.pyliqtr.circuits.operators.tests.test_selectv.testselectv method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV.test_equality", false]], "test_equalitytest() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest", false]], "test_equalitytest_decomposes() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest_decomposes", false]], "test_equalitytest_inverse() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest_inverse", false]], "test_equalitytest_qasm() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest_qasm", false]], "test_equalitytest_resources() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest_resources", false]], "test_equalitytest_valueerror() (src.pyliqtr.circuits.operators.tests.test_equalitytest.testequalitytest method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest.test_EqualityTest_ValueError", false]], "test_exact_decomp_fallback_prec10() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_fallback_prec10", false]], "test_exact_decomp_fallback_prec20() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_fallback_prec20", false]], "test_exact_decomp_fallback_prec30() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_fallback_prec30", false]], "test_exact_decomp_fallback_prec40() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_fallback_prec40", false]], "test_exact_decomp_fallback_prec50() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_fallback_prec50", false]], "test_exact_decomp_prec10() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_prec10", false]], "test_exact_decomp_prec20() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_prec20", false]], "test_exact_decomp_prec30() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_prec30", false]], "test_exact_decomp_prec40() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_exact_decomp_prec40", false]], "test_factor1() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_factor1", false]], "test_factor2() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_factor2", false]], "test_fermi_hubbard() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_fermi_hubbard", false]], "test_fermi_hubbard_context() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_fermi_hubbard_context", false]], "test_fermi_hubbard_context_error() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_fermi_hubbard_context_error", false]], "test_fermi_hubbard_simple_context() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_fermi_hubbard_simple_context", false]], "test_find_bounding_ellipse() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_bounding_ellipse", false]], "test_find_e_and_z() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_e_and_z", false]], "test_find_k_1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_k_1", false]], "test_find_k_2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_k_2", false]], "test_find_k_3() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_k_3", false]], "test_find_k_4() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_k_4", false]], "test_find_k_5() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_k_5", false]], "test_find_u_candidate_1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_u_candidate_1", false]], "test_find_u_candidate_2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_u_candidate_2", false]], "test_find_u_candidate_3() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_u_candidate_3", false]], "test_find_u_candidate_4() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_find_u_candidate_4", false]], "test_flagzeroasfailure() (src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure.testflagzeroasfailure method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure.test_FlagZeroAsFailure", false]], "test_flagzeroasfailure_decomposes() (src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure.testflagzeroasfailure method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure.test_FlagZeroAsFailure_decomposes", false]], "test_flagzeroasfailure_inverse() (src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure.testflagzeroasfailure method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure.test_FlagZeroAsFailure_inverse", false]], "test_flagzeroasfailure_qasm() (src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure.testflagzeroasfailure method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure.test_FlagZeroAsFailure_qasm", false]], "test_flagzeroasfailure_resources() (src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure.testflagzeroasfailure method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure.test_FlagZeroAsFailure_resources", false]], "test_for_bad_gate_op() (in module src.pyliqtr.utils.circuit_decomposition)": [[31, "src.pyLIQTR.utils.circuit_decomposition.test_for_bad_gate_op", false]], "test_gate_complexity_init() (src.pyliqtr.utils.tests.test_gate_complexity.testgatecomplexity method)": [[32, "src.pyLIQTR.utils.tests.test_gate_complexity.TestGateComplexity.test_gate_complexity_init", false]], "test_get_approx_t_depth() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_get_approx_t_depth", false]], "test_get_attr_qasm() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_get_attr_qasm", false]], "test_gse_circuit() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_gse_circuit", false]], "test_heisenberg() (src.pyliqtr.utils.tests.test_printing.testprinting method)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting.test_heisenberg", false]], "test_heisenberg_non_zero() (src.pyliqtr.clam.tests.test_heisenberg.testclamheisenberg method)": [[21, "src.pyLIQTR.clam.tests.test_heisenberg.TestClamHeisenberg.test_heisenberg_non_zero", false]], "test_heisenberg_zero() (src.pyliqtr.clam.tests.test_heisenberg.testclamheisenberg method)": [[21, "src.pyLIQTR.clam.tests.test_heisenberg.TestClamHeisenberg.test_heisenberg_zero", false]], "test_hundred_gate_resources() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_hundred_gate_resources", false]], "test_invalid_trotterized_hamiltonian() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_invalid_trotterized_hamiltonian", false]], "test_is_mac() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_is_mac", false]], "test_is_windows_on_mac_or_linux() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_is_windows_on_mac_or_linux", false]], "test_is_windows_on_windows() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_is_windows_on_windows", false]], "test_k_op() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_K_op", false]], "test_modular_square_root1() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_modular_square_root1", false]], "test_modular_square_root2() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_modular_square_root2", false]], "test_modular_square_root3() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_modular_square_root3", false]], "test_modular_square_root4() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_modular_square_root4", false]], "test_modular_square_root5() (src.pyliqtr.gate_decomp.tests.test_solve_diophantine.testfactoringfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions.test_modular_square_root5", false]], "test_mult_matdomega_1() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_mult_MATDOMEGA_1", false]], "test_mult_matdomega_2() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_mult_MATDOMEGA_2", false]], "test_mult_so3_1() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_mult_SO3_1", false]], "test_mult_so3_2() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_mult_SO3_2", false]], "test_mult_so3_3() (src.pyliqtr.gate_decomp.tests.test_matrices.testmatrices method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices.test_mult_SO3_3", false]], "test_multi_axis_rotation_prec10() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_multi_axis_rotation_prec10", false]], "test_multi_axis_rotation_prec13() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_multi_axis_rotation_prec13", false]], "test_multi_cz_basic() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.test_multi_cz_basic", false]], "test_multi_cz_count() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.test_multi_cz_count", false]], "test_multi_cz_equality() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.test_multi_cz_equality", false]], "test_multi_cz_toqasm() (src.pyliqtr.circuits.operators.tests.test_multicz.testmulticz method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ.test_multi_cz_toQasm", false]], "test_multiple_decomp_rotations_to_qasm() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_multiple_decomp_rotations_to_qasm", false]], "test_num_rotation_gates1() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_num_rotation_gates1", false]], "test_one_dim_grid_problem_rand() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_one_dim_grid_problem_rand", false]], "test_open_fermion_to_qasm() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_open_fermion_to_qasm", false]], "test_pauliproductexponentials_decomposes() (src.pyliqtr.circuits.operators.tests.test_productpauliexponentials.testproductpauliexponentials method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials.test_PauliProductExponentials_decomposes", false]], "test_phasegradientzrotation() (src.pyliqtr.circuits.operators.tests.test_phasegradientrotation.testphasegradientzrotation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation.test_PhaseGradientZRotation", false]], "test_phasegradientzrotation_decomposes() (src.pyliqtr.circuits.operators.tests.test_phasegradientrotation.testphasegradientzrotation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation.test_PhaseGradientZRotation_decomposes", false]], "test_phasegradientzrotation_inverse() (src.pyliqtr.circuits.operators.tests.test_phasegradientrotation.testphasegradientzrotation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation.test_PhaseGradientZRotation_inverse", false]], "test_phasegradientzrotation_qasm() (src.pyliqtr.circuits.operators.tests.test_phasegradientrotation.testphasegradientzrotation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation.test_PhaseGradientZRotation_qasm", false]], "test_pi_rots() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_pi_rots", false]], "test_prepare_comparison_to_common_ops() (src.pyliqtr.circuits.operators.tests.test_prepare.testprepare method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_prepare.TestPrepare.test_prepare_comparison_to_common_ops", false]], "test_preparemuunaryencoded() (src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded.testpreparemuunaryencoded method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded.test_PrepareMuUnaryEncoded", false]], "test_preparemuunaryencoded_decomposes() (src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded.testpreparemuunaryencoded method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded.test_PrepareMuUnaryEncoded_decomposes", false]], "test_preparemuunaryencoded_inverse() (src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded.testpreparemuunaryencoded method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded.test_PrepareMuUnaryEncoded_inverse", false]], "test_preparemuunaryencoded_qasm() (src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded.testpreparemuunaryencoded method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded.test_PrepareMuUnaryEncoded_qasm", false]], "test_preparemuunaryencoded_resources() (src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded.testpreparemuunaryencoded method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded.test_PrepareMuUnaryEncoded_resources", false]], "test_preparenusuperposition() (src.pyliqtr.circuits.operators.tests.test_preparenusuperposition.testpreparenusuperposition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition.test_PrepareNuSuperposition", false]], "test_preparenusuperposition_decomposes() (src.pyliqtr.circuits.operators.tests.test_preparenusuperposition.testpreparenusuperposition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition.test_PrepareNuSuperposition_decomposes", false]], "test_preparenusuperposition_inverse() (src.pyliqtr.circuits.operators.tests.test_preparenusuperposition.testpreparenusuperposition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition.test_PrepareNuSuperposition_inverse", false]], "test_preparenusuperposition_qasm() (src.pyliqtr.circuits.operators.tests.test_preparenusuperposition.testpreparenusuperposition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition.test_PrepareNuSuperposition_qasm", false]], "test_preparenusuperposition_resources() (src.pyliqtr.circuits.operators.tests.test_preparenusuperposition.testpreparenusuperposition method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition.test_PrepareNuSuperposition_resources", false]], "test_preparepowertwostate() (src.pyliqtr.circuits.operators.tests.test_preparepowertwostate.testpreparepowertwostate method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState.test_PreparePowerTwoState", false]], "test_preparepowertwostate_decomposes() (src.pyliqtr.circuits.operators.tests.test_preparepowertwostate.testpreparepowertwostate method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState.test_PreparePowerTwoState_decomposes", false]], "test_preparepowertwostate_inverse() (src.pyliqtr.circuits.operators.tests.test_preparepowertwostate.testpreparepowertwostate method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState.test_PreparePowerTwoState_inverse", false]], "test_preparepowertwostate_qasm() (src.pyliqtr.circuits.operators.tests.test_preparepowertwostate.testpreparepowertwostate method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState.test_PreparePowerTwoState_qasm", false]], "test_preparepowertwostate_resources() (src.pyliqtr.circuits.operators.tests.test_preparepowertwostate.testpreparepowertwostate method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState.test_PreparePowerTwoState_resources", false]], "test_preparet_firstquantized_decomposes() (src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized.testpreparet_firstquantized method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized.test_PrepareT_FirstQuantized_decomposes", false]], "test_preparet_firstquantized_inverse() (src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized.testpreparet_firstquantized method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized.test_PrepareT_FirstQuantized_inverse", false]], "test_preparet_firstquantized_qasm() (src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized.testpreparet_firstquantized method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized.test_PrepareT_FirstQuantized_qasm", false]], "test_preparet_firstquantized_resources() (src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized.testpreparet_firstquantized method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized.test_PrepareT_FirstQuantized_resources", false]], "test_productpauliexponentials_qasm() (src.pyliqtr.circuits.operators.tests.test_productpauliexponentials.testproductpauliexponentials method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials.test_ProductPauliExponentials_qasm", false]], "test_productpauliexponentials_uncompute() (src.pyliqtr.circuits.operators.tests.test_productpauliexponentials.testproductpauliexponentials method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials.test_ProductPauliExponentials_uncompute", false]], "test_productpauliexponetials() (src.pyliqtr.circuits.operators.tests.test_productpauliexponentials.testproductpauliexponentials method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials.test_ProductPauliExponetials", false]], "test_profile_prec10() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_profile_prec10", false]], "test_profile_prec15() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_profile_prec15", false]], "test_pylcircuit_init() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_pylcircuit_init", false]], "test_qromwithmeasurementuncompute() (src.pyliqtr.circuits.operators.tests.test_qromwithmeasurementuncompute.testqromwithmeasurementuncompute method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute.TestQROMwithMeasurementUncompute.test_QROMwithMeasurementUncompute", false]], "test_qromwithmeasurementuncompute_decomposes() (src.pyliqtr.circuits.operators.tests.test_qromwithmeasurementuncompute.testqromwithmeasurementuncompute method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute.TestQROMwithMeasurementUncompute.test_QROMwithMeasurementUncompute_decomposes", false]], "test_qsp_circuit() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_qsp_circuit", false]], "test_qtadd_decomposes() (src.pyliqtr.circuits.operators.tests.test_qtadd.testqtadd method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd.test_qtAdd_decomposes", false]], "test_qtadd_qasm() (src.pyliqtr.circuits.operators.tests.test_qtadd.testqtadd method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd.test_qtAdd_qasm", false]], "test_qtadd_with_phase_gradient() (src.pyliqtr.circuits.operators.tests.test_qtadd.testqtadd method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd.test_qtAdd_with_phase_gradient", false]], "test_qtadd_with_zero_padding() (src.pyliqtr.circuits.operators.tests.test_qtadd.testqtadd method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd.test_qtAdd_with_zero_padding", false]], "test_qtadd_with_zero_padding_inverse() (src.pyliqtr.circuits.operators.tests.test_qtadd.testqtadd method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd.test_qtAdd_with_zero_padding_inverse", false]], "test_r_op() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_R_op", false]], "test_rand_angles_prec50() (src.pyliqtr.gate_decomp.tests.test_exact_decomp.testexactdecomp method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp.test_rand_angles_prec50", false]], "test_random_decomp1() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_random_decomp1", false]], "test_random_decomp2() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_random_decomp2", false]], "test_reduce_skew_extra_1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_reduce_skew_extra_1", false]], "test_reduce_skew_large_bias1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_reduce_skew_large_bias1", false]], "test_reduce_skew_large_bias2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_reduce_skew_large_bias2", false]], "test_reflect_basic() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.test_reflect_basic", false]], "test_reflect_count() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.test_reflect_count", false]], "test_reflect_equality() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.test_reflect_equality", false]], "test_reflect_toqasm() (src.pyliqtr.circuits.operators.tests.test_reflect.testreflect method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect.test_reflect_toQasm", false]], "test_rotationsqrom() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM", false]], "test_rotationsqrom_decomposes() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM_decomposes", false]], "test_rotationsqrom_inverse() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM_inverse", false]], "test_rotationsqrom_measurement_uncompute() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM_measurement_uncompute", false]], "test_rotationsqrom_qasm() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM_qasm", false]], "test_rotationsqrom_resources() (src.pyliqtr.circuits.operators.tests.test_rotationsqrom.testrotationsqrom method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM.test_RotationsQROM_resources", false]], "test_rx_decomp_inverse_gate() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rx_decomp_inverse_gate", false]], "test_rx_decomp_to_qasm() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rx_decomp_to_qasm", false]], "test_ry_decomp_to_qasm() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_ry_decomp_to_qasm", false]], "test_rz_decomp1() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp1", false]], "test_rz_decomp2() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp2", false]], "test_rz_decomp_circuit2qasm() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp_circuit2qasm", false]], "test_rz_decomp_qsp_circuit() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp_qsp_circuit", false]], "test_rz_decomp_to_qasm() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp_to_qasm", false]], "test_rz_decomp_w_classical_controls() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_rz_decomp_w_classical_controls", false]], "test_scaled_one_dim_grid_problem_1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_scaled_one_dim_grid_problem_1", false]], "test_scaled_one_dim_grid_problem_2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_scaled_one_dim_grid_problem_2", false]], "test_scaled_one_dim_grid_problem_3() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_scaled_one_dim_grid_problem_3", false]], "test_scaled_one_dim_grid_problem_4() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_scaled_one_dim_grid_problem_4", false]], "test_shift_operator() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_shift_operator", false]], "test_single_gate_depth() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_single_gate_depth", false]], "test_single_gate_resources() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_single_gate_resources", false]], "test_single_qubit_x_rotation() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_single_qubit_x_rotation", false]], "test_single_qubit_y_rotation() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_single_qubit_y_rotation", false]], "test_single_qubit_z_rotation() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_single_qubit_z_rotation", false]], "test_solve_one_dim_grid_problem_1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_1", false]], "test_solve_one_dim_grid_problem_2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_2", false]], "test_solve_one_dim_grid_problem_3() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_3", false]], "test_solve_one_dim_grid_problem_4() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_4", false]], "test_solve_one_dim_grid_problem_5() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_5", false]], "test_solve_one_dim_grid_problem_6() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_6", false]], "test_solve_one_dim_grid_problem_tmp() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_one_dim_grid_problem_tmp", false]], "test_solve_two_dim_grid_problem_ellipse() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_solve_two_dim_grid_problem_ellipse", false]], "test_ten_gate_resources() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_ten_gate_resources", false]], "test_thousand_gate_resources() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.test_thousand_gate_resources", false]], "test_to_openqasm() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_to_openqasm", false]], "test_trotter_unitary_instantiates() (src.pyliqtr.phaseestimation.tests.test_pe_gates.testpegates method)": [[13, "src.pyLIQTR.PhaseEstimation.tests.test_pe_gates.TestPEGates.test_Trotter_Unitary_instantiates", false]], "test_two_dim_upright_rectangle1() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_two_dim_upright_rectangle1", false]], "test_two_dim_upright_rectangle2() (src.pyliqtr.gate_decomp.tests.test_point_enumeration.testapproximationfunctions method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions.test_two_dim_upright_rectangle2", false]], "test_uniformsuperpositionij_decomposes() (src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij.testuniformsuperpositionij method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ.test_UniformSuperpositionIJ_decomposes", false]], "test_uniformsuperpositionij_inverse() (src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij.testuniformsuperpositionij method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ.test_UniformSuperpositionIJ_inverse", false]], "test_uniformsuperpositionij_qasm() (src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij.testuniformsuperpositionij method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ.test_UniformSuperpositionIJ_qasm", false]], "test_uniformsuperpositionij_resources() (src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij.testuniformsuperpositionij method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ.test_UniformSuperpositionIJ_resources", false]], "test_unitary_basic() (src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings.testencodings method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings.test_unitary_basic", false]], "test_unitary_decomp() (src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings.testencodings method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings.test_unitary_decomp", false]], "test_writing_out_qasm_with_decomposed_rotations() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_writing_out_qasm_with_decomposed_rotations", false]], "test_writing_out_qasm_with_rotations() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.test_writing_out_qasm_with_rotations", false]], "test_xpow_gates() (src.pyliqtr.gate_decomp.tests.test_cirq_transformers.testcirqtransforms method)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms.test_XPow_gates", false]], "testapproximationfunctions (class in src.pyliqtr.gate_decomp.tests.test_point_enumeration)": [[23, "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions", false]], "testbinarytounarybits (class in src.pyliqtr.circuits.operators.tests.test_binarytounary)": [[17, "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits", false]], "testcatalyticallycontrolledhadamard (class in src.pyliqtr.circuits.operators.tests.test_catalyticallycontrolledhadamard)": [[17, "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard", false]], "testcirqftmultiplegatedecompose (class in src.pyliqtr.tests.test_qualtran_resource_analyze_multiple_gates)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose", false]], "testcirqftsinglegatedecompose (class in src.pyliqtr.tests.test_qualtran_resource_analyze_single_gate)": [[30, "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate.TestCirqFTSIngleGateDecompose", false]], "testcirqtransforms (class in src.pyliqtr.gate_decomp.tests.test_cirq_transformers)": [[23, "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms", false]], "testclamheisenberg (class in src.pyliqtr.clam.tests.test_heisenberg)": [[21, "src.pyLIQTR.clam.tests.test_heisenberg.TestClamHeisenberg", false]], "testdataandkeycondition (class in src.pyliqtr.circuits.operators.tests.test_dataandkeycondition)": [[17, "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition.TestDataAndKeyCondition", false]], "testdiagonalbitstring (class in src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring)": [[17, "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring", false]], "testencodings (class in src.pyliqtr.circuits.operators.tests.test_hamiltonian_encodings)": [[17, "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings", false]], "testequalitytest (class in src.pyliqtr.circuits.operators.tests.test_equalitytest)": [[17, "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest", false]], "testexactdecomp (class in src.pyliqtr.gate_decomp.tests.test_exact_decomp)": [[23, "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp", false]], "testfactoringfunctions (class in src.pyliqtr.gate_decomp.tests.test_solve_diophantine)": [[23, "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions", false]], "testflagzeroasfailure (class in src.pyliqtr.circuits.operators.tests.test_flagzeroasfailure)": [[17, "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure", false]], "testgatecomplexity (class in src.pyliqtr.utils.tests.test_gate_complexity)": [[32, "src.pyLIQTR.utils.tests.test_gate_complexity.TestGateComplexity", false]], "testmatrices (class in src.pyliqtr.gate_decomp.tests.test_matrices)": [[23, "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices", false]], "testmulticz (class in src.pyliqtr.circuits.operators.tests.test_multicz)": [[17, "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ", false]], "testnuinequality (class in src.pyliqtr.circuits.operators.preparenu)": [[16, "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality", false]], "testpegates (class in src.pyliqtr.phaseestimation.tests.test_pe_gates)": [[13, "src.pyLIQTR.PhaseEstimation.tests.test_pe_gates.TestPEGates", false]], "testphasegradientzrotation (class in src.pyliqtr.circuits.operators.tests.test_phasegradientrotation)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation", false]], "testprepare (class in src.pyliqtr.circuits.operators.tests.test_prepare)": [[17, "src.pyLIQTR.circuits.operators.tests.test_prepare.TestPrepare", false]], "testpreparemuunaryencoded (class in src.pyliqtr.circuits.operators.tests.test_preparemuunaryencoded)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded", false]], "testpreparenusuperposition (class in src.pyliqtr.circuits.operators.tests.test_preparenusuperposition)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition", false]], "testpreparepowertwostate (class in src.pyliqtr.circuits.operators.tests.test_preparepowertwostate)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState", false]], "testpreparet_firstquantized (class in src.pyliqtr.circuits.operators.tests.test_preparet_firstquantized)": [[17, "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized", false]], "testprinting (class in src.pyliqtr.utils.tests.test_printing)": [[32, "src.pyLIQTR.utils.tests.test_printing.TestPrinting", false]], "testproductpauliexponentials (class in src.pyliqtr.circuits.operators.tests.test_productpauliexponentials)": [[17, "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials", false]], "testpylcircuit (class in src.pyliqtr.circuits.tests.test_pylcircuit)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit", false]], "testpyloperator (class in src.pyliqtr.circuits.tests.test_pyloperator)": [[18, "src.pyLIQTR.circuits.tests.test_pyLOperator.TestPyLOperator", false]], "testqromwithmeasurementuncompute (class in src.pyliqtr.circuits.operators.tests.test_qromwithmeasurementuncompute)": [[17, "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute.TestQROMwithMeasurementUncompute", false]], "testqtadd (class in src.pyliqtr.circuits.operators.tests.test_qtadd)": [[17, "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd", false]], "testreflect (class in src.pyliqtr.circuits.operators.tests.test_reflect)": [[17, "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect", false]], "testrotationsqrom (class in src.pyliqtr.circuits.operators.tests.test_rotationsqrom)": [[17, "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM", false]], "testselectv (class in src.pyliqtr.circuits.operators.tests.test_selectv)": [[17, "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV", false]], "testtcount() (src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring.testdiagonalbitstring method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring.testTCount", false]], "testtranslation (class in src.pyliqtr.circuits.operators.tests.test_cyclic_shift)": [[17, "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift.TestTranslation", false]], "testtranslation (class in src.pyliqtr.circuits.operators.tests.test_translation)": [[17, "src.pyLIQTR.circuits.operators.tests.test_translation.TestTranslation", false]], "testuniformsuperpositionij (class in src.pyliqtr.circuits.operators.tests.test_uniformsuperpositionij)": [[17, "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ", false]], "testunitary0() (src.pyliqtr.circuits.operators.tests.test_diagonal_bitstring.testdiagonalbitstring method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring.testUnitary0", false]], "testunitarycs() (src.pyliqtr.circuits.operators.tests.test_cyclic_shift.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift.TestTranslation.testUnitaryCS", false]], "testunitarycs() (src.pyliqtr.circuits.operators.tests.test_translation.testtranslation method)": [[17, "src.pyLIQTR.circuits.operators.tests.test_translation.TestTranslation.testUnitaryCS", false]], "testutils (class in src.pyliqtr.utils.tests.test_utils)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils", false]], "theta (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.theta", false]], "theta_alt (src.pyliqtr.circuits.operators.prepare_lineart.subprepare_lineart attribute)": [[16, "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT.theta_alt", false]], "theta_sign (src.pyliqtr.circuits.operators.bitwisezrotation.bitwisezrotation attribute)": [[16, "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation.theta_sign", false]], "thousand_gates() (src.pyliqtr.circuits.tests.test_pylcircuit.testpylcircuit method)": [[18, "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit.thousand_gates", false]], "time_step_comparison_mpe() (in module src.pyliqtr.utils.qsp_helpers)": [[31, "src.pyLIQTR.utils.qsp_helpers.time_step_comparison_mpe", false]], "to_array() (src.pyliqtr.gate_decomp.matrices.mat_d_omega method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.to_array", false]], "to_openqasm() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.to_openqasm", false]], "to_zomega() (src.pyliqtr.gate_decomp.rings.z_sqrt2 method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2.to_zomega", false]], "to_zsqrt() (src.pyliqtr.gate_decomp.rings.z_omega method)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA.to_zsqrt", false]], "toffoli() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.toffoli", false]], "toffoli() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.toffoli", false]], "total_decomp (src.pyliqtr.circuits.pyloperator.pyloperator attribute)": [[15, "src.pyLIQTR.circuits.pyLOperator.pyLOperator.total_decomp", false]], "translation (class in src.pyliqtr.circuits.operators.translation)": [[16, "src.pyLIQTR.circuits.operators.translation.Translation", false]], "transpose() (src.pyliqtr.gate_decomp.grid_operator.gridoperator method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.transpose", false]], "transverse_field_ising (class in src.pyliqtr.probleminstances.spin_models)": [[14, "src.pyLIQTR.ProblemInstances.spin_models.Transverse_Field_Ising", false]], "triangularlattice (class in src.pyliqtr.clam.lattice_definitions)": [[19, "src.pyLIQTR.clam.lattice_definitions.TriangularLattice", false]], "trotter_unitary (class in src.pyliqtr.phaseestimation.pe_gates)": [[12, "src.pyLIQTR.PhaseEstimation.pe_gates.Trotter_Unitary", false]], "trotterized_hamiltonian() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.trotterized_hamiltonian", false]], "tupleize() (in module src.pyliqtr.clam.utilities)": [[19, "src.pyLIQTR.clam.utilities.tupleize", false]], "tupleize() (src.pyliqtr.clam.cell_complex.cell method)": [[19, "src.pyLIQTR.clam.cell_complex.Cell.tupleize", false]], "tupleize_sites() (in module src.pyliqtr.clam.utilities)": [[19, "src.pyLIQTR.clam.utilities.tupleize_sites", false]], "two_complement() (in module src.pyliqtr.circuits.operators.addmod)": [[16, "src.pyLIQTR.circuits.operators.AddMod.two_complement", false]], "u() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.U", false]], "u_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.U_arr", false]], "unaryiterate (class in src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.UnaryIterate", false]], "uncompute (src.pyliqtr.circuits.operators.df_rotationsblock.rotationsblock attribute)": [[16, "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock.uncompute", false]], "uncompute (src.pyliqtr.circuits.operators.productpauliexponentials.productpauliexponentials attribute)": [[16, "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials.uncompute", false]], "uniformsuperpositionijfirstquantization (class in src.pyliqtr.circuits.operators.uniformsuperpositionij)": [[16, "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization", false]], "unitary_kw_args (src.pyliqtr.phaseestimation.pe.phaseestimation attribute)": [[12, "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation.unitary_kw_args", false]], "unitaryblockencode (class in src.pyliqtr.circuits.operators.hamiltonian_encodings)": [[16, "src.pyLIQTR.circuits.operators.hamiltonian_encodings.UnitaryBlockEncode", false]], "unitcell (class in src.pyliqtr.clam.lattice)": [[19, "src.pyLIQTR.clam.lattice.UnitCell", false]], "update_info() (src.pyliqtr.utils.printing.qasminfo method)": [[31, "src.pyLIQTR.utils.printing.QASMInfo.update_info", false]], "v() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.V", false]], "v_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.V_arr", false]], "valid_encodings (class in src.pyliqtr.blockencodings)": [[11, "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS", false]], "vector (src.pyliqtr.blockencodings.carlemanlinearization.carleman_linearization attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization.vector", false]], "vector (src.pyliqtr.blockencodings.carlemanlinearization.lcuprep attribute)": [[11, "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep.vector", false]], "vector (src.pyliqtr.circuits.operators.cascading_translation.cascadingtranslation attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation.vector", false]], "vector (src.pyliqtr.circuits.operators.cascading_translation.cascadingunary attribute)": [[16, "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary.vector", false]], "vector (src.pyliqtr.circuits.operators.cyclic_shift.cyclicshiftpermutation attribute)": [[16, "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation.vector", false]], "vector (src.pyliqtr.circuits.operators.diagonal_bitstring.diagonalbitstring attribute)": [[16, "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring.vector", false]], "vector (src.pyliqtr.circuits.operators.examplefmatrices.f0_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator.vector", false]], "vector (src.pyliqtr.circuits.operators.examplefmatrices.f1_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator.vector", false]], "vector (src.pyliqtr.circuits.operators.examplefmatrices.f2_operator attribute)": [[16, "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator.vector", false]], "vector (src.pyliqtr.circuits.operators.swap_network.swapnetwork attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork.vector", false]], "vector (src.pyliqtr.circuits.operators.swap_network.swapunary attribute)": [[16, "src.pyLIQTR.circuits.operators.swap_network.SwapUnary.vector", false]], "vector (src.pyliqtr.circuits.operators.translation.translation attribute)": [[16, "src.pyLIQTR.circuits.operators.translation.Translation.vector", false]], "vector (src.pyliqtr.probleminstances.nonlinearode.foperators attribute)": [[14, "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators.vector", false]], "view_decomp_levels() (src.pyliqtr.circuits.pylcircuit.pylcircuit method)": [[15, "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit.view_decomp_levels", false]], "vlasov_coeffs_linear_1d() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_coeffs_linear_1d", false]], "vlasov_coeffs_linear_1d_sparse() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_coeffs_linear_1d_sparse", false]], "vlasov_coeffs_nonlinear_1d() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_coeffs_nonlinear_1d", false]], "vlasov_coeffs_nonlinear_1d_sparse() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_coeffs_nonlinear_1d_sparse", false]], "vlasov_n8_qsp() (src.pyliqtr.utils.tests.test_utils.testutils method)": [[32, "src.pyLIQTR.utils.tests.test_utils.TestUtils.vlasov_n8_qsp", false]], "vlasov_spectral_linear() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_spectral_linear", false]], "vlasov_spectral_linear_sparse() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_spectral_linear_sparse", false]], "vlasov_spectral_system() (in module src.pyliqtr.clam.linearization_tools.vlasov_spectral)": [[20, "src.pyLIQTR.clam.linearization_tools.vlasov_spectral.vlasov_spectral_system", false]], "walkdown() (in module src.pyliqtr.circuits.operators.select_oracle_pauli_lcu)": [[16, "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.walkDown", false]], "walkdown() (in module src.pyliqtr.circuits.operators.selectvutils)": [[16, "src.pyLIQTR.circuits.operators.selectVutils.walkDown", false]], "wfn_product_state() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.wfn_product_state", false]], "wfn_to_cm() (in module src.pyliqtr.clam.time_dynamics)": [[19, "src.pyLIQTR.clam.time_dynamics.wfn_to_cm", false]], "write_poly() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.write_poly", false]], "write_xyz() (src.pyliqtr.clam.geometry.geometry method)": [[19, "src.pyLIQTR.clam.geometry.Geometry.write_xyz", false]], "x() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.X", false]], "x() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.X", false]], "xzx() (src.pyliqtr.pest_interface.pest_python.dpw_jw_alternating_spin method)": [[24, "src.pyLIQTR.pest_interface.pest_python.dpw_jw_alternating_spin.xzx", false]], "xzx_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.xzx_arr", false]], "y() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.Y", false]], "yield_df_info() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.yield_DF_Info", false]], "yield_fable_info() (src.pyliqtr.probleminstances.matrixinstance.matrixinstance method)": [[14, "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance.yield_fable_info", false]], "yield_fermionic_info() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.yield_Fermionic_Info", false]], "yield_firstquantized_info() (src.pyliqtr.probleminstances.electronicstructure.electronicstructure method)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure.yield_FirstQuantized_Info", false]], "yield_firstquantized_info() (src.pyliqtr.probleminstances.moleculeparameters.moleculeparameters method)": [[14, "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters.yield_FirstQuantized_Info", false]], "yield_lineart_info() (src.pyliqtr.probleminstances.electronicstructure.electronicstructure method)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure.yield_LinearT_Info", false]], "yield_lineart_info() (src.pyliqtr.probleminstances.fermionic_models.fermihubbardnnn method)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN.yield_LinearT_Info", false]], "yield_operator_info() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.yield_Operator_Info", false]], "yield_operator_matrix() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.yield_Operator_Matrix", false]], "yield_paulilcu_info() (src.pyliqtr.probleminstances.chemicalhamiltonian.chemicalhamiltonian method)": [[14, "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian.yield_PauliLCU_Info", false]], "yield_paulilcu_info() (src.pyliqtr.probleminstances.electronicstructure.electronicstructure method)": [[14, "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure.yield_PauliLCU_Info", false]], "yield_paulilcu_info() (src.pyliqtr.probleminstances.fermionic_models.fermihubbardnnn method)": [[14, "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN.yield_PauliLCU_Info", false]], "yield_paulilcu_info() (src.pyliqtr.probleminstances.latticeinstance.latticeinstance method)": [[14, "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance.yield_PauliLCU_Info", false]], "yield_paulilcu_info() (src.pyliqtr.probleminstances.probleminstance.probleminstance method)": [[14, "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance.yield_PauliLCU_Info", false]], "z() (src.pyliqtr.gate_decomp.grid_operator.gridoperator class method)": [[22, "src.pyLIQTR.gate_decomp.grid_operator.GridOperator.Z", false]], "z() (src.pyliqtr.gate_decomp.matrices.mat_d_omega class method)": [[22, "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA.Z", false]], "z() (src.pyliqtr.pest_interface.pest_python.dpw_jw_alternating_spin method)": [[24, "src.pyLIQTR.pest_interface.pest_python.dpw_jw_alternating_spin.z", false]], "z_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.z_arr", false]], "z_omega (class in src.pyliqtr.gate_decomp.rings)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_OMEGA", false]], "z_sqrt2 (class in src.pyliqtr.gate_decomp.rings)": [[22, "src.pyLIQTR.gate_decomp.rings.Z_SQRT2", false]], "zero_poly() (src.pyliqtr.phase_factors.optimization.chebyshevpoly.chebyshevpoly method)": [[27, "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly.zero_poly", false]], "zz() (src.pyliqtr.pest_interface.pest_python.dpw_jw_alternating_spin method)": [[24, "src.pyLIQTR.pest_interface.pest_python.dpw_jw_alternating_spin.zz", false]], "zz_arr() (src.pyliqtr.pest_interface.pest_python.hamiltoniancoefficients method)": [[24, "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients.zz_arr", false]]}, "objects": {"": [[1, 0, 0, "-", "pyLIQTR"], [9, 0, 0, "-", "src"]], "src": [[10, 0, 0, "-", "pyLIQTR"]], "src.pyLIQTR": [[11, 0, 0, "-", "BlockEncodings"], [12, 0, 0, "-", "PhaseEstimation"], [14, 0, 0, "-", "ProblemInstances"], [15, 0, 0, "-", "circuits"], [19, 0, 0, "-", "clam"], [22, 0, 0, "-", "gate_decomp"], [24, 0, 0, "-", "pest_interface"], [25, 0, 0, "-", "phase_factors"], [28, 0, 0, "-", "qubitization"], [29, 0, 0, "-", "scheduler"], [30, 0, 0, "-", "tests"], [31, 0, 0, "-", "utils"]], "src.pyLIQTR.BlockEncodings": [[34, 0, 0, "-", "BlockEncoding"], [35, 0, 0, "-", "CarlemanLinearization"], [36, 0, 0, "-", "DoubleFactorized"], [37, 0, 0, "-", "FirstQuantized"], [38, 0, 0, "-", "LinearT"], [39, 0, 0, "-", "PauliStringLCU"], [11, 1, 1, "", "VALID_ENCODINGS"], [40, 0, 0, "-", "fermi_hubbard_square_encoding"], [41, 0, 0, "-", "getEncoding"]], "src.pyLIQTR.BlockEncodings.BlockEncoding": [[11, 1, 1, "", "BlockEncoding"], [11, 1, 1, "", "BlockEncoding_select_prepare"]], "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding": [[11, 2, 1, "", "all_qubits"], [11, 2, 1, "", "alpha"], [11, 2, 1, "", "circuit"], [11, 2, 1, "", "control_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "selection_registers"], [11, 2, 1, "", "signature"], [11, 2, 1, "", "target_registers"]], "src.pyLIQTR.BlockEncodings.BlockEncoding.BlockEncoding_select_prepare": [[11, 2, 1, "", "control_registers"], [11, 3, 1, "", "decompose_from_registers"], [11, 2, 1, "", "junk_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "selection_registers"], [11, 2, 1, "", "signature"], [11, 2, 1, "", "target_registers"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization": [[11, 1, 1, "", "Carleman_Linearization"], [11, 1, 1, "", "LCUCorrections"], [11, 1, 1, "", "LCUPrep"], [11, 1, 1, "", "SwapCorrections"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization.Carleman_Linearization": [[11, 2, 1, "", "F_oracles"], [11, 3, 1, "", "control_registers"], [11, 3, 1, "", "decompose_from_registers"], [11, 3, 1, "", "num_qubits"], [11, 3, 1, "", "selection_registers"], [11, 2, 1, "", "signature"], [11, 3, 1, "", "target_registers"], [11, 2, 1, "", "vector"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUCorrections": [[11, 3, 1, "", "decompose_from_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "signature"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization.LCUPrep": [[11, 3, 1, "", "decompose_from_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "signature"], [11, 2, 1, "", "vector"]], "src.pyLIQTR.BlockEncodings.CarlemanLinearization.SwapCorrections": [[11, 3, 1, "", "decompose_from_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "signature"]], "src.pyLIQTR.BlockEncodings.DoubleFactorized": [[11, 1, 1, "", "DoubleFactorized"], [11, 4, 1, "", "approx_angles_as_ints_with_br_bits"]], "src.pyLIQTR.BlockEncodings.DoubleFactorized.DoubleFactorized": [[11, 2, 1, "", "alpha"], [11, 3, 1, "", "compute_data_l"], [11, 2, 1, "", "control_registers"], [11, 3, 1, "", "decompose_from_registers"], [11, 2, 1, "", "extra_registers"], [11, 3, 1, "", "get_givens_angles"], [11, 2, 1, "", "inner_prep_extra_registers"], [11, 3, 1, "", "num_qubits"], [11, 2, 1, "", "outer_prep_extra_registers"], [11, 2, 1, "", "selection_registers"], [11, 2, 1, "", "signature"], [11, 2, 1, "", "target_registers"]], "src.pyLIQTR.BlockEncodings.FirstQuantized": [[11, 1, 1, "", "FirstQuantized"]], "src.pyLIQTR.BlockEncodings.FirstQuantized.FirstQuantized": [[11, 3, 1, "", "Peq"], [11, 2, 1, "", "alpha"], [11, 3, 1, "", "get_n_M"], [11, 3, 1, "", "get_n_R"], [11, 3, 1, "", "get_n_T"], [11, 2, 1, "", "lam"], [11, 3, 1, "", "lam_Tp"], [11, 3, 1, "", "lam_U"], [11, 3, 1, "", "lam_V"], [11, 3, 1, "", "num_qubits"]], "src.pyLIQTR.BlockEncodings.LinearT": [[11, 1, 1, "", "Fermionic_LinearT"]], "src.pyLIQTR.BlockEncodings.LinearT.Fermionic_LinearT": [[11, 2, 1, "", "alpha"], [11, 2, 1, "", "getT_array"], [11, 2, 1, "", "getU_array"], [11, 2, 1, "", "getV_array"], [11, 3, 1, "", "get_approx_error"], [11, 3, 1, "", "num_qubits"]], "src.pyLIQTR.BlockEncodings.PauliStringLCU": [[11, 1, 1, "", "PauliStringLCU"]], "src.pyLIQTR.BlockEncodings.PauliStringLCU.PauliStringLCU": [[11, 2, 1, "", "alpha"], [11, 2, 1, "", "getTerms"], [11, 3, 1, "", "num_qubits"]], "src.pyLIQTR.BlockEncodings.VALID_ENCODINGS": [[11, 2, 1, "", "CarlemanLinearization"], [11, 2, 1, "", "DoubleFactorized"], [11, 2, 1, "", "FermiHubbardSquare"], [11, 2, 1, "", "Fermionic"], [11, 2, 1, "", "FirstQuantized"], [11, 2, 1, "", "LinearT"], [11, 2, 1, "", "PauliLCU"]], "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding": [[11, 1, 1, "", "fermi_hubbard_square_encoding"]], "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding.fermi_hubbard_square_encoding": [[11, 2, 1, "", "alpha"], [11, 3, 1, "", "num_qubits"]], "src.pyLIQTR.BlockEncodings.getEncoding": [[11, 4, 1, "", "getEncoding"]], "src.pyLIQTR.PhaseEstimation": [[42, 0, 0, "-", "pe"], [43, 0, 0, "-", "pe_gates"], [44, 0, 0, "-", "pe_sim"], [13, 0, 0, "-", "tests"]], "src.pyLIQTR.PhaseEstimation.pe": [[12, 1, 1, "", "PhaseEstimation"]], "src.pyLIQTR.PhaseEstimation.pe.PhaseEstimation": [[12, 3, 1, "", "add_trotterized_unitary"], [12, 2, 1, "id0", "bit_list"], [12, 3, 1, "", "estimate_phase"], [12, 3, 1, "", "generate"], [12, 3, 1, "", "generate_circuit"], [12, 3, 1, "", "generate_qubits"], [12, 3, 1, "", "generate_test_unitary"], [12, 2, 1, "", "init_state"], [12, 2, 1, "", "n_qubits"], [12, 2, 1, "id1", "operator_power"], [12, 2, 1, "", "pe_circuit"], [12, 2, 1, "", "phase_estimate"], [12, 2, 1, "", "phase_offset"], [12, 2, 1, "", "precision_order"], [12, 2, 1, "id2", "precision_qubit"], [12, 2, 1, "", "register_qubits"], [12, 2, 1, "", "regsiter_qubits"], [12, 2, 1, "", "unitary_kw_args"]], "src.pyLIQTR.PhaseEstimation.pe_gates": [[12, 1, 1, "", "PhaseOffset"], [12, 1, 1, "", "S_k"], [12, 1, 1, "", "Trotter_Unitary"]], "src.pyLIQTR.PhaseEstimation.pe_gates.PhaseOffset": [[12, 3, 1, "", "num_qubits"]], "src.pyLIQTR.PhaseEstimation.pe_gates.S_k": [[12, 3, 1, "", "num_qubits"]], "src.pyLIQTR.PhaseEstimation.pe_gates.Trotter_Unitary": [[12, 3, 1, "", "num_qubits"]], "src.pyLIQTR.PhaseEstimation.pe_sim": [[12, 1, 1, "", "PE_Simulator"]], "src.pyLIQTR.PhaseEstimation.pe_sim.PE_Simulator": [[12, 2, 1, "", "df_"], [12, 3, 1, "", "extrac_info_from_sim"], [12, 3, 1, "", "extract_info_from_sim"], [12, 2, 1, "", "med_phase"], [12, 2, 1, "", "num_runs"], [12, 2, 1, "", "pe_inst"], [12, 3, 1, "id5", "sim_phase_estimation"], [12, 2, 1, "", "sim_run"], [12, 3, 1, "id6", "sim_run_analysis"]], "src.pyLIQTR.PhaseEstimation.tests": [[13, 0, 0, "-", "test_pe_gates"]], "src.pyLIQTR.PhaseEstimation.tests.test_pe_gates": [[13, 1, 1, "", "TestPEGates"]], "src.pyLIQTR.PhaseEstimation.tests.test_pe_gates.TestPEGates": [[13, 3, 1, "", "test_Trotter_Unitary_instantiates"]], "src.pyLIQTR.ProblemInstances": [[45, 0, 0, "-", "ChemicalHamiltonian"], [46, 0, 0, "-", "ElectronicStructure"], [47, 0, 0, "-", "LatticeInstance"], [48, 0, 0, "-", "MatrixInstance"], [14, 0, 0, "-", "MoleculeParameters"], [49, 0, 0, "-", "NonlinearODE"], [50, 0, 0, "-", "ProblemInstance"], [51, 0, 0, "-", "fermionic_models"], [52, 0, 0, "-", "getInstance"], [53, 0, 0, "-", "spin_models"]], "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian": [[14, 1, 1, "", "ChemicalHamiltonian"]], "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian.ChemicalHamiltonian": [[14, 3, 1, "", "DF_fragments"], [14, 3, 1, "", "get_alpha"], [14, 2, 1, "", "hamiltonian_tensors"], [14, 2, 1, "", "lam"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "optimize"], [14, 2, 1, "", "terms_jw"], [14, 3, 1, "", "yield_DF_Info"], [14, 3, 1, "", "yield_PauliLCU_Info"]], "src.pyLIQTR.ProblemInstances.ElectronicStructure": [[14, 1, 1, "", "ElectronicStructure"]], "src.pyLIQTR.ProblemInstances.ElectronicStructure.ElectronicStructure": [[14, 3, 1, "", "get_alpha"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "yield_FirstQuantized_Info"], [14, 3, 1, "", "yield_LinearT_Info"], [14, 3, 1, "", "yield_PauliLCU_Info"]], "src.pyLIQTR.ProblemInstances.LatticeInstance": [[14, 1, 1, "", "LatticeInstance"]], "src.pyLIQTR.ProblemInstances.LatticeInstance.LatticeInstance": [[14, 3, 1, "", "draw_lattice"], [14, 3, 1, "", "get_alpha"], [14, 3, 1, "", "matrix"], [14, 3, 1, "", "n_lcu_terms"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "print_unit_cell"], [14, 3, 1, "", "yield_PauliLCU_Info"]], "src.pyLIQTR.ProblemInstances.MatrixInstance": [[14, 1, 1, "", "MatrixInstance"]], "src.pyLIQTR.ProblemInstances.MatrixInstance.MatrixInstance": [[14, 3, 1, "", "get_norm"], [14, 2, 1, "", "matrix"], [14, 3, 1, "", "n_qubits"], [14, 2, 1, "", "norm"], [14, 3, 1, "", "normalize"], [14, 2, 1, "", "sparse_arrays"], [14, 2, 1, "", "sparse_matrix"], [14, 2, 1, "", "sparse_tuples"], [14, 3, 1, "", "yield_fable_info"]], "src.pyLIQTR.ProblemInstances.MoleculeParameters": [[14, 1, 1, "", "MoleculeParameters"]], "src.pyLIQTR.ProblemInstances.MoleculeParameters.MoleculeParameters": [[14, 3, 1, "", "get_alpha"], [14, 3, 1, "", "get_num_plane_waves"], [14, 3, 1, "", "get_params_from_geometry_file"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "yield_FirstQuantized_Info"]], "src.pyLIQTR.ProblemInstances.NonlinearODE": [[14, 1, 1, "", "FOperators"]], "src.pyLIQTR.ProblemInstances.NonlinearODE.FOperators": [[14, 3, 1, "", "F0_oracle"], [14, 3, 1, "", "F1_oracle"], [14, 3, 1, "", "F2_oracle"], [14, 3, 1, "", "n_qubits"], [14, 2, 1, "", "vector"]], "src.pyLIQTR.ProblemInstances.ProblemInstance": [[14, 1, 1, "", "ProblemInstance"]], "src.pyLIQTR.ProblemInstances.ProblemInstance.ProblemInstance": [[14, 2, 1, "", "alpha"], [14, 3, 1, "", "matrix"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "n_terms"], [14, 3, 1, "", "normalize_pauli_lcu"], [14, 3, 1, "", "pauli_terms"], [14, 3, 1, "", "yield_Fermionic_Info"], [14, 3, 1, "", "yield_Operator_Info"], [14, 3, 1, "", "yield_Operator_Matrix"], [14, 3, 1, "", "yield_PauliLCU_Info"]], "src.pyLIQTR.ProblemInstances.fermionic_models": [[14, 1, 1, "", "FermiHubbard"], [14, 1, 1, "", "FermiHubbardNNN"]], "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbard": [[14, 3, 1, "", "n_qubits"]], "src.pyLIQTR.ProblemInstances.fermionic_models.FermiHubbardNNN": [[14, 3, 1, "", "get_alpha"], [14, 3, 1, "", "n_qubits"], [14, 3, 1, "", "yield_LinearT_Info"], [14, 3, 1, "", "yield_PauliLCU_Info"]], "src.pyLIQTR.ProblemInstances.getInstance": [[14, 4, 1, "", "getInstance"]], "src.pyLIQTR.ProblemInstances.spin_models": [[14, 1, 1, "", "Heisenberg"], [14, 1, 1, "", "Transverse_Field_Ising"]], "src.pyLIQTR.circuits": [[16, 0, 0, "-", "operators"], [15, 0, 0, "-", "pyLCircuit"], [15, 0, 0, "-", "pyLOperator"], [15, 0, 0, "-", "qsp"], [18, 0, 0, "-", "tests"]], "src.pyLIQTR.circuits.operators": [[54, 0, 0, "-", "AddMod"], [55, 0, 0, "-", "BinaryToUnary"], [56, 0, 0, "-", "BitwiseZRotation"], [16, 0, 0, "-", "CatalyticallyControlledHadamard"], [57, 0, 0, "-", "ControlledUniformSuperposition"], [58, 0, 0, "-", "DF_InnerPrepare"], [59, 0, 0, "-", "DF_OuterPrepare"], [60, 0, 0, "-", "DF_RotationsBlock"], [16, 0, 0, "-", "EqualityTest"], [61, 0, 0, "-", "ExampleFMatrices"], [62, 0, 0, "-", "FixupTableQROM"], [16, 0, 0, "-", "FlagZeroAsFailure"], [63, 0, 0, "-", "FlaggedPrepareUniformSuperposition"], [64, 0, 0, "-", "PhaseGradientRotation"], [16, 0, 0, "-", "PrepareMuUnaryEncoded"], [16, 0, 0, "-", "PrepareNu"], [16, 0, 0, "-", "PrepareNuSuperposition"], [16, 0, 0, "-", "PreparePowerTwoState"], [16, 0, 0, "-", "PrepareT_FirstQuantized"], [16, 0, 0, "-", "PrepareUV_FirstQuantized"], [65, 0, 0, "-", "ProductPauliExponentials"], [66, 0, 0, "-", "QROMwithMeasurementUncompute"], [67, 0, 0, "-", "RotationsQROM"], [16, 0, 0, "-", "UniformSuperpositionIJ"], [68, 0, 0, "-", "cascading_translation"], [69, 0, 0, "-", "cyclic_shift"], [70, 0, 0, "-", "diagonal_bitstring"], [71, 0, 0, "-", "hamiltonian_encodings"], [72, 0, 0, "-", "multiCZ"], [73, 0, 0, "-", "prepare"], [16, 0, 0, "-", "prepare_FirstQuantized"], [74, 0, 0, "-", "prepare_LinearT"], [75, 0, 0, "-", "prepare_oracle_pauli_lcu"], [76, 0, 0, "-", "reflect"], [77, 0, 0, "-", "selectV"], [78, 0, 0, "-", "selectVutils"], [79, 0, 0, "-", "select_LinearT"], [80, 0, 0, "-", "select_oracle_pauli_lcu"], [81, 0, 0, "-", "select_prepare_pauli"], [82, 0, 0, "-", "swap_network"], [17, 0, 0, "-", "tests"], [83, 0, 0, "-", "translation"]], "src.pyLIQTR.circuits.operators.AddMod": [[16, 1, 1, "", "Add"], [16, 1, 1, "", "AddMod"], [16, 4, 1, "", "debugPrint"], [16, 4, 1, "", "two_complement"]], "src.pyLIQTR.circuits.operators.AddMod.Add": [[16, 2, 1, "", "a_dtype"], [16, 2, 1, "", "b_dtype"], [16, 3, 1, "", "decompose_from_registers"]], "src.pyLIQTR.circuits.operators.AddMod.AddMod": [[16, 2, 1, "", "add_val"], [16, 2, 1, "", "bitsize"], [16, 2, 1, "", "cvs"], [16, 2, 1, "", "mod"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.BinaryToUnary": [[16, 1, 1, "", "BinaryToUnary"], [16, 1, 1, "", "BinaryToUnaryBits"]], "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnary": [[16, 2, 1, "", "control_registers"], [16, 2, 1, "", "controlled"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "extra_registers"], [16, 3, 1, "", "make_on"], [16, 3, 1, "", "nth_operation"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "selection_regs"], [16, 2, 1, "", "target_registers"]], "src.pyLIQTR.circuits.operators.BinaryToUnary.BinaryToUnaryBits": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "make_on"], [16, 2, 1, "", "n_bits"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.BitwiseZRotation": [[16, 1, 1, "", "BitwiseZRotation"]], "src.pyLIQTR.circuits.operators.BitwiseZRotation.BitwiseZRotation": [[16, 2, 1, "", "br"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "theta_sign"]], "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard": [[16, 1, 1, "", "CatalyticallyControlledHadamard"]], "src.pyLIQTR.circuits.operators.CatalyticallyControlledHadamard.CatalyticallyControlledHadamard": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition": [[16, 1, 1, "", "ControlledPrepareUniformSuperposition"]], "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition.ControlledPrepareUniformSuperposition": [[16, 2, 1, "", "bphi"], [16, 2, 1, "", "br"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "n_Xi"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.DF_InnerPrepare": [[16, 1, 1, "", "InnerPrepare"]], "src.pyLIQTR.circuits.operators.DF_InnerPrepare.InnerPrepare": [[16, 2, 1, "", "alt_data"], [16, 2, 1, "", "alt_signs_data"], [16, 2, 1, "", "bphi"], [16, 2, 1, "", "br"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "extra_registers"], [16, 3, 1, "", "from_Tf_arrays"], [16, 2, 1, "", "keep_bitsize"], [16, 2, 1, "", "keep_data"], [16, 2, 1, "", "n_LXi"], [16, 2, 1, "", "n_Xi"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "signs_data"]], "src.pyLIQTR.circuits.operators.DF_OuterPrepare": [[16, 1, 1, "", "OuterPrepare"]], "src.pyLIQTR.circuits.operators.DF_OuterPrepare.OuterPrepare": [[16, 2, 1, "", "alt"], [16, 2, 1, "", "alternates_bitsize"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "junk_registers"], [16, 2, 1, "", "keep"], [16, 2, 1, "", "keep_bitsize"], [16, 2, 1, "", "l1_norm_of_coeffs"], [16, 2, 1, "", "mu"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "qrom_bloq"], [16, 2, 1, "", "selection_bitsize"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "sigma_mu_bitsize"], [16, 2, 1, "", "sum_of_lcu_coeffs"]], "src.pyLIQTR.circuits.operators.DF_RotationsBlock": [[16, 1, 1, "", "RotationsBlock"]], "src.pyLIQTR.circuits.operators.DF_RotationsBlock.RotationsBlock": [[16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "num_data_bits"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "num_target_bits"], [16, 2, 1, "", "phase_gradient_bits"], [16, 2, 1, "", "precision_bits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "uncompute"]], "src.pyLIQTR.circuits.operators.EqualityTest": [[16, 1, 1, "", "EqualityTest"]], "src.pyLIQTR.circuits.operators.EqualityTest.EqualityTest": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.ExampleFMatrices": [[16, 1, 1, "", "F0_operator"], [16, 1, 1, "", "F1_operator"], [16, 1, 1, "", "F2_operator"]], "src.pyLIQTR.circuits.operators.ExampleFMatrices.F0_operator": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.ExampleFMatrices.F1_operator": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.ExampleFMatrices.F2_operator": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.FixupTableQROM": [[16, 1, 1, "", "DataAndKeyCondition"], [16, 1, 1, "", "FixupTableQROM"]], "src.pyLIQTR.circuits.operators.FixupTableQROM.DataAndKeyCondition": [[16, 3, 1, "", "get_condition_format_string"], [16, 2, 1, "", "keys"], [16, 2, 1, "", "qasm"], [16, 3, 1, "", "replace_key"], [16, 3, 1, "", "resolve"]], "src.pyLIQTR.circuits.operators.FixupTableQROM.FixupTableQROM": [[16, 2, 1, "", "control_registers"], [16, 3, 1, "", "nth_operation"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "target_registers"]], "src.pyLIQTR.circuits.operators.FlagZeroAsFailure": [[16, 1, 1, "", "FlagZeroAsFailure"]], "src.pyLIQTR.circuits.operators.FlagZeroAsFailure.FlagZeroAsFailure": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition": [[16, 1, 1, "", "FlaggedPrepareUniformSuperposition"]], "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition.FlaggedPrepareUniformSuperposition": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PhaseGradientRotation": [[16, 1, 1, "", "PhaseGradientZRotation"], [16, 4, 1, "", "approx_angle_with_br_bits"]], "src.pyLIQTR.circuits.operators.PhaseGradientRotation.PhaseGradientZRotation": [[16, 2, 1, "", "bphi"], [16, 2, 1, "", "br"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "do_negative_z_rotation"], [16, 3, 1, "", "make_on"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded": [[16, 1, 1, "", "PrepareMuUnaryEncoded"]], "src.pyLIQTR.circuits.operators.PrepareMuUnaryEncoded.PrepareMuUnaryEncoded": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareNu": [[16, 1, 1, "", "PrepareNuState"], [16, 1, 1, "", "TestNuInequality"]], "src.pyLIQTR.circuits.operators.PrepareNu.PrepareNuState": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "build_composite_bloq"], [16, 2, 1, "", "m_param"], [16, 2, 1, "", "num_bits_p"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareNu.TestNuInequality": [[16, 3, 1, "", "adjoint"], [16, 3, 1, "", "build_call_graph"], [16, 2, 1, "", "is_adjoint"], [16, 2, 1, "", "num_bits_m"], [16, 2, 1, "", "num_bits_p"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareNuSuperposition": [[16, 1, 1, "", "PrepareNuSuperposition"]], "src.pyLIQTR.circuits.operators.PrepareNuSuperposition.PrepareNuSuperposition": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PreparePowerTwoState": [[16, 1, 1, "", "PreparePowerTwoState"]], "src.pyLIQTR.circuits.operators.PreparePowerTwoState.PreparePowerTwoState": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized": [[16, 1, 1, "", "PrepareT_FirstQuantized"]], "src.pyLIQTR.circuits.operators.PrepareT_FirstQuantized.PrepareT_FirstQuantized": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized": [[16, 1, 1, "", "PrepareUVFirstQuantization"]], "src.pyLIQTR.circuits.operators.PrepareUV_FirstQuantized.PrepareUVFirstQuantization": [[16, 3, 1, "", "build_call_graph"], [16, 2, 1, "", "eta"], [16, 2, 1, "", "lambda_zeta"], [16, 2, 1, "", "m_param"], [16, 2, 1, "", "num_atoms"], [16, 2, 1, "", "num_bits_nuc_pos"], [16, 2, 1, "", "num_bits_p"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.ProductPauliExponentials": [[16, 1, 1, "", "ProductPauliExponentials"]], "src.pyLIQTR.circuits.operators.ProductPauliExponentials.ProductPauliExponentials": [[16, 2, 1, "", "bphi"], [16, 2, 1, "", "br"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "uncompute"]], "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute": [[16, 1, 1, "", "QROMwithMeasurementUncompute"]], "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute.QROMwithMeasurementUncompute": [[16, 3, 1, "", "measurement_uncompute"], [16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.RotationsQROM": [[16, 1, 1, "", "RotationsQROM"]], "src.pyLIQTR.circuits.operators.RotationsQROM.RotationsQROM": [[16, 3, 1, "", "nth_operation_callgraph"], [16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ": [[16, 1, 1, "", "UniformSuperpositionIJFirstQuantization"]], "src.pyLIQTR.circuits.operators.UniformSuperpositionIJ.UniformSuperpositionIJFirstQuantization": [[16, 3, 1, "", "build_call_graph"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.cascading_translation": [[16, 1, 1, "", "CascadingTranslation"], [16, 1, 1, "", "CascadingUnary"]], "src.pyLIQTR.circuits.operators.cascading_translation.CascadingTranslation": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.cascading_translation.CascadingUnary": [[16, 2, 1, "", "control_registers"], [16, 3, 1, "", "nth_operation"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "target_registers"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.cyclic_shift": [[16, 1, 1, "", "CyclicShiftPermutation"]], "src.pyLIQTR.circuits.operators.cyclic_shift.CyclicShiftPermutation": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.diagonal_bitstring": [[16, 1, 1, "", "DiagonalBitstring"]], "src.pyLIQTR.circuits.operators.diagonal_bitstring.DiagonalBitstring": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.hamiltonian_encodings": [[16, 1, 1, "", "SzegedyWalkOperator"], [16, 1, 1, "", "UnitaryBlockEncode"]], "src.pyLIQTR.circuits.operators.hamiltonian_encodings.UnitaryBlockEncode": [[16, 3, 1, "", "count_exact"], [16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.multiCZ": [[16, 1, 1, "", "MultiCZ"]], "src.pyLIQTR.circuits.operators.multiCZ.MultiCZ": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.prepare": [[16, 1, 1, "", "Prepare"]], "src.pyLIQTR.circuits.operators.prepare.Prepare": [[16, 3, 1, "", "alpha_prep"], [16, 2, 1, "", "alphas"], [16, 3, 1, "", "ctrlOp"], [16, 3, 1, "", "disentangle_recursion"], [16, 3, 1, "", "disentangle_recursive"], [16, 3, 1, "", "expOp"], [16, 3, 1, "", "multiplex_aux"], [16, 3, 1, "", "multiplexor"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "pp_com"], [16, 2, 1, "", "pp_ctl"], [16, 2, 1, "", "pp_exp"], [16, 3, 1, "", "prepare_angles"], [16, 2, 1, "", "reg_qubits"], [16, 3, 1, "", "split_angles"]], "src.pyLIQTR.circuits.operators.prepare_FirstQuantized": [[16, 1, 1, "", "PrepareFirstQuantization"]], "src.pyLIQTR.circuits.operators.prepare_FirstQuantized.PrepareFirstQuantization": [[16, 3, 1, "", "build_composite_bloq"], [16, 2, 1, "", "eta"], [16, 2, 1, "", "junk_registers"], [16, 2, 1, "", "lambda_zeta"], [16, 2, 1, "", "m_param"], [16, 2, 1, "", "num_atoms"], [16, 2, 1, "", "num_bits_nuc_pos"], [16, 2, 1, "", "num_bits_p"], [16, 2, 1, "", "num_bits_rot_aa"], [16, 2, 1, "", "num_bits_t"], [16, 3, 1, "", "num_qubits"], [16, 3, 1, "", "pretty_name"], [16, 2, 1, "", "selection_registers"]], "src.pyLIQTR.circuits.operators.prepare_LinearT": [[16, 1, 1, "", "FermionicPrepare_LinearT"], [16, 1, 1, "", "Subprepare_LinearT"]], "src.pyLIQTR.circuits.operators.prepare_LinearT.FermionicPrepare_LinearT": [[16, 2, 1, "", "alternates_bitsize"], [16, 3, 1, "", "decompose_from_registers"], [16, 2, 1, "", "junk_registers"], [16, 2, 1, "", "keep_bitsize"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.prepare_LinearT.Subprepare_LinearT": [[16, 2, 1, "", "D"], [16, 2, 1, "", "M_vals"], [16, 2, 1, "", "alt"], [16, 2, 1, "", "alternates_bitsize"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "from_TUV_arrays"], [16, 2, 1, "", "junk_registers"], [16, 2, 1, "", "keep"], [16, 2, 1, "", "keep_bitsize"], [16, 2, 1, "", "logM_vals"], [16, 2, 1, "", "mu"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_bitsize"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "theta"], [16, 2, 1, "", "theta_alt"]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu": [[16, 1, 1, "", "FermionPrePrepare"], [16, 1, 1, "", "FermionPrepare"], [16, 4, 1, "", "PrepareOracle"], [16, 1, 1, "", "QSP_Prepare"], [16, 4, 1, "", "gen_pre_prepare"], [16, 4, 1, "", "multi_ccx"]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrePrepare": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.FermionPrepare": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu.QSP_Prepare": [[16, 3, 1, "", "alpha_prep"], [16, 2, 1, "", "alphas"], [16, 3, 1, "", "ctrlOp"], [16, 3, 1, "", "disentangle_recursion"], [16, 3, 1, "", "disentangle_recursive"], [16, 3, 1, "", "expOp"], [16, 3, 1, "", "multiplex_aux"], [16, 3, 1, "", "multiplexor"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "pp_com"], [16, 2, 1, "", "pp_ctl"], [16, 2, 1, "", "pp_exp"], [16, 3, 1, "", "prepare_angles"], [16, 2, 1, "", "reg_qubits"], [16, 3, 1, "", "split_angles"]], "src.pyLIQTR.circuits.operators.reflect": [[16, 1, 1, "", "Reflect"]], "src.pyLIQTR.circuits.operators.reflect.Reflect": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.selectV": [[16, 1, 1, "", "ChildsSelectV"], [16, 1, 1, "", "QROMSelectV"]], "src.pyLIQTR.circuits.operators.selectV.ChildsSelectV": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.selectV.QROMSelectV": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.selectVutils": [[16, 4, 1, "", "applyAndStep"], [16, 4, 1, "", "applyAndWalk"], [16, 4, 1, "", "constructBooleanTree"], [16, 4, 1, "", "convert_hamiltonian_terms_to_operators"], [16, 4, 1, "", "incrementBooleanTree"], [16, 4, 1, "", "stepRight"], [16, 4, 1, "", "toffoli"], [16, 4, 1, "", "walkDown"]], "src.pyLIQTR.circuits.operators.select_LinearT": [[16, 1, 1, "", "FermionicSelect_LinearT"]], "src.pyLIQTR.circuits.operators.select_LinearT.FermionicSelect_LinearT": [[16, 2, 1, "", "control_registers"], [16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "target_registers"]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu": [[16, 1, 1, "", "FermionSelect"], [16, 1, 1, "", "SelVBase"], [16, 4, 1, "", "SelectOracle"], [16, 1, 1, "", "UnaryIterate"], [16, 4, 1, "", "applyAndStep"], [16, 4, 1, "", "applyAndWalk"], [16, 4, 1, "", "constructBooleanTree"], [16, 4, 1, "", "convert_hamiltonian_terms_to_operators"], [16, 4, 1, "", "incrementBooleanTree"], [16, 4, 1, "", "stepRight"], [16, 4, 1, "", "toffoli"], [16, 4, 1, "", "walkDown"]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.FermionSelect": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.SelVBase": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu.UnaryIterate": [[16, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.operators.select_prepare_pauli": [[16, 1, 1, "", "prepare_pauli_lcu"]], "src.pyLIQTR.circuits.operators.select_prepare_pauli.prepare_pauli_lcu": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"]], "src.pyLIQTR.circuits.operators.swap_network": [[16, 1, 1, "", "SwapNetwork"], [16, 1, 1, "", "SwapUnary"]], "src.pyLIQTR.circuits.operators.swap_network.SwapNetwork": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.swap_network.SwapUnary": [[16, 2, 1, "", "control_registers"], [16, 3, 1, "", "nth_operation"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "selection_registers"], [16, 2, 1, "", "target_registers"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.operators.tests": [[17, 0, 0, "-", "test_BinaryToUnary"], [17, 0, 0, "-", "test_CatalyticallyControlledHadamard"], [17, 0, 0, "-", "test_DataAndKeyCondition"], [17, 0, 0, "-", "test_EqualityTest"], [17, 0, 0, "-", "test_FlagZeroAsFailure"], [17, 0, 0, "-", "test_PhaseGradientRotation"], [17, 0, 0, "-", "test_PrepareMuUnaryEncoded"], [17, 0, 0, "-", "test_PrepareNuSuperposition"], [17, 0, 0, "-", "test_PreparePowerTwoState"], [17, 0, 0, "-", "test_PrepareT_FirstQuantized"], [17, 0, 0, "-", "test_ProductPauliExponentials"], [17, 0, 0, "-", "test_QROMwithMeasurementUncompute"], [17, 0, 0, "-", "test_RotationsQROM"], [17, 0, 0, "-", "test_UniformSuperpositionIJ"], [17, 0, 0, "-", "test_cyclic_shift"], [17, 0, 0, "-", "test_diagonal_bitstring"], [17, 0, 0, "-", "test_hamiltonian_encodings"], [17, 0, 0, "-", "test_multiCZ"], [17, 0, 0, "-", "test_prepare"], [17, 0, 0, "-", "test_qtAdd"], [17, 0, 0, "-", "test_reflect"], [17, 0, 0, "-", "test_selectV"], [17, 0, 0, "-", "test_translation"], [17, 0, 0, "-", "utils"]], "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary": [[17, 1, 1, "", "TestBinaryToUnaryBits"]], "src.pyLIQTR.circuits.operators.tests.test_BinaryToUnary.TestBinaryToUnaryBits": [[17, 3, 1, "", "test_BinaryToUnaryBits"], [17, 3, 1, "", "test_BinaryToUnaryBits_complexity"], [17, 3, 1, "", "test_BinaryToUnaryBits_decomposes"], [17, 3, 1, "", "test_BinaryToUnaryBits_inverse"], [17, 3, 1, "", "test_BinaryToUnaryBits_qasm"]], "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard": [[17, 1, 1, "", "TestCatalyticallyControlledHadamard"]], "src.pyLIQTR.circuits.operators.tests.test_CatalyticallyControlledHadamard.TestCatalyticallyControlledHadamard": [[17, 3, 1, "", "test_CatalyticallyControlledHadamard"], [17, 3, 1, "", "test_CatalyticallyControlledHadamard_decomposes"], [17, 3, 1, "", "test_CatalyticallyControlledHadamard_inverse"], [17, 3, 1, "", "test_CatalyticallyControlledHadamard_qasm"], [17, 3, 1, "", "test_CatalyticallyControlledHadamard_resources"]], "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition": [[17, 1, 1, "", "TestDataAndKeyCondition"]], "src.pyLIQTR.circuits.operators.tests.test_DataAndKeyCondition.TestDataAndKeyCondition": [[17, 3, 1, "", "test_DataAndKeyCondition_resolve_array"], [17, 3, 1, "", "test_DataAndKeyCondition_resolve_int"]], "src.pyLIQTR.circuits.operators.tests.test_EqualityTest": [[17, 1, 1, "", "TestEqualityTest"]], "src.pyLIQTR.circuits.operators.tests.test_EqualityTest.TestEqualityTest": [[17, 3, 1, "", "test_EqualityTest"], [17, 3, 1, "", "test_EqualityTest_ValueError"], [17, 3, 1, "", "test_EqualityTest_decomposes"], [17, 3, 1, "", "test_EqualityTest_inverse"], [17, 3, 1, "", "test_EqualityTest_qasm"], [17, 3, 1, "", "test_EqualityTest_resources"]], "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure": [[17, 1, 1, "", "TestFlagZeroAsFailure"]], "src.pyLIQTR.circuits.operators.tests.test_FlagZeroAsFailure.TestFlagZeroAsFailure": [[17, 3, 1, "", "test_FlagZeroAsFailure"], [17, 3, 1, "", "test_FlagZeroAsFailure_decomposes"], [17, 3, 1, "", "test_FlagZeroAsFailure_inverse"], [17, 3, 1, "", "test_FlagZeroAsFailure_qasm"], [17, 3, 1, "", "test_FlagZeroAsFailure_resources"]], "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation": [[17, 1, 1, "", "TestPhaseGradientZRotation"]], "src.pyLIQTR.circuits.operators.tests.test_PhaseGradientRotation.TestPhaseGradientZRotation": [[17, 3, 1, "", "test_PhaseGradientZRotation"], [17, 3, 1, "", "test_PhaseGradientZRotation_decomposes"], [17, 3, 1, "", "test_PhaseGradientZRotation_inverse"], [17, 3, 1, "", "test_PhaseGradientZRotation_qasm"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded": [[17, 1, 1, "", "TestPrepareMuUnaryEncoded"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareMuUnaryEncoded.TestPrepareMuUnaryEncoded": [[17, 3, 1, "", "test_PrepareMuUnaryEncoded"], [17, 3, 1, "", "test_PrepareMuUnaryEncoded_decomposes"], [17, 3, 1, "", "test_PrepareMuUnaryEncoded_inverse"], [17, 3, 1, "", "test_PrepareMuUnaryEncoded_qasm"], [17, 3, 1, "", "test_PrepareMuUnaryEncoded_resources"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition": [[17, 1, 1, "", "TestPrepareNuSuperposition"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareNuSuperposition.TestPrepareNuSuperposition": [[17, 3, 1, "", "test_PrepareNuSuperposition"], [17, 3, 1, "", "test_PrepareNuSuperposition_decomposes"], [17, 3, 1, "", "test_PrepareNuSuperposition_inverse"], [17, 3, 1, "", "test_PrepareNuSuperposition_qasm"], [17, 3, 1, "", "test_PrepareNuSuperposition_resources"]], "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState": [[17, 1, 1, "", "TestPreparePowerTwoState"]], "src.pyLIQTR.circuits.operators.tests.test_PreparePowerTwoState.TestPreparePowerTwoState": [[17, 3, 1, "", "test_PreparePowerTwoState"], [17, 3, 1, "", "test_PreparePowerTwoState_decomposes"], [17, 3, 1, "", "test_PreparePowerTwoState_inverse"], [17, 3, 1, "", "test_PreparePowerTwoState_qasm"], [17, 3, 1, "", "test_PreparePowerTwoState_resources"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized": [[17, 1, 1, "", "TestPrepareT_FirstQuantized"]], "src.pyLIQTR.circuits.operators.tests.test_PrepareT_FirstQuantized.TestPrepareT_FirstQuantized": [[17, 3, 1, "", "test_PrepareT_FirstQuantized_decomposes"], [17, 3, 1, "", "test_PrepareT_FirstQuantized_inverse"], [17, 3, 1, "", "test_PrepareT_FirstQuantized_qasm"], [17, 3, 1, "", "test_PrepareT_FirstQuantized_resources"]], "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials": [[17, 1, 1, "", "TestProductPauliExponentials"]], "src.pyLIQTR.circuits.operators.tests.test_ProductPauliExponentials.TestProductPauliExponentials": [[17, 2, 1, "", "pytestmark"], [17, 3, 1, "", "test_PauliProductExponentials_decomposes"], [17, 3, 1, "", "test_ProductPauliExponentials_qasm"], [17, 3, 1, "", "test_ProductPauliExponentials_uncompute"], [17, 3, 1, "", "test_ProductPauliExponetials"]], "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute": [[17, 1, 1, "", "TestQROMwithMeasurementUncompute"]], "src.pyLIQTR.circuits.operators.tests.test_QROMwithMeasurementUncompute.TestQROMwithMeasurementUncompute": [[17, 3, 1, "", "test_QROMwithMeasurementUncompute"], [17, 3, 1, "", "test_QROMwithMeasurementUncompute_decomposes"]], "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM": [[17, 1, 1, "", "TestRotationsQROM"]], "src.pyLIQTR.circuits.operators.tests.test_RotationsQROM.TestRotationsQROM": [[17, 3, 1, "", "test_RotationsQROM"], [17, 3, 1, "", "test_RotationsQROM_decomposes"], [17, 3, 1, "", "test_RotationsQROM_inverse"], [17, 3, 1, "", "test_RotationsQROM_measurement_uncompute"], [17, 3, 1, "", "test_RotationsQROM_qasm"], [17, 3, 1, "", "test_RotationsQROM_resources"]], "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ": [[17, 1, 1, "", "TestUniformSuperpositionIJ"]], "src.pyLIQTR.circuits.operators.tests.test_UniformSuperpositionIJ.TestUniformSuperpositionIJ": [[17, 3, 1, "", "test_UniformSuperpositionIJ_decomposes"], [17, 3, 1, "", "test_UniformSuperpositionIJ_inverse"], [17, 3, 1, "", "test_UniformSuperpositionIJ_qasm"], [17, 3, 1, "", "test_UniformSuperpositionIJ_resources"]], "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift": [[17, 1, 1, "", "TestTranslation"]], "src.pyLIQTR.circuits.operators.tests.test_cyclic_shift.TestTranslation": [[17, 3, 1, "", "getUnitary"], [17, 3, 1, "", "getVector"], [17, 3, 1, "", "testUnitaryCS"]], "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring": [[17, 1, 1, "", "TestDiagonalBitstring"]], "src.pyLIQTR.circuits.operators.tests.test_diagonal_bitstring.TestDiagonalBitstring": [[17, 3, 1, "", "getUnitary"], [17, 3, 1, "", "getVector"], [17, 3, 1, "", "testTCount"], [17, 3, 1, "", "testUnitary0"]], "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings": [[17, 1, 1, "", "TestEncodings"]], "src.pyLIQTR.circuits.operators.tests.test_hamiltonian_encodings.TestEncodings": [[17, 3, 1, "", "getHamiltonianAndQubits"], [17, 3, 1, "", "getHamiltonianAndQubits2"], [17, 3, 1, "", "getOperator"], [17, 3, 1, "", "test_unitary_basic"], [17, 3, 1, "", "test_unitary_decomp"]], "src.pyLIQTR.circuits.operators.tests.test_multiCZ": [[17, 1, 1, "", "TestMultiCZ"]], "src.pyLIQTR.circuits.operators.tests.test_multiCZ.TestMultiCZ": [[17, 3, 1, "", "getQubits"], [17, 3, 1, "", "getQubits2"], [17, 3, 1, "", "test_multi_cz_basic"], [17, 3, 1, "", "test_multi_cz_count"], [17, 3, 1, "", "test_multi_cz_equality"], [17, 3, 1, "", "test_multi_cz_toQasm"]], "src.pyLIQTR.circuits.operators.tests.test_prepare": [[17, 1, 1, "", "TestPrepare"], [17, 4, 1, "", "get_common_gate_ops"]], "src.pyLIQTR.circuits.operators.tests.test_prepare.TestPrepare": [[17, 3, 1, "", "test_prepare_comparison_to_common_ops"]], "src.pyLIQTR.circuits.operators.tests.test_qtAdd": [[17, 1, 1, "", "TestqtAdd"]], "src.pyLIQTR.circuits.operators.tests.test_qtAdd.TestqtAdd": [[17, 3, 1, "", "test_qtAdd_decomposes"], [17, 3, 1, "", "test_qtAdd_qasm"], [17, 3, 1, "", "test_qtAdd_with_phase_gradient"], [17, 3, 1, "", "test_qtAdd_with_zero_padding"], [17, 3, 1, "", "test_qtAdd_with_zero_padding_inverse"]], "src.pyLIQTR.circuits.operators.tests.test_reflect": [[17, 1, 1, "", "TestReflect"]], "src.pyLIQTR.circuits.operators.tests.test_reflect.TestReflect": [[17, 3, 1, "", "getAngleAndQubits"], [17, 3, 1, "", "getAngleAndQubits2"], [17, 3, 1, "", "test_reflect_basic"], [17, 3, 1, "", "test_reflect_count"], [17, 3, 1, "", "test_reflect_equality"], [17, 3, 1, "", "test_reflect_toQasm"]], "src.pyLIQTR.circuits.operators.tests.test_selectV": [[17, 1, 1, "", "TestSelectV"]], "src.pyLIQTR.circuits.operators.tests.test_selectV.TestSelectV": [[17, 3, 1, "", "getHamiltonianAndQubits"], [17, 3, 1, "", "getHamiltonianAndQubits2"], [17, 3, 1, "", "test_childs_basic"], [17, 3, 1, "", "test_childs_count"], [17, 3, 1, "", "test_childs_decomp"], [17, 3, 1, "", "test_equality"]], "src.pyLIQTR.circuits.operators.tests.test_translation": [[17, 1, 1, "", "TestTranslation"]], "src.pyLIQTR.circuits.operators.tests.test_translation.TestTranslation": [[17, 3, 1, "", "getUnitary"], [17, 3, 1, "", "getVector"], [17, 3, 1, "", "testUnitaryCS"]], "src.pyLIQTR.circuits.operators.tests.utils": [[17, 4, 1, "", "get_partial_state"]], "src.pyLIQTR.circuits.operators.translation": [[16, 1, 1, "", "Translation"]], "src.pyLIQTR.circuits.operators.translation.Translation": [[16, 3, 1, "", "decompose_from_registers"], [16, 3, 1, "", "num_qubits"], [16, 2, 1, "", "signature"], [16, 2, 1, "", "vector"]], "src.pyLIQTR.circuits.pyLCircuit": [[15, 2, 1, "", "RESOURCE_ANALYSIS_MODE"], [15, 4, 1, "", "get_T_counts_from_rotations"], [15, 1, 1, "", "pyLCircuit"]], "src.pyLIQTR.circuits.pyLCircuit.pyLCircuit": [[15, 3, 1, "", "clear_resources"], [15, 2, 1, "", "decomp_level"], [15, 3, 1, "", "decompose"], [15, 3, 1, "", "get_decomp_levels"], [15, 3, 1, "", "load"], [15, 3, 1, "", "resourceAnalyze"], [15, 2, 1, "", "resources"], [15, 3, 1, "", "save"], [15, 3, 1, "", "to_openqasm"], [15, 3, 1, "", "view_decomp_levels"]], "src.pyLIQTR.circuits.pyLOperator": [[15, 1, 1, "", "fakeOperator"], [15, 1, 1, "", "pyLOperator"]], "src.pyLIQTR.circuits.pyLOperator.fakeOperator": [[15, 3, 1, "", "count_exact"], [15, 3, 1, "", "num_qubits"]], "src.pyLIQTR.circuits.pyLOperator.pyLOperator": [[15, 3, 1, "", "count_exact"], [15, 2, 1, "", "total_decomp"]], "src.pyLIQTR.circuits.qsp": [[15, 4, 1, "", "generate_QSP_circuit"], [15, 4, 1, "", "generate_qubits_from_size"]], "src.pyLIQTR.circuits.tests": [[18, 0, 0, "-", "test_pyLCircuit"], [18, 0, 0, "-", "test_pyLOperator"]], "src.pyLIQTR.circuits.tests.test_pyLCircuit": [[18, 1, 1, "", "TestPylCircuit"]], "src.pyLIQTR.circuits.tests.test_pyLCircuit.TestPylCircuit": [[18, 3, 1, "", "hundred_gates"], [18, 3, 1, "", "single_gate"], [18, 3, 1, "", "ten_gates"], [18, 3, 1, "", "test_hundred_gate_resources"], [18, 3, 1, "", "test_pylcircuit_init"], [18, 3, 1, "", "test_single_gate_depth"], [18, 3, 1, "", "test_single_gate_resources"], [18, 3, 1, "", "test_ten_gate_resources"], [18, 3, 1, "", "test_thousand_gate_resources"], [18, 3, 1, "", "thousand_gates"]], "src.pyLIQTR.circuits.tests.test_pyLOperator": [[18, 1, 1, "", "TestPyLOperator"]], "src.pyLIQTR.circuits.tests.test_pyLOperator.TestPyLOperator": [[18, 3, 1, "", "single_gate"], [18, 3, 1, "", "test_base_class_pyloperator_creation"]], "src.pyLIQTR.clam": [[84, 0, 0, "-", "cell_complex"], [85, 0, 0, "-", "geometry"], [19, 0, 0, "-", "lattice"], [86, 0, 0, "-", "lattice_definitions"], [20, 0, 0, "-", "linearization_tools"], [87, 0, 0, "-", "multilinear_algebra"], [88, 0, 0, "-", "operator_complex"], [89, 0, 0, "-", "operator_lattice"], [90, 0, 0, "-", "operator_sims"], [91, 0, 0, "-", "operator_strings"], [92, 0, 0, "-", "operators"], [93, 0, 0, "-", "physical_data"], [94, 0, 0, "-", "simqsp"], [95, 0, 0, "-", "tensor_methods"], [21, 0, 0, "-", "tests"], [96, 0, 0, "-", "time_dynamics"], [19, 0, 0, "-", "utilities"]], "src.pyLIQTR.clam.cell_complex": [[19, 1, 1, "", "Cell"], [19, 1, 1, "", "CellComplex"], [19, 1, 1, "", "OperatorCell"]], "src.pyLIQTR.clam.cell_complex.Cell": [[19, 3, 1, "", "set_label"], [19, 3, 1, "", "tupleize"]], "src.pyLIQTR.clam.cell_complex.CellComplex": [[19, 3, 1, "", "add"]], "src.pyLIQTR.clam.cell_complex.OperatorCell": [[19, 3, 1, "", "cons"], [19, 3, 1, "", "ops"]], "src.pyLIQTR.clam.geometry": [[19, 1, 1, "", "Geometry"], [19, 4, 1, "", "geometry_angstrom_to_bohr"]], "src.pyLIQTR.clam.geometry.Geometry": [[19, 3, 1, "", "align_to_principal_axes"], [19, 3, 1, "", "convert"], [19, 3, 1, "", "get_center"], [19, 3, 1, "", "get_minmax"], [19, 3, 1, "", "get_units"], [19, 3, 1, "", "load_coordinates"], [19, 3, 1, "", "pairs"], [19, 3, 1, "", "print_xyz"], [19, 3, 1, "", "process"], [19, 3, 1, "", "recenter"], [19, 3, 1, "", "set_units"], [19, 3, 1, "", "write_xyz"]], "src.pyLIQTR.clam.lattice": [[19, 1, 1, "", "Lattice"], [19, 1, 1, "", "UnitCell"]], "src.pyLIQTR.clam.lattice.Lattice": [[19, 3, 1, "", "build"], [19, 3, 1, "", "num_sites"], [19, 3, 1, "", "purge_skeletons"]], "src.pyLIQTR.clam.lattice_definitions": [[19, 1, 1, "", "CubicLattice"], [19, 1, 1, "", "KagomeLattice"], [19, 1, 1, "", "SquareLattice"], [19, 1, 1, "", "TriangularLattice"]], "src.pyLIQTR.clam.linearization_tools": [[20, 0, 0, "-", "multilinear_algebra"], [20, 0, 0, "-", "vlasov_spectral"]], "src.pyLIQTR.clam.linearization_tools.multilinear_algebra": [[20, 4, 1, "", "mk"], [20, 4, 1, "", "mk_id"], [20, 4, 1, "", "mk_id_s"], [20, 4, 1, "", "mk_idpad"], [20, 4, 1, "", "mk_idpad_s"], [20, 4, 1, "", "mk_ksum"], [20, 4, 1, "", "mk_ksum_s"], [20, 4, 1, "", "mk_n"], [20, 4, 1, "", "mk_n_s"], [20, 4, 1, "", "mk_s"]], "src.pyLIQTR.clam.linearization_tools.vlasov_spectral": [[20, 4, 1, "", "get_vector_I"], [20, 4, 1, "", "vlasov_coeffs_linear_1d"], [20, 4, 1, "", "vlasov_coeffs_linear_1d_sparse"], [20, 4, 1, "", "vlasov_coeffs_nonlinear_1d"], [20, 4, 1, "", "vlasov_coeffs_nonlinear_1d_sparse"], [20, 4, 1, "", "vlasov_spectral_linear"], [20, 4, 1, "", "vlasov_spectral_linear_sparse"], [20, 4, 1, "", "vlasov_spectral_system"]], "src.pyLIQTR.clam.multilinear_algebra": [[19, 4, 1, "", "mk"], [19, 4, 1, "", "mk_id"], [19, 4, 1, "", "mk_id_s"], [19, 4, 1, "", "mk_idpad"], [19, 4, 1, "", "mk_idpad_s"], [19, 4, 1, "", "mk_ksum"], [19, 4, 1, "", "mk_ksum_s"], [19, 4, 1, "", "mk_n"], [19, 4, 1, "", "mk_n_s"], [19, 4, 1, "", "mk_s"]], "src.pyLIQTR.clam.operator_complex": [[19, 1, 1, "", "Edge"], [19, 1, 1, "", "OString"], [19, 1, 1, "", "Plaquette"], [19, 1, 1, "", "Site"]], "src.pyLIQTR.clam.operator_lattice": [[19, 1, 1, "", "OperatorLattice"], [19, 1, 1, "", "OperatorUnitCell"], [19, 4, 1, "", "draw_lattice_2d"], [19, 4, 1, "", "get_index_set_zigzag"], [19, 4, 1, "", "op_tuple_to_string"], [19, 4, 1, "", "sites_to_array"]], "src.pyLIQTR.clam.operator_lattice.OperatorLattice": [[19, 3, 1, "", "lattice_to_ops"], [19, 3, 1, "", "op_strings"], [19, 3, 1, "", "operator_list"]], "src.pyLIQTR.clam.operator_lattice.OperatorUnitCell": [[19, 3, 1, "", "add_edge"], [19, 3, 1, "", "add_site"], [19, 3, 1, "", "build_cell"], [19, 3, 1, "", "get_term"]], "src.pyLIQTR.clam.operator_sims": [[19, 4, 1, "", "get_qsp_phase_op"], [19, 4, 1, "", "get_qsp_signal_op"], [19, 4, 1, "", "get_qsp_signal_state"], [19, 4, 1, "", "phi_Wx_to_O"], [19, 4, 1, "", "phi_Wx_to_R"], [19, 4, 1, "", "phi_Wx_to_qsvt"], [19, 4, 1, "", "qsp_response"], [19, 4, 1, "", "qsvt_response"]], "src.pyLIQTR.clam.operator_strings": [[19, 4, 1, "", "convert_projector"], [19, 4, 1, "", "ham_from_pauli_tuples"], [19, 4, 1, "", "label_to_pauli"], [19, 1, 1, "", "op_strings"], [19, 4, 1, "", "ps_print_set"], [19, 4, 1, "", "ps_print_set_merged"], [19, 4, 1, "", "ps_text_full_set"], [19, 4, 1, "", "ps_text_full_set_withzero"], [19, 4, 1, "", "ps_text_pad"], [19, 4, 1, "", "ps_text_to_matrix"], [19, 4, 1, "", "ps_text_to_ops"]], "src.pyLIQTR.clam.operator_strings.op_strings": [[19, 3, 1, "", "append"], [19, 3, 1, "", "append_tuple"], [19, 3, 1, "", "cleanup"], [19, 3, 1, "", "consolidate_strings"], [19, 3, 1, "", "delete_site"], [19, 3, 1, "", "delete_term"], [19, 3, 1, "", "expand_projectors"], [19, 3, 1, "", "get_alpha"], [19, 3, 1, "", "get_coeff_norm"], [19, 3, 1, "", "matrix"], [19, 3, 1, "", "modify_coeff"], [19, 3, 1, "", "modify_type"], [19, 3, 1, "", "print"], [19, 3, 1, "", "remove_zeros"], [19, 3, 1, "", "rescale_coeff_norm"], [19, 3, 1, "", "rescale_coeff_scalar"], [19, 3, 1, "", "rescale_minmax"], [19, 3, 1, "", "set_num_qb"], [19, 3, 1, "", "sparse_matrix"], [19, 3, 1, "", "strings"], [19, 3, 1, "", "tensor"], [19, 3, 1, "", "terms"]], "src.pyLIQTR.clam.operators": [[19, 4, 1, "", "fan"], [19, 4, 1, "", "fcr"], [19, 4, 1, "", "state_multifermi_idx"], [19, 4, 1, "", "state_vacuum"]], "src.pyLIQTR.clam.physical_data": [[19, 4, 1, "", "fermi"]], "src.pyLIQTR.clam.simqsp": [[19, 1, 1, "", "SimQSP"], [19, 4, 1, "", "phase_w_to_r"], [19, 4, 1, "", "qsp_exp_sim_r"]], "src.pyLIQTR.clam.simqsp.SimQSP": [[19, 3, 1, "", "eval_sequence"], [19, 3, 1, "", "eval_sequence_qsvt"], [19, 3, 1, "", "get_qsp_operators"], [19, 3, 1, "", "get_qsp_operators_lcu_r"], [19, 3, 1, "", "qsp_sequence"], [19, 3, 1, "", "qsvt_sequence"]], "src.pyLIQTR.clam.tests": [[21, 0, 0, "-", "test_heisenberg"]], "src.pyLIQTR.clam.tests.test_heisenberg": [[21, 1, 1, "", "TestClamHeisenberg"]], "src.pyLIQTR.clam.tests.test_heisenberg.TestClamHeisenberg": [[21, 3, 1, "", "test_heisenberg_non_zero"], [21, 3, 1, "", "test_heisenberg_zero"]], "src.pyLIQTR.clam.time_dynamics": [[19, 4, 1, "", "calc_traj_op_wfn"], [19, 4, 1, "", "cm_prop"], [19, 4, 1, "", "cm_simulate"], [19, 4, 1, "", "measure_obs_site"], [19, 4, 1, "", "parse_wfn_traj_op"], [19, 4, 1, "", "prop_lvn"], [19, 4, 1, "", "prop_wfn"], [19, 4, 1, "", "wfn_product_state"], [19, 4, 1, "", "wfn_to_cm"]], "src.pyLIQTR.clam.utilities": [[19, 4, 1, "", "get_nonzero_match"], [19, 4, 1, "", "listify"], [19, 4, 1, "", "minmax"], [19, 4, 1, "", "tupleize"], [19, 4, 1, "", "tupleize_sites"]], "src.pyLIQTR.gate_decomp": [[97, 0, 0, "-", "cirq_transforms"], [98, 0, 0, "-", "clifford_gates"], [99, 0, 0, "-", "ellipse"], [100, 0, 0, "-", "exact_decomp"], [101, 0, 0, "-", "gate_approximation"], [102, 0, 0, "-", "grid_operator"], [103, 0, 0, "-", "matrices"], [104, 0, 0, "-", "point_enumeration"], [105, 0, 0, "-", "rings"], [106, 0, 0, "-", "rotation_gates"], [107, 0, 0, "-", "solve_diophantine"], [23, 0, 0, "-", "tests"]], "src.pyLIQTR.gate_decomp.cirq_transforms": [[22, 4, 1, "", "clifford_plus_t_direct_transform"], [22, 4, 1, "", "count_rotation_gates"], [22, 4, 1, "", "decompose_cirq_directCpT"], [22, 4, 1, "", "decompose_diagonal_cirq"], [22, 4, 1, "", "determine_gate_precision"], [22, 4, 1, "", "get_approximate_t_depth"], [22, 4, 1, "", "get_num_rotation_gates"], [22, 4, 1, "", "is_directCpT_gate"], [22, 4, 1, "", "is_filtered_gate"], [22, 4, 1, "", "is_gate_clifford_plus_T"], [22, 4, 1, "", "parse_and_reconstruct"], [22, 4, 1, "", "parse_gate"], [22, 4, 1, "", "random_decomp"]], "src.pyLIQTR.gate_decomp.clifford_gates": [[22, 4, 1, "", "create_operator_op"]], "src.pyLIQTR.gate_decomp.ellipse": [[22, 1, 1, "", "Ellipse"], [22, 4, 1, "", "calculate_bias"], [22, 4, 1, "", "calculate_skew"], [22, 4, 1, "", "force_det_one"], [22, 4, 1, "", "scale_ellipse"]], "src.pyLIQTR.gate_decomp.ellipse.Ellipse": [[22, 3, 1, "", "compute_x_points"], [22, 3, 1, "", "compute_y_points"], [22, 3, 1, "", "contains"], [22, 3, 1, "", "descriminant"], [22, 3, 1, "", "determinant"], [22, 3, 1, "", "from_axes"], [22, 3, 1, "", "is_positive_semi_definite"]], "src.pyLIQTR.gate_decomp.exact_decomp": [[22, 4, 1, "", "are_equivalent"], [22, 4, 1, "", "decompose"], [22, 4, 1, "", "exact_decomp"], [22, 4, 1, "", "exact_decomp_compressed"], [22, 4, 1, "", "exact_decomp_compressed_m"], [22, 4, 1, "", "exact_decomp_to_matrix_string"], [22, 4, 1, "", "exact_decomp_to_qasm"], [22, 4, 1, "", "get_equiv_class"], [22, 4, 1, "", "get_syllables"]], "src.pyLIQTR.gate_decomp.gate_approximation": [[22, 4, 1, "", "approxRz_direct"], [22, 4, 1, "", "approxRz_fallback"], [22, 4, 1, "", "approximate_rz_direct"], [22, 4, 1, "", "approximate_rz_fallback"], [22, 4, 1, "", "check_common_cases"], [22, 4, 1, "", "corrections"], [22, 4, 1, "", "get_ring_elts_direct"], [22, 4, 1, "", "get_ring_elts_fallback"], [22, 4, 1, "", "is_reducible"], [22, 4, 1, "", "reduce"]], "src.pyLIQTR.gate_decomp.grid_operator": [[22, 1, 1, "", "GridOperator"]], "src.pyLIQTR.gate_decomp.grid_operator.GridOperator": [[22, 3, 1, "", "A"], [22, 3, 1, "", "APowN"], [22, 3, 1, "", "B"], [22, 3, 1, "", "BPowN"], [22, 3, 1, "", "I"], [22, 3, 1, "", "K"], [22, 3, 1, "", "R"], [22, 3, 1, "", "X"], [22, 3, 1, "", "Z"], [22, 3, 1, "", "conj2"], [22, 3, 1, "", "inverse"], [22, 3, 1, "", "mult_x_y_pt"], [22, 3, 1, "", "multiply_z_omega"], [22, 3, 1, "", "transpose"]], "src.pyLIQTR.gate_decomp.matrices": [[22, 1, 1, "", "MAT_D_OMEGA"], [22, 1, 1, "", "SO3"], [22, 4, 1, "", "convert_to_zsqrti"], [22, 4, 1, "", "convert_to_zsqrti_increase_k"], [22, 4, 1, "", "is_odd"]], "src.pyLIQTR.gate_decomp.matrices.MAT_D_OMEGA": [[22, 3, 1, "", "H"], [22, 3, 1, "", "I"], [22, 3, 1, "", "S"], [22, 3, 1, "", "Sd"], [22, 3, 1, "", "T"], [22, 3, 1, "", "Td"], [22, 3, 1, "", "X"], [22, 3, 1, "", "Y"], [22, 3, 1, "", "Z"], [22, 3, 1, "", "adjoint"], [22, 3, 1, "", "convert_to_so3"], [22, 3, 1, "", "elements"], [22, 3, 1, "", "mult_pow_2"], [22, 3, 1, "", "reduce_by_sqrt2"], [22, 3, 1, "", "to_array"]], "src.pyLIQTR.gate_decomp.matrices.SO3": [[22, 3, 1, "", "elements"], [22, 3, 1, "", "get_parity"], [22, 3, 1, "", "reduce"], [22, 3, 1, "", "reduce_by_1"], [22, 3, 1, "", "reduce_by_2"]], "src.pyLIQTR.gate_decomp.point_enumeration": [[22, 4, 1, "", "apply_grid_operator"], [22, 4, 1, "", "apply_op_to_ellipse"], [22, 4, 1, "", "apply_shift_operator"], [22, 4, 1, "", "candidate_generator_direct"], [22, 4, 1, "", "candidate_generator_fallback"], [22, 4, 1, "", "determine_shift_operator"], [22, 4, 1, "", "find_bounding_ellipse_direct"], [22, 4, 1, "", "find_bounding_ellipse_fallback"], [22, 4, 1, "", "find_ellipse_bounding_box"], [22, 4, 1, "", "find_grid_operator"], [22, 4, 1, "", "find_k"], [22, 4, 1, "", "find_u_candidates_direct"], [22, 4, 1, "", "get_num_pot_sols"], [22, 4, 1, "", "get_num_pot_sols_scaled"], [22, 4, 1, "", "reduce_skew"], [22, 4, 1, "", "scaled_one_dim_grid_problem"], [22, 4, 1, "", "solve_one_dim_grid_problem"], [22, 4, 1, "", "solve_two_dim_grid_problem_ellipse"], [22, 4, 1, "", "solve_two_dim_grid_problem_upright_rectangles"]], "src.pyLIQTR.gate_decomp.rings": [[22, 1, 1, "", "Z_OMEGA"], [22, 1, 1, "", "Z_SQRT2"], [22, 4, 1, "", "increase"], [22, 4, 1, "", "is_reducible"], [22, 4, 1, "", "reduce"]], "src.pyLIQTR.gate_decomp.rings.Z_OMEGA": [[22, 3, 1, "", "conj"], [22, 3, 1, "", "conj2"], [22, 3, 1, "", "from_Z_SQRT2"], [22, 3, 1, "", "magnitude_squared"], [22, 3, 1, "", "mul_by_sqrt2"], [22, 3, 1, "", "to_zsqrt"]], "src.pyLIQTR.gate_decomp.rings.Z_SQRT2": [[22, 3, 1, "", "conj"], [22, 3, 1, "", "divide"], [22, 3, 1, "", "divide_sqrt2"], [22, 3, 1, "", "sqrt"], [22, 3, 1, "", "to_zomega"]], "src.pyLIQTR.gate_decomp.rotation_gates": [[22, 4, 1, "", "check_common_angles"], [22, 1, 1, "", "decomp_mixin"], [22, 1, 1, "", "rx_decomp"], [22, 1, 1, "", "ry_decomp"], [22, 1, 1, "", "rz_decomp"]], "src.pyLIQTR.gate_decomp.rotation_gates.decomp_mixin": [[22, 3, 1, "", "get_Clifford_count"], [22, 3, 1, "", "get_T_count"], [22, 3, 1, "", "get_resouces"], [22, 3, 1, "", "num_qubits"]], "src.pyLIQTR.gate_decomp.rotation_gates.rx_decomp": [[22, 3, 1, "", "num_qubits"]], "src.pyLIQTR.gate_decomp.rotation_gates.ry_decomp": [[22, 3, 1, "", "num_qubits"]], "src.pyLIQTR.gate_decomp.rotation_gates.rz_decomp": [[22, 3, 1, "", "num_qubits"]], "src.pyLIQTR.gate_decomp.solve_diophantine": [[22, 4, 1, "", "find_prime_factor_Z_OMEGA"], [22, 4, 1, "", "find_prime_factors_Z_SQRT2"], [22, 4, 1, "", "find_prime_factors_integers"], [22, 4, 1, "", "g_minus"], [22, 4, 1, "", "g_plus"], [22, 4, 1, "", "is_prime"], [22, 4, 1, "", "modular_sqrtm1"], [22, 4, 1, "", "modular_square_root"], [22, 4, 1, "", "pollard_rho"], [22, 4, 1, "", "ring_gcd"], [22, 4, 1, "", "solveDiophantine"]], "src.pyLIQTR.gate_decomp.tests": [[23, 0, 0, "-", "benchmarks"], [23, 0, 0, "-", "conftest"], [23, 0, 0, "-", "test_cirq_transformers"], [23, 0, 0, "-", "test_exact_decomp"], [23, 0, 0, "-", "test_matrices"], [23, 0, 0, "-", "test_point_enumeration"], [23, 0, 0, "-", "test_solve_diophantine"]], "src.pyLIQTR.gate_decomp.tests.benchmarks": [[23, 4, 1, "", "benchmark_gse_circuit"], [23, 4, 1, "", "benchmark_random_angles"], [23, 4, 1, "", "estimate_t_count_direct"], [23, 4, 1, "", "estimate_t_count_fallback"], [23, 4, 1, "", "main"]], "src.pyLIQTR.gate_decomp.tests.conftest": [[23, 4, 1, "", "test_circuit_4_qubits"], [23, 4, 1, "", "test_circuit_no_rz"]], "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers": [[23, 1, 1, "", "TestCirqTransforms"], [23, 4, 1, "", "random"]], "src.pyLIQTR.gate_decomp.tests.test_cirq_transformers.TestCirqTransforms": [[23, 3, 1, "", "precision_is_valid"], [23, 2, 1, "", "pytestmark"], [23, 3, 1, "", "setUp"], [23, 3, 1, "", "test_XPow_gates"], [23, 3, 1, "", "test_accuracy_issue"], [23, 3, 1, "", "test_determine_gate_precision_circuit_precision_none"], [23, 3, 1, "", "test_determine_gate_precision_no_rotational_gates"], [23, 3, 1, "", "test_determine_gate_precision_only_circuit_precision"], [23, 3, 1, "", "test_determine_gate_precision_only_gate_precision"], [23, 3, 1, "", "test_determine_gate_precision_valid_params"], [23, 3, 1, "", "test_get_approx_t_depth"], [23, 3, 1, "", "test_gse_circuit"], [23, 3, 1, "", "test_multi_axis_rotation_prec10"], [23, 3, 1, "", "test_multi_axis_rotation_prec13"], [23, 3, 1, "", "test_multiple_decomp_rotations_to_qasm"], [23, 3, 1, "", "test_num_rotation_gates1"], [23, 3, 1, "", "test_pi_rots"], [23, 3, 1, "", "test_profile_prec10"], [23, 3, 1, "", "test_profile_prec15"], [23, 3, 1, "", "test_qsp_circuit"], [23, 3, 1, "", "test_random_decomp1"], [23, 3, 1, "", "test_random_decomp2"], [23, 3, 1, "", "test_rx_decomp_inverse_gate"], [23, 3, 1, "", "test_rx_decomp_to_qasm"], [23, 3, 1, "", "test_ry_decomp_to_qasm"], [23, 3, 1, "", "test_rz_decomp1"], [23, 3, 1, "", "test_rz_decomp2"], [23, 3, 1, "", "test_rz_decomp_circuit2qasm"], [23, 3, 1, "", "test_rz_decomp_qsp_circuit"], [23, 3, 1, "", "test_rz_decomp_to_qasm"], [23, 3, 1, "", "test_rz_decomp_w_classical_controls"], [23, 3, 1, "", "test_single_qubit_x_rotation"], [23, 3, 1, "", "test_single_qubit_y_rotation"], [23, 3, 1, "", "test_single_qubit_z_rotation"]], "src.pyLIQTR.gate_decomp.tests.test_exact_decomp": [[23, 1, 1, "", "TestExactDecomp"]], "src.pyLIQTR.gate_decomp.tests.test_exact_decomp.TestExactDecomp": [[23, 3, 1, "", "test_compressed_rep1"], [23, 3, 1, "", "test_compressed_rep2"], [23, 3, 1, "", "test_exact_decomp_fallback_prec10"], [23, 3, 1, "", "test_exact_decomp_fallback_prec20"], [23, 3, 1, "", "test_exact_decomp_fallback_prec30"], [23, 3, 1, "", "test_exact_decomp_fallback_prec40"], [23, 3, 1, "", "test_exact_decomp_fallback_prec50"], [23, 3, 1, "", "test_exact_decomp_prec10"], [23, 3, 1, "", "test_exact_decomp_prec20"], [23, 3, 1, "", "test_exact_decomp_prec30"], [23, 3, 1, "", "test_exact_decomp_prec40"], [23, 3, 1, "", "test_rand_angles_prec50"]], "src.pyLIQTR.gate_decomp.tests.test_matrices": [[23, 1, 1, "", "TestMatrices"]], "src.pyLIQTR.gate_decomp.tests.test_matrices.TestMatrices": [[23, 3, 1, "", "test_convert_H"], [23, 3, 1, "", "test_convert_HT"], [23, 3, 1, "", "test_convert_S"], [23, 3, 1, "", "test_convert_T"], [23, 3, 1, "", "test_convert_T2"], [23, 3, 1, "", "test_convert_complicated"], [23, 3, 1, "", "test_mult_MATDOMEGA_1"], [23, 3, 1, "", "test_mult_MATDOMEGA_2"], [23, 3, 1, "", "test_mult_SO3_1"], [23, 3, 1, "", "test_mult_SO3_2"], [23, 3, 1, "", "test_mult_SO3_3"]], "src.pyLIQTR.gate_decomp.tests.test_point_enumeration": [[23, 1, 1, "", "TestApproximationFunctions"]], "src.pyLIQTR.gate_decomp.tests.test_point_enumeration.TestApproximationFunctions": [[23, 3, 1, "", "test_A_op"], [23, 3, 1, "", "test_B_op"], [23, 3, 1, "", "test_K_op"], [23, 3, 1, "", "test_R_op"], [23, 3, 1, "", "test_find_bounding_ellipse"], [23, 3, 1, "", "test_find_e_and_z"], [23, 3, 1, "", "test_find_k_1"], [23, 3, 1, "", "test_find_k_2"], [23, 3, 1, "", "test_find_k_3"], [23, 3, 1, "", "test_find_k_4"], [23, 3, 1, "", "test_find_k_5"], [23, 3, 1, "", "test_find_u_candidate_1"], [23, 3, 1, "", "test_find_u_candidate_2"], [23, 3, 1, "", "test_find_u_candidate_3"], [23, 3, 1, "", "test_find_u_candidate_4"], [23, 3, 1, "", "test_one_dim_grid_problem_rand"], [23, 3, 1, "", "test_reduce_skew_extra_1"], [23, 3, 1, "", "test_reduce_skew_large_bias1"], [23, 3, 1, "", "test_reduce_skew_large_bias2"], [23, 3, 1, "", "test_scaled_one_dim_grid_problem_1"], [23, 3, 1, "", "test_scaled_one_dim_grid_problem_2"], [23, 3, 1, "", "test_scaled_one_dim_grid_problem_3"], [23, 3, 1, "", "test_scaled_one_dim_grid_problem_4"], [23, 3, 1, "", "test_shift_operator"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_1"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_2"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_3"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_4"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_5"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_6"], [23, 3, 1, "", "test_solve_one_dim_grid_problem_tmp"], [23, 3, 1, "", "test_solve_two_dim_grid_problem_ellipse"], [23, 3, 1, "", "test_two_dim_upright_rectangle1"], [23, 3, 1, "", "test_two_dim_upright_rectangle2"]], "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine": [[23, 1, 1, "", "TestFactoringFunctions"]], "src.pyLIQTR.gate_decomp.tests.test_solve_diophantine.TestFactoringFunctions": [[23, 3, 1, "", "test_factor1"], [23, 3, 1, "", "test_factor2"], [23, 3, 1, "", "test_modular_square_root1"], [23, 3, 1, "", "test_modular_square_root2"], [23, 3, 1, "", "test_modular_square_root3"], [23, 3, 1, "", "test_modular_square_root4"], [23, 3, 1, "", "test_modular_square_root5"]], "src.pyLIQTR.pest_interface": [[24, 0, 0, "-", "pest_python"]], "src.pyLIQTR.pest_interface.pest_python": [[24, 1, 1, "", "HamiltonianCoefficients"], [24, 1, 1, "", "dpw_jw_alternating_spin"], [24, 4, 1, "", "dpw_to_pw_cutoff"], [24, 4, 1, "", "pw_to_dpw_cutoff"]], "src.pyLIQTR.pest_interface.pest_python.HamiltonianCoefficients": [[24, 3, 1, "", "T"], [24, 3, 1, "", "T_arr"], [24, 3, 1, "", "U"], [24, 3, 1, "", "U_arr"], [24, 3, 1, "", "V"], [24, 3, 1, "", "V_arr"], [24, 3, 1, "", "build_dtable_dict"], [24, 3, 1, "", "c_i"], [24, 3, 1, "", "c_xzx"], [24, 3, 1, "", "c_z"], [24, 3, 1, "", "c_zz"], [24, 3, 1, "", "close"], [24, 3, 1, "", "close_grid"], [24, 3, 1, "", "close_hamiltonian"], [24, 3, 1, "", "distance_dict"], [24, 3, 1, "", "gridpt_to_id"], [24, 3, 1, "", "id_to_gridpt"], [24, 3, 1, "", "n_points"], [24, 3, 1, "", "open_grid"], [24, 3, 1, "", "open_hamiltonian"], [24, 3, 1, "", "pair_coeff_array"], [24, 3, 1, "", "pair_coeff_lookup"], [24, 3, 1, "", "xzx_arr"], [24, 3, 1, "", "z_arr"], [24, 3, 1, "", "zz_arr"]], "src.pyLIQTR.pest_interface.pest_python.dpw_jw_alternating_spin": [[24, 3, 1, "", "xzx"], [24, 3, 1, "", "z"], [24, 3, 1, "", "zz"]], "src.pyLIQTR.phase_factors": [[108, 0, 0, "-", "angler"], [109, 0, 0, "-", "conversions"], [26, 0, 0, "-", "fourier_response"], [110, 0, 0, "-", "named_factors"], [27, 0, 0, "-", "optimization"], [111, 0, 0, "-", "phase_factors"], [112, 0, 0, "-", "simulation"]], "src.pyLIQTR.phase_factors.angler": [[25, 1, 1, "", "Angler_abstract"], [25, 1, 1, "", "Angler_random"]], "src.pyLIQTR.phase_factors.angler.Angler_abstract": [[25, 3, 1, "", "generate"]], "src.pyLIQTR.phase_factors.angler.Angler_random": [[25, 3, 1, "", "generate"]], "src.pyLIQTR.phase_factors.conversions": [[25, 4, 1, "", "phases_Wx_to_R"]], "src.pyLIQTR.phase_factors.fourier_response": [[26, 0, 0, "-", "fourier_response"]], "src.pyLIQTR.phase_factors.fourier_response.fourier_response": [[26, 1, 1, "", "Angler_fourier_response"], [26, 4, 1, "", "diffphis"], [26, 4, 1, "", "get_steps_from_logeps"], [26, 4, 1, "", "getlogepsilon"]], "src.pyLIQTR.phase_factors.fourier_response.fourier_response.Angler_fourier_response": [[26, 3, 1, "", "generate"]], "src.pyLIQTR.phase_factors.named_factors": [[25, 1, 1, "", "f_cosine"], [25, 1, 1, "", "f_exp_fourier_response"], [25, 1, 1, "", "f_sine"]], "src.pyLIQTR.phase_factors.named_factors.f_cosine": [[25, 2, 1, "", "expansion"], [25, 3, 1, "", "func"]], "src.pyLIQTR.phase_factors.named_factors.f_exp_fourier_response": [[25, 2, 1, "", "expansion"], [25, 3, 1, "", "func"]], "src.pyLIQTR.phase_factors.named_factors.f_sine": [[25, 2, 1, "", "expansion"], [25, 3, 1, "", "func"]], "src.pyLIQTR.phase_factors.optimization": [[27, 0, 0, "-", "ChebyshevPoly"], [27, 0, 0, "-", "angler_optimization"], [27, 0, 0, "-", "expander"], [27, 0, 0, "-", "fitter"]], "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly": [[27, 1, 1, "", "ChebyshevPoly"], [27, 4, 1, "", "eval_chebyshev"], [27, 4, 1, "", "eval_chebyshev_strict"]], "src.pyLIQTR.phase_factors.optimization.ChebyshevPoly.ChebyshevPoly": [[27, 3, 1, "", "coeffs"], [27, 3, 1, "", "eval"], [27, 3, 1, "", "evens"], [27, 3, 1, "", "odds"], [27, 3, 1, "", "read_poly"], [27, 3, 1, "", "set_coeffs"], [27, 3, 1, "", "set_evens"], [27, 3, 1, "", "set_odds"], [27, 3, 1, "", "set_parity"], [27, 3, 1, "", "set_type"], [27, 3, 1, "", "write_poly"], [27, 3, 1, "", "zero_poly"]], "src.pyLIQTR.phase_factors.optimization.angler_optimization": [[27, 1, 1, "", "Angler_opt"], [27, 4, 1, "", "handle_scalar"]], "src.pyLIQTR.phase_factors.optimization.angler_optimization.Angler_opt": [[27, 3, 1, "", "generate"], [27, 3, 1, "", "gradient_optimization"], [27, 3, 1, "", "set_poly"]], "src.pyLIQTR.phase_factors.optimization.expander": [[27, 1, 1, "", "Expander"], [27, 4, 1, "", "binomsum"], [27, 4, 1, "", "eval_chebyshev"], [27, 4, 1, "", "eval_chebyshev_strict"], [27, 4, 1, "", "handle_scalar"]], "src.pyLIQTR.phase_factors.optimization.expander.Expander": [[27, 3, 1, "", "erf"], [27, 3, 1, "", "erf_shifted"], [27, 3, 1, "", "exponential_decay_even"], [27, 3, 1, "", "exponential_decay_odd"], [27, 3, 1, "", "gaussian"], [27, 3, 1, "", "inverse"], [27, 3, 1, "", "ja_cos"], [27, 3, 1, "", "ja_sin"]], "src.pyLIQTR.phase_factors.optimization.fitter": [[27, 1, 1, "", "Fitter"], [27, 4, 1, "", "chebyshev_func_m"], [27, 4, 1, "", "chebyshev_m"], [27, 4, 1, "", "m_to_np"]], "src.pyLIQTR.phase_factors.optimization.fitter.Fitter": [[27, 3, 1, "", "eval_approx"], [27, 3, 1, "", "eval_func"], [27, 3, 1, "", "get_chebyshev_domain"], [27, 3, 1, "", "get_pts"], [27, 3, 1, "", "get_pts_m"], [27, 3, 1, "", "remez"], [27, 3, 1, "", "set_precision"], [27, 3, 1, "", "set_root_solver"]], "src.pyLIQTR.phase_factors.phase_factors": [[25, 1, 1, "", "PhaseFactors"]], "src.pyLIQTR.phase_factors.phase_factors.PhaseFactors": [[25, 2, 1, "", "expansion"], [25, 2, 1, "", "expansion_coeffs"], [25, 2, 1, "", "expansion_degree"], [25, 3, 1, "", "expansion_error"], [25, 3, 1, "", "expansion_eval"], [25, 3, 1, "", "f"], [25, 2, 1, "", "fit"], [25, 2, 1, "", "num_phases"], [25, 2, 1, "", "phase_generator"], [25, 2, 1, "", "phis"], [25, 3, 1, "", "plot_expansion_error"]], "src.pyLIQTR.phase_factors.simulation": [[25, 4, 1, "", "simulation_phases"]], "src.pyLIQTR.qubitization": [[113, 0, 0, "-", "phase_estimation"], [114, 0, 0, "-", "qsvt"], [115, 0, 0, "-", "qsvt_dynamics"], [116, 0, 0, "-", "qubitized_gates"]], "src.pyLIQTR.qubitization.phase_estimation": [[28, 1, 1, "", "QubitizedPhaseEstimation"]], "src.pyLIQTR.qubitization.phase_estimation.QubitizedPhaseEstimation": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 2, 1, "", "control_registers"], [28, 3, 1, "", "decompose_from_registers"], [28, 2, 1, "", "junk_registers"], [28, 3, 1, "", "num_qubits"], [28, 2, 1, "", "selection_registers"], [28, 2, 1, "", "signature"], [28, 2, 1, "", "target_registers"]], "src.pyLIQTR.qubitization.qsvt": [[28, 1, 1, "", "QSP_fourier_response"], [28, 1, 1, "", "QSVT_abstract"], [28, 1, 1, "", "QSVT_real_polynomial"], [28, 1, 1, "", "QSVT_real_polynomial_sum"]], "src.pyLIQTR.qubitization.qsvt.QSP_fourier_response": [[28, 3, 1, "", "decompose_from_registers"], [28, 3, 1, "", "num_qubits"]], "src.pyLIQTR.qubitization.qsvt.QSVT_abstract": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 2, 1, "", "control_registers"], [28, 2, 1, "", "junk_registers"], [28, 3, 1, "", "num_qubits"], [28, 3, 1, "", "num_qubits_in_registers"], [28, 2, 1, "", "phase_registers"], [28, 2, 1, "", "selection_registers"], [28, 2, 1, "", "signature"], [28, 2, 1, "", "target_registers"]], "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial": [[28, 3, 1, "", "decompose_from_registers"], [28, 3, 1, "", "num_qubits"]], "src.pyLIQTR.qubitization.qsvt.QSVT_real_polynomial_sum": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 2, 1, "", "control_registers"], [28, 3, 1, "", "decompose_from_registers"], [28, 2, 1, "", "junk_registers"], [28, 2, 1, "", "n_phis"], [28, 3, 1, "", "num_qubits"], [28, 2, 1, "", "phase_registers"], [28, 2, 1, "", "selection_registers"], [28, 2, 1, "", "signature"], [28, 2, 1, "", "target_registers"]], "src.pyLIQTR.qubitization.qsvt_dynamics": [[28, 4, 1, "", "qsvt_dynamics"], [28, 4, 1, "", "simulation_phases"]], "src.pyLIQTR.qubitization.qubitized_gates": [[28, 1, 1, "", "QubitizedReflection"], [28, 1, 1, "", "QubitizedRotation"], [28, 1, 1, "", "QubitizedWalkOperator"]], "src.pyLIQTR.qubitization.qubitized_gates.QubitizedReflection": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 3, 1, "", "decompose_from_registers"], [28, 3, 1, "", "num_qubits"], [28, 2, 1, "", "signature"]], "src.pyLIQTR.qubitization.qubitized_gates.QubitizedRotation": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 3, 1, "", "decompose_from_registers"], [28, 3, 1, "", "num_qubits"], [28, 2, 1, "", "signature"]], "src.pyLIQTR.qubitization.qubitized_gates.QubitizedWalkOperator": [[28, 2, 1, "", "all_qubits"], [28, 2, 1, "", "circuit"], [28, 2, 1, "", "control_registers"], [28, 3, 1, "", "decompose_from_registers"], [28, 2, 1, "", "junk_registers"], [28, 3, 1, "", "num_qubits"], [28, 2, 1, "", "selection_registers"], [28, 2, 1, "", "signature"], [28, 2, 1, "", "target_registers"]], "src.pyLIQTR.scheduler": [[117, 0, 0, "-", "DAG"], [118, 0, 0, "-", "Instruction"], [119, 0, 0, "-", "scheduler"], [120, 0, 0, "-", "scheduler_utils"], [121, 0, 0, "-", "sets"]], "src.pyLIQTR.scheduler.DAG": [[29, 1, 1, "", "DAG"]], "src.pyLIQTR.scheduler.DAG.DAG": [[29, 3, 1, "", "add_dependency"], [29, 3, 1, "", "draw"], [29, 3, 1, "", "empty"], [29, 3, 1, "", "finish"], [29, 3, 1, "", "full"], [29, 3, 1, "", "get_available"], [29, 3, 1, "", "remove_dependencies"]], "src.pyLIQTR.scheduler.Instruction": [[29, 1, 1, "", "DependencyEdge"], [29, 1, 1, "", "Instruction"]], "src.pyLIQTR.scheduler.Instruction.Instruction": [[29, 3, 1, "", "get_data_dependencies"], [29, 3, 1, "", "resource_counts"], [29, 3, 1, "", "set_execution_time"]], "src.pyLIQTR.scheduler.scheduler": [[29, 1, 1, "", "Scheduler"], [29, 4, 1, "", "schedule_circuit"]], "src.pyLIQTR.scheduler.scheduler.Scheduler": [[29, 3, 1, "", "allocate_resources"], [29, 3, 1, "", "assign_execution_time"], [29, 3, 1, "", "complex_inst"], [29, 3, 1, "", "custom_gateset_decomposition_catchall"], [29, 3, 1, "", "free_instructions"], [29, 3, 1, "", "free_resources"], [29, 3, 1, "", "gate_counting"], [29, 3, 1, "", "move_ready_to_execute"], [29, 3, 1, "", "parallelism_analysis"], [29, 3, 1, "", "populate_ready"], [29, 3, 1, "", "resource_available"], [29, 3, 1, "", "rotation_to_t"], [29, 3, 1, "", "schedule"]], "src.pyLIQTR.scheduler.scheduler_utils": [[29, 4, 1, "", "dag_creation"], [29, 4, 1, "", "get_instruction2node_map"], [29, 4, 1, "", "manual_link"]], "src.pyLIQTR.tests": [[30, 0, 0, "-", "test_qualtran_resource_analyze_multiple_gates"], [30, 0, 0, "-", "test_qualtran_resource_analyze_single_gate"]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates": [[30, 1, 1, "", "TestCirqFTMultipleGateDecompose"], [30, 4, 1, "", "get_resource_state"]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_multiple_gates.TestCirqFTMultipleGateDecompose": [[30, 3, 1, "", "test_cirqft_apply_gate_to_lth_qubit"], [30, 3, 1, "", "test_cirqft_generic_select"], [30, 3, 1, "", "test_cirqft_hubbard"], [30, 3, 1, "", "test_cirqft_multi_target_cnot"], [30, 3, 1, "", "test_cirqft_multicontrol_pauli"], [30, 3, 1, "", "test_cirqft_prepare_uniform_superposition"], [30, 3, 1, "", "test_cirqft_walk_operator"]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate": [[30, 1, 1, "", "TestCirqFTSIngleGateDecompose"], [30, 4, 1, "", "get_resource_state"]], "src.pyLIQTR.tests.test_qualtran_resource_analyze_single_gate.TestCirqFTSIngleGateDecompose": [[30, 3, 1, "", "test_cirqft_adjoint_and"], [30, 3, 1, "", "test_cirqft_and"]], "src.pyLIQTR.utils": [[122, 0, 0, "-", "Hamiltonian"], [123, 0, 0, "-", "circuit_decomposition"], [31, 0, 0, "-", "gate_complexity"], [124, 0, 0, "-", "get_hdf5"], [125, 0, 0, "-", "global_ancilla_manager"], [126, 0, 0, "-", "pauli_string_manip"], [127, 0, 0, "-", "plot_helpers"], [128, 0, 0, "-", "printing"], [129, 0, 0, "-", "qsp_helpers"], [130, 0, 0, "-", "resource_analysis"], [32, 0, 0, "-", "tests"], [131, 0, 0, "-", "utils"]], "src.pyLIQTR.utils.Hamiltonian": [[31, 1, 1, "", "Hamiltonian"]], "src.pyLIQTR.utils.Hamiltonian.Hamiltonian": [[31, 3, 1, "", "adjust_hamiltonian"], [31, 2, 1, "", "alpha"], [31, 2, 1, "", "alphas"], [31, 2, 1, "", "is_fermionic"], [31, 2, 1, "", "is_lcu"], [31, 2, 1, "", "loglen"], [31, 2, 1, "", "problem_size"], [31, 2, 1, "", "terms"]], "src.pyLIQTR.utils.circuit_decomposition": [[31, 4, 1, "", "circuit_decompose_multi"], [31, 4, 1, "", "decompose_once"], [31, 4, 1, "", "decompose_op"], [31, 4, 1, "", "generator_decompose"], [31, 4, 1, "", "intercept_decompose"], [31, 4, 1, "", "keep"], [31, 4, 1, "", "test_for_bad_gate_op"]], "src.pyLIQTR.utils.gate_complexity": [[31, 1, 1, "", "GateComplexity"], [31, 4, 1, "", "gate_complexity"]], "src.pyLIQTR.utils.gate_complexity.GateComplexity": [[31, 3, 1, "", "cliff_t_cx"], [31, 3, 1, "", "cliff_t_cx_rot"], [31, 3, 1, "", "cliff_t_cx_rot_toff"]], "src.pyLIQTR.utils.get_hdf5": [[31, 4, 1, "", "get_hdf5"]], "src.pyLIQTR.utils.global_ancilla_manager": [[31, 1, 1, "", "GlobalQubitManager"]], "src.pyLIQTR.utils.global_ancilla_manager.GlobalQubitManager": [[31, 3, 1, "", "qalloc"], [31, 3, 1, "", "qborrow"], [31, 3, 1, "", "qfree"], [31, 3, 1, "", "reset"]], "src.pyLIQTR.utils.pauli_string_manip": [[31, 4, 1, "", "convert_projector"], [31, 4, 1, "", "convert_sparse_term"], [31, 4, 1, "", "convert_to_dense_pauli_string"]], "src.pyLIQTR.utils.plot_helpers": [[31, 4, 1, "", "ig_plot_convergence"], [31, 4, 1, "", "ig_plot_fit"], [31, 4, 1, "", "ig_plot_scalar_qsp"], [31, 4, 1, "", "plot_func_error"]], "src.pyLIQTR.utils.printing": [[31, 1, 1, "", "QASMInfo"], [31, 4, 1, "", "openqasm"]], "src.pyLIQTR.utils.printing.QASMInfo": [[31, 3, 1, "", "add_measurement_result"], [31, 3, 1, "", "get_measurement_result"], [31, 3, 1, "", "sanitize_meas_name"], [31, 3, 1, "", "update_info"]], "src.pyLIQTR.utils.qsp_helpers": [[31, 1, 1, "", "QSPFilesIO"], [31, 4, 1, "", "circuit_compare"], [31, 4, 1, "", "circuit_decompose_once"], [31, 4, 1, "", "count_qubits"], [31, 4, 1, "", "decompose_CCZ"], [31, 4, 1, "", "first_two_items"], [31, 4, 1, "", "getLineQubitIndexMap"], [31, 4, 1, "", "getQubitFromMap"], [31, 4, 1, "", "get_state_vector"], [31, 4, 1, "", "snorm"], [31, 4, 1, "", "splitIn2"], [31, 4, 1, "", "splitInPairs"], [31, 4, 1, "", "time_step_comparison_mpe"]], "src.pyLIQTR.utils.qsp_helpers.QSPFilesIO": [[31, 3, 1, "", "readAngles"], [31, 3, 1, "", "readHaml"]], "src.pyLIQTR.utils.resource_analysis": [[31, 4, 1, "", "count_clifford_and_rotations"], [31, 4, 1, "", "count_t_gates"], [31, 4, 1, "", "estimate_resources"], [31, 4, 1, "", "from_measurement"], [31, 4, 1, "", "get_T_counts_from_rotations"], [31, 4, 1, "", "get_qubits_by_keys"], [31, 4, 1, "", "legacy_resource_profile"], [31, 4, 1, "", "pylqt_t_complexity"], [31, 4, 1, "", "t_complexity_from_circuit"]], "src.pyLIQTR.utils.tests": [[32, 0, 0, "-", "conftest"], [32, 0, 0, "-", "test_gate_complexity"], [32, 0, 0, "-", "test_printing"], [32, 0, 0, "-", "test_resoure_analyze"], [32, 0, 0, "-", "test_utils"]], "src.pyLIQTR.utils.tests.conftest": [[32, 4, 1, "", "electronic_structure_LinearT_encoding"], [32, 4, 1, "", "fermi_hubbard_dynamics"], [32, 4, 1, "", "heisenberg_phase_estimation"]], "src.pyLIQTR.utils.tests.test_gate_complexity": [[32, 1, 1, "", "TestGateComplexity"]], "src.pyLIQTR.utils.tests.test_gate_complexity.TestGateComplexity": [[32, 3, 1, "", "test_gate_complexity_init"]], "src.pyLIQTR.utils.tests.test_printing": [[32, 1, 1, "", "TestPrinting"], [32, 4, 1, "", "script_loc"]], "src.pyLIQTR.utils.tests.test_printing.TestPrinting": [[32, 3, 1, "", "build_circuit_repeat_different_key"], [32, 3, 1, "", "build_circuit_rotations_qrom"], [32, 3, 1, "", "build_circuit_single"], [32, 3, 1, "", "chemical_phase_estimation"], [32, 3, 1, "", "electronic_structure_LinearT_encoding"], [32, 3, 1, "", "fermi_hubbard_dynamics"], [32, 3, 1, "", "heisenberg_phase_estimation"], [32, 3, 1, "", "test_chemical_phase_estimation"], [32, 3, 1, "", "test_chemical_phase_estimation_context"], [32, 3, 1, "", "test_classical_control_examples"], [32, 3, 1, "", "test_electronic_structure_context"], [32, 3, 1, "", "test_fermi_hubbard"], [32, 3, 1, "", "test_fermi_hubbard_context"], [32, 3, 1, "", "test_fermi_hubbard_context_error"], [32, 3, 1, "", "test_fermi_hubbard_simple_context"], [32, 3, 1, "", "test_get_attr_qasm"], [32, 3, 1, "", "test_heisenberg"]], "src.pyLIQTR.utils.tests.test_utils": [[32, 1, 1, "", "TestUtils"]], "src.pyLIQTR.utils.tests.test_utils.TestUtils": [[32, 3, 1, "", "test_invalid_trotterized_hamiltonian"], [32, 3, 1, "", "test_is_mac"], [32, 3, 1, "", "test_is_windows_on_mac_or_linux"], [32, 3, 1, "", "test_is_windows_on_windows"], [32, 3, 1, "", "test_open_fermion_to_qasm"], [32, 3, 1, "", "test_to_openqasm"], [32, 3, 1, "", "test_writing_out_qasm_with_decomposed_rotations"], [32, 3, 1, "", "test_writing_out_qasm_with_rotations"], [32, 3, 1, "", "trotterized_hamiltonian"], [32, 3, 1, "", "vlasov_n8_qsp"]], "src.pyLIQTR.utils.utils": [[31, 4, 1, "", "count_T_gates"], [31, 4, 1, "", "getLineQubitIndexMap"], [31, 4, 1, "", "getQubitFromMap"], [31, 4, 1, "", "isLinux"], [31, 4, 1, "", "isMac"], [31, 4, 1, "", "isWindows"], [31, 4, 1, "", "open_fermion_to_qasm"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "terms": {"": [0, 4, 7, 10, 12, 16, 17, 19, 22, 29, 30, 31, 32, 97, 98, 100, 104, 106, 107, 133, 134], "0": [4, 7, 11, 12, 14, 16, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 134], "00": [16, 19], "000": 16, "0000": 16, "0001": [11, 22, 32, 97, 98, 100, 104, 106, 107, 133], "001": [11, 16, 25, 28, 29], "00110": 22, "002": 11, "00758534": 19, "00780698": 19, "01": [16, 19, 25, 26], "010": 16, "011": 16, "01619285e": 19, "01_x": 7, "01_z": 7, "02": [4, 19, 22, 31], "02134": 16, "03": 19, "03273": 16, "03494": [11, 16], "03662": [5, 11, 16, 30], "041015": 0, "04807": 16, "05": 11, "06": [4, 15, 22, 31], "07391": 16, "07528527": 19, "08": [11, 15, 16, 31], "0806": [4, 22, 31, 97, 100], "08075299": 19, "08629481e": 19, "09571276": 19, "09699743": 19, "1": [4, 6, 7, 11, 12, 14, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 100, 104, 107, 134], "10": [4, 5, 11, 14, 16, 22, 29, 31, 132], "100": [7, 16, 25], "1000": [4, 16, 22, 31], "10236": 16, "11": [16, 22, 133], "1100": 16, "11001": 22, "111": 16, "1110": 16, "11366948e": 19, "12": 27, "1212": 22, "127": 11, "12778879e": 19, "1312": [4, 22, 31, 97, 100], "13192420e": 19, "132": 11, "133": 11, "134": 11, "13454063": 19, "14": [0, 16, 25], "1403": [22, 97, 104, 107], "14460": [11, 16], "14576287e": 19, "15": [0, 16, 22, 32, 97, 98, 100, 104, 106, 107, 133], "1508": 16, "16": [0, 11, 16, 19], "17": [16, 30], "18": 16, "1805": [5, 11, 16, 30], "1885308": 19, "19": 16, "1902": 16, "19283170e": 19, "19685072": 19, "1a": 11, "1e": [4, 11, 14, 15, 16, 19, 22, 25, 27, 29, 31], "2": [0, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "20": 16, "2007": [11, 16], "2011": [11, 16], "2014": [22, 32, 97, 98, 100, 104, 106, 107, 133], "2022": [22, 32, 97, 98, 100, 104, 106, 107], "2024": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "20416862e": 19, "21": 16, "22": 16, "2203": 16, "227": [22, 32, 97, 98, 100, 104, 106, 107, 133], "23": 16, "2305": 16, "25": [11, 22], "252": [22, 32, 97, 98, 100, 104, 106, 107, 133], "256": 16, "27329360e": 19, "2975": [22, 104, 107], "2975v3": [22, 97], "2b": 22, "2co": 22, "2d": [0, 14], "2j": 16, "2pi": 16, "2q": 4, "2re": 22, "2x2": 22, "3": [0, 4, 11, 16, 19, 22, 29, 31, 97, 100, 133], "30245113e": 19, "33975353": 19, "34134998": 19, "36": 11, "36567246": 19, "36599348": 19, "38058893": 19, "3834": [4, 22, 31, 97, 100], "39": 16, "3a": [11, 16], "4": [5, 11, 14, 16, 19, 22, 28], "400": 25, "40618497": 19, "42587563": 19, "48": 16, "48263369e": 19, "5": [7, 11, 14, 19, 22, 133], "50": 19, "50000": 27, "51": 16, "512": [25, 27], "52": [11, 16], "5281": 132, "53": [11, 16], "56633075e": 19, "5707963267948966": 28, "57875424": 19, "6": [11, 16, 19, 22], "612004": 19, "61801713": 19, "62": 16, "62015356e": 19, "6253": 22, "62535347e": 19, "62840726e": 19, "63": 11, "6584": [4, 22, 31, 97, 100], "67": 16, "68": 16, "68368915e": 19, "69": 16, "7": [11, 16, 22], "7013": [22, 32, 97, 98, 100, 104, 106, 107, 133], "7014": [22, 32, 97, 98, 100, 104, 106, 107, 133], "71": 11, "72044300e": 19, "7221272": 132, "72304443e": 19, "73197954e": 19, "7428948": 19, "74323077e": 19, "74570482e": 19, "75517113e": 19, "75568449": 19, "76760748": 19, "77": [4, 16, 22, 31], "78": 16, "79": 16, "8": [0, 11, 16, 22, 133], "80": 16, "830387": 7, "85723465e": 19, "86": 16, "89": 16, "89178131": 19, "9": [16, 17, 19], "951187": 19, "999": 22, "A": [0, 2, 3, 4, 10, 11, 12, 14, 16, 22, 29, 31, 32, 97, 98, 100, 104, 106, 107, 133], "AND": [16, 29], "And": [16, 30, 33], "Ands": 16, "As": [6, 22, 32, 97, 98, 100, 104, 106, 107], "At": [4, 134], "Be": 6, "By": [16, 31], "For": [4, 7, 16, 22, 29, 31, 134], "If": [3, 4, 7, 16, 22, 29, 30, 31, 33, 133], "In": [4, 7, 16, 22, 29, 134], "Ising": 0, "It": [4, 6, 7, 14, 16, 29, 32, 133, 134], "NOT": 29, "No": [22, 32, 97, 98, 100, 104, 106, 107, 133], "OR": 16, "On": [7, 134], "One": 7, "Or": 6, "Such": [4, 22], "The": [0, 2, 4, 6, 7, 11, 12, 14, 15, 16, 22, 28, 29, 30, 31, 32, 97, 98, 100, 104, 106, 107, 134], "Then": 16, "There": [16, 22, 134], "These": [3, 21, 33, 134], "To": [7, 12, 16, 33], "Will": 4, "With": 134, "_": [16, 31], "__init__": [6, 12], "__mod__": 22, "_build": 33, "_decomp": [4, 22], "_decompose_": 31, "_modul": 33, "_nestedsequ": 22, "_qasm_": 31, "_repr_": 16, "_scalartype_co": 16, "_soquettyp": 16, "_supportsarrai": 22, "_value_error_describing_bad_oper": 31, "_version": 134, "a0": 24, "a00": 22, "a01": 22, "a0_in": 16, "a1": [16, 22], "a10": 22, "a11": 22, "a1a2": 22, "a1\u03c9": 22, "a2": 22, "a2_in": 16, "a2_out": 16, "a2\u03c9": 22, "a3": 22, "a3\u03c9": 22, "a4": 22, "a9": 16, "a_": 14, "a_dtyp": [15, 16], "aa": 16, "ab": [11, 16, 22, 30], "abc": 14, "abil": [4, 5, 6, 7, 30], "abl": 30, "about": [6, 7, 12, 14, 16, 29], "abov": [4, 5, 14, 16, 22, 32, 97, 98, 100, 104, 106, 107, 133], "absolut": [14, 16], "abstract": [0, 14, 18, 25], "abstractcircuit": [22, 31], "abstrct": 0, "acc_tgt": 27, "access": 29, "accompani": 31, "accord": 16, "accordingli": 29, "account": 29, "accumul": 16, "accur": 16, "accuraci": [5, 16], "acknowledg": 29, "across": 6, "act": [11, 12, 15, 16, 22, 28, 29, 31], "action": 29, "activ": [29, 133], "active_qubit": 29, "actual": 134, "acycl": 29, "ad": [5, 12, 16, 17, 22, 29, 31, 134], "add": [3, 7, 10, 15, 16, 19, 22, 29, 33, 134], "add_depend": [10, 29], "add_edg": [10, 19], "add_measurement_result": [10, 31], "add_sit": [10, 19], "add_trotterized_unitari": [10, 12], "add_val": [15, 16], "addit": 16, "addition": 14, "addmod": [10, 15], "address": [4, 5, 31], "adjoint": [10, 11, 15, 16, 22, 30], "adjust": 31, "adjust_hamiltonian": [10, 31], "admin": 6, "affect": [14, 16], "after": [16, 31], "again": 29, "against": 30, "ahead": 4, "ai": 22, "aim": 6, "air": [22, 32, 97, 98, 100, 104, 106, 107, 133], "aka": 29, "akin": [4, 16], "algebra": 0, "algo": 30, "algorithm": [0, 2, 5, 16, 22, 97, 132], "algorithms_and_infrastructur": [0, 4], "alia": [15, 16], "align_to_principal_ax": [10, 19], "all": [4, 6, 7, 16, 17, 22, 27, 29, 30, 31, 98, 133], "all_qubit": [10, 11, 28], "alloc": [4, 29, 31], "allocate_resourc": [10, 29], "allow": [4, 5, 7, 11, 29, 31, 134], "along": [14, 16, 29], "alpha": [10, 11, 14, 15, 16, 20, 27, 31], "alpha0": [11, 16], "alpha1": [11, 16], "alpha2": [11, 16], "alpha_pair": 16, "alpha_prep": [15, 16], "alreadi": 16, "also": [0, 4, 6, 7, 14, 16, 22, 29, 31, 133, 134], "alt": [15, 16], "alt_data": [15, 16], "alt_signs_data": [15, 16], "alternates_bits": [15, 16], "alwai": 134, "amano": [4, 22, 97, 100], "amchild": [4, 22, 31, 97, 100], "amount": [4, 22], "amplif": [11, 16], "amplitud": [11, 16], "amplitude_list": 7, "an": [4, 5, 6, 7, 11, 14, 16, 22, 29, 31, 32, 33, 97, 98, 100, 104, 106, 107, 134], "analys": 30, "analysi": [29, 30], "analyt": [0, 17, 25], "analyz": 30, "anc": 22, "anc_q": [16, 31], "anc_qubit": 16, "ancilla": [2, 3, 4, 11, 14, 16, 22, 31], "ancilla_qubit": 16, "and_ancilla": 16, "angl": [0, 4, 5, 11, 15, 16, 22, 31], "angle_data_qubit": 16, "anglegener": 0, "angler": [0, 9, 10, 19], "angler_abstract": [10, 25, 26], "angler_bfgs_conv": 25, "angler_fourier_respons": [25, 26], "angler_max_it": 25, "angler_opt": [25, 27], "angler_optim": [10, 25], "angler_random": [10, 25], "angstrom": 19, "ani": [0, 5, 6, 11, 16, 22, 29, 31, 32, 33, 97, 98, 100, 104, 106, 107, 133, 134], "annihil": 14, "annot": 7, "anoth": [12, 29, 134], "anymor": 31, "anyth": 4, "anywher": [2, 3], "ap": 22, "apidoc": 33, "apown": [10, 22], "append": [10, 16, 19, 134], "append_tupl": [10, 19], "appendix": [0, 11, 16], "appli": [0, 12, 16, 17, 22, 32], "applic": [0, 29, 133], "apply_grid_oper": [10, 22], "apply_op_to_ellips": [10, 22], "apply_shift_oper": [10, 22], "applyandstep": [15, 16], "applyandwalk": [15, 16], "approach": [22, 107], "appropri": [6, 16, 29], "approv": [22, 32, 97, 98, 100, 104, 106, 107, 133], "approx_angle_with_br_bit": [15, 16], "approx_angles_as_ints_with_br_bit": [10, 11], "approx_error": [11, 16], "approxim": [0, 4, 5, 16, 22, 31, 97], "approximate_rz_direct": [10, 22], "approximate_rz_fallback": [10, 22], "approxrz_direct": [10, 22], "approxrz_fallback": [10, 22], "ar": [0, 2, 3, 4, 6, 7, 11, 14, 16, 17, 21, 22, 29, 30, 31, 32, 33, 97, 98, 100, 104, 106, 107, 133, 134], "arbitrari": [0, 6, 16], "arch_descript": 29, "architecture_config": [4, 29], "arcsin": 22, "are_equival": [10, 22], "arg": [7, 15, 16, 17, 22, 23, 31], "argument": [12, 16, 22, 31], "aris": 29, "around": [29, 31, 133], "arrai": [14, 16, 17, 19, 30], "arrang": 22, "arxiv": [4, 5, 11, 16, 22, 30, 31, 97, 100, 104, 107], "as_int": 19, "as_list": 19, "ask": [5, 6, 133], "assert": 7, "assign": [6, 29, 134], "assign_execution_tim": [10, 29], "assist": 133, "associ": 29, "assort": 5, "assum": [4, 14, 16, 17, 22, 31], "assur": 134, "asymmetric_op": 19, "atol": 19, "atom": [0, 11, 14, 16], "atomic_lattic": [9, 10], "attach": 29, "attribut": [7, 16], "author": [16, 22, 32, 97, 98, 100, 104, 106, 107, 133], "autom": 0, "automat": [6, 7, 16, 33], "avail": [4, 29], "awai": 12, "ax0": 22, "ax1": 22, "axi": 22, "ay0": 22, "ay1": 22, "a\u03c9": 22, "b": [0, 10, 16, 22, 27, 31, 33, 133], "b0": 16, "b1": 16, "b_": [16, 22], "b_1": 22, "b_dtype": [15, 16], "b_k": [16, 22], "b_kl_": 16, "b_n": 22, "b_r": 11, "back": 31, "backlog": 6, "backward": 22, "band": 0, "base": [0, 4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 97, 98, 100, 104, 106, 107, 133], "bash": 133, "basi": [0, 11, 14, 16, 19, 22, 32, 97, 98, 100, 104, 106, 107], "basic": [4, 16, 29, 32, 133], "bb": 16, "bc": 12, "becaus": [5, 33], "becom": 22, "been": [4, 7, 12, 16, 22, 29, 31], "befor": [4, 7, 23, 29, 31, 134], "begin": 5, "begun": 4, "behavior": [31, 132], "being": [4, 7, 12, 16, 29, 31], "below": [0, 7, 16, 133], "benchmark": [10, 22], "benchmark_gse_circuit": [22, 23], "benchmark_random_angl": [22, 23], "best": [6, 132], "beta": [14, 16, 27], "between": [11, 12, 16, 134], "bfgs_conv": 27, "bi": 22, "bias_list": 7, "binari": [4, 5, 11, 16, 22, 31], "binarytounari": [10, 15], "binarytounarybit": [15, 16], "binomsum": [25, 27], "bit": [4, 11, 12, 16, 17, 31], "bit_list": [10, 12], "bitbucket": 6, "bits_rot_given": 11, "bitsiz": [15, 16, 17], "bitstr": 16, "bitwis": 16, "bitwisezrot": [10, 15], "black": 6, "bliss": 14, "blob": 30, "bloch": 22, "block": [5, 14, 16, 132], "block_encod": 28, "blockencod": [0, 2, 9, 10], "blockencoding_select_prepar": [0, 10, 11], "bloq": [4, 16], "bloqbuild": 16, "bloqcountt": 16, "bodi": [11, 16], "bohr": 24, "bold": 19, "bool": [4, 11, 12, 14, 16, 22, 23, 29, 31], "boolean": [12, 31], "bork": 134, "both": [13, 31], "bottom": 7, "bound": [4, 11, 22, 31], "boundari": [11, 14, 19], "box": [16, 22], "bp": 22, "bphi": [15, 16, 17], "bpown": [10, 22], "br": [11, 15, 16, 17], "branch": [6, 133], "break": [5, 7, 30, 134], "breakpoint": 7, "brief": 33, "briefli": 0, "broader": 0, "broken": 6, "browser": 33, "bsd": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "bth": 16, "btree": 16, "bug": [5, 7, 134], "bugfix": [5, 134], "build": [10, 16, 19, 30, 132, 134], "build_call_graph": [15, 16], "build_cel": [10, 19], "build_circuit_repeat_different_kei": [31, 32], "build_circuit_rotations_qrom": [31, 32], "build_circuit_singl": [31, 32], "build_composite_bloq": [15, 16], "build_dtable_dict": [10, 24], "built": [6, 7, 12, 22, 33, 132], "bump": 134, "burger": 0, "burgers_nonlinear": [10, 19], "bx0": 22, "bx1": 22, "by0": 22, "by1": 22, "byte": 22, "b\u03c9": 22, "c": [0, 4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "c1": 16, "c10": 11, "c11": 16, "c24": 11, "c27": 11, "c31": 11, "c41": 11, "c_0": 22, "c_i": [10, 24], "c_xzx": [10, 24], "c_z": [10, 24], "c_zz": [10, 24], "cach": [4, 29], "calc_traj_op_wfn": [10, 19], "calcul": [0, 4, 11, 12, 14, 22, 106], "calculate_bia": [10, 22], "calculate_skew": [10, 22], "call": [4, 7, 11, 16, 22, 31, 106, 133, 134], "call_graph": 16, "callabl": 31, "caller": [4, 22], "can": [0, 4, 6, 7, 14, 16, 22, 29, 30, 31, 33, 133, 134], "candid": 22, "candidate_generator_direct": [10, 22], "candidate_generator_fallback": [10, 22], "cannot": [5, 31], "canon": 4, "capab": 0, "capabl": [0, 4], "captur": [14, 134], "carleman": [0, 5, 16], "carleman_linear": [10, 11], "carlemanlinear": [9, 10], "carri": [11, 16, 17], "cascad": 16, "cascading_transl": [10, 15], "cascadingtransl": [15, 16], "cascadingunari": [15, 16], "case": [4, 16, 22, 32], "catalysi": 0, "catalyst": 0, "catalyt": 16, "catalyticallycontrolledhadamard": [10, 15], "caus": [29, 30], "ccx": [4, 22], "ccz": [4, 22], "cd": [33, 133], "cdot": 16, "cell": [10, 14, 19], "cell_complex": [9, 10], "cell_subtyp": 14, "cell_volum": 14, "cellcomplex": [10, 19], "center": 22, "certain": [4, 16], "certainli": 6, "cfs_set": 27, "chang": [4, 6, 7, 30, 133, 134], "changelog": 134, "charact": 29, "charg": 16, "cheb_poli": [25, 27], "chebyshev": 0, "chebyshev_func_m": [25, 27], "chebyshev_m": [25, 27], "chebyshevpoli": [10, 25], "check": [6, 16, 17, 29], "check_common_angl": [10, 22], "check_common_cas": [10, 22], "chemic": 0, "chemical_phase_estim": [31, 32], "chemicalhamiltonian": [0, 9, 10, 11], "chemistri": [11, 16], "chemistry_inst": 31, "child": 18, "children": 16, "childsselectv": [15, 16], "choic": [4, 6], "chore": 134, "chosen": [14, 16], "circ": 31, "circuit": [0, 5, 9, 10, 11, 12, 28, 29, 30, 31, 32, 97, 132], "circuit1": 31, "circuit2": 31, "circuit_compar": [10, 31], "circuit_decompose_multi": [4, 10, 31], "circuit_decompose_onc": [4, 10, 31], "circuit_decomposit": [4, 9, 10], "circuit_el": 31, "circuit_in": 31, "circuit_ord": 22, "circuit_precis": [4, 15, 22, 29, 31], "circuitoper": 31, "circumst": 16, "circut": 30, "cirq": [4, 5, 12, 16, 17, 22, 28, 29, 30, 31, 32, 97, 106], "cirq_ft": [16, 30], "cirq_oper": 29, "cirq_transform": [4, 9, 10], "cite": [0, 16, 132], "clam": [9, 10, 14, 132], "class": [0, 2, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 94, 99, 102, 103, 105, 106, 108, 110, 111, 113, 114, 116, 117, 118, 119, 122, 125, 128, 129], "classic": [2, 3, 4, 5, 16, 22], "classical_control": 22, "classical_data": 16, "classicaldatastoreread": 16, "classicallycontrolledoper": 12, "classifi": 29, "classmethod": [16, 22], "claus": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "clean": [6, 31, 33, 134], "cleanup": [10, 19], "clear": 4, "clear_resourc": [10, 15], "click": 7, "cliff_t_cx": [10, 31], "cliff_t_cx_rot": [10, 31], "cliff_t_cx_rot_toff": [10, 31], "clifford": [5, 14, 16, 22, 30, 31, 97, 98, 100, 106, 132], "clifford_g": [9, 10], "clifford_list": 22, "clifford_part": [4, 31], "clifford_plus_t_direct_transform": [4, 5, 10, 22], "clifford_plus_t_g": [4, 22], "clifford_plus_t_op": 22, "clone": 133, "close": [5, 10, 24], "close_grid": [10, 24], "close_hamiltonian": [10, 24], "clscl": 31, "cm_0": 19, "cm_p": 19, "cm_prop": [10, 19], "cm_simul": [10, 19], "cnot": 5, "co": 16, "code": [3, 5, 7, 16, 30, 33, 133, 134], "coder": 7, "coeff": [19, 25, 27], "coeffici": [11, 14, 16], "coher": 16, "collabor": 33, "collis": 0, "color_nod": 19, "com": [7, 30, 133], "combin": [0, 16, 133], "come": [4, 31, 134], "comma": 133, "command": 133, "comment": [4, 134], "commit": [133, 134], "common": [17, 29, 31], "common_g": 28, "commun": 4, "commut": 29, "compar": [5, 17, 30, 134], "comparison": 30, "compat": 30, "compil": 4, "complement": 16, "complet": [4, 16, 29, 134], "complex": [4, 16, 22, 29, 30], "complex_inst": [10, 29], "complic": 134, "compon": [11, 16], "compos": [4, 14], "compress": 22, "comput": [14, 16, 22, 31], "compute_data_l": [10, 11], "compute_hamiltonain_angl": 5, "compute_x_point": [10, 22], "compute_y_point": [10, 22], "con": [10, 19], "conclus": [22, 32, 97, 98, 100, 104, 106, 107, 133], "concret": 134, "conda": [7, 133], "condens": 5, "condit": [0, 14, 16, 17, 22], "configur": [31, 133], "confirm": 4, "conflict": 6, "conform": 6, "conftest": [10, 22, 31], "conj": [10, 22], "conj2": [10, 22], "conjug": [16, 22], "consid": [16, 134], "consist": [4, 6, 17, 22], "consol": 7, "consolidate_str": [10, 19], "constant": 134, "constitu": [4, 16], "construct": [0, 16], "constructbooleantre": [15, 16], "constructor": 16, "contain": [0, 5, 10, 11, 12, 14, 16, 22, 31, 33], "content": [8, 134], "context": [4, 11, 16, 28, 29, 31], "continu": [29, 33, 134], "contract": [22, 32, 97, 98, 100, 104, 106, 107, 133], "contribut": [3, 33, 132], "control": [0, 4, 5, 11, 15, 16, 17, 22, 31, 33], "control_qubit": 16, "control_regist": [10, 11, 15, 16, 28], "control_v": [11, 16, 28], "controlledprepareuniformsuperposit": [15, 16], "controlleduniformsuperposit": [10, 15], "conv": [19, 31], "conveni": 0, "convent": [0, 16, 25, 28], "converg": 14, "convers": [0, 5, 9, 10], "convert": [4, 10, 16, 19, 22, 30, 31], "convert_hamiltonian_terms_to_oper": [15, 16], "convert_projector": [10, 19, 31], "convert_sparse_term": [10, 31], "convert_to_dense_pauli_str": [10, 31], "convert_to_so3": [10, 22], "convert_to_zsqrti": [10, 22], "convert_to_zsqrti_increase_k": [10, 22], "cool_new_modul": 6, "coord": [19, 24], "coordin": [0, 11, 14, 16], "copi": 7, "copyright": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "core": 5, "correct": [10, 16, 22, 31], "correctli": [7, 17, 30], "correspond": [11, 14, 16, 22, 30, 31], "cosin": 4, "cost": [4, 16, 17], "could": [22, 29, 133], "coulomb": [0, 16], "count": [4, 5, 15, 16, 17, 22, 29, 30, 31], "count_clifford_and_rot": [10, 31], "count_exact": [10, 15, 16], "count_qubit": [10, 31], "count_rotation_g": [10, 22], "count_t_gat": [10, 31], "coverag": [5, 6, 17], "cp": 22, "creat": [6, 11, 18, 32, 133, 134], "create_operator_op": [10, 22], "creation": 14, "criteria": 31, "csv": 31, "ctl": 16, "ctl0": 16, "ctl1": 16, "ctl_h_gate": 28, "ctl_q": [16, 31], "ctl_qubit": 16, "ctl_s_gate": 28, "ctl_z_gate": 28, "ctrlop": [15, 16], "ctype": 19, "cubiclattic": [10, 19], "current": [0, 2, 4, 7, 11, 14, 16, 17, 22, 29, 32, 133, 134], "custom": [4, 22, 31, 106, 132], "custom_gateset": 29, "custom_gateset_decomposition_catchal": [10, 29], "custom_index_funct": 19, "cut": [4, 14, 22, 134], "cutoff": 16, "cv": [15, 16], "cycl": 29, "cyclic": 16, "cyclic_shift": [10, 15], "cyclicshift": 17, "cyclicshiftpermut": [15, 16], "c\u03c9": 22, "d": [4, 7, 15, 16, 19, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "dag": [9, 10], "dag_creat": [10, 29], "dagger": 22, "dagger_": 14, "data": [4, 11, 12, 14, 16, 17, 19, 29], "data_or_shap": 16, "data_to_uncomput": 16, "dataandkeycondit": [15, 16], "dataclass": 31, "datafram": 12, "dd": 134, "debug": [12, 16, 31], "debugg": 132, "debugprint": [15, 16], "declar": 5, "decomp_level": [4, 10, 15, 29], "decomp_mixin": [10, 22], "decompos": [4, 5, 10, 15, 16, 22, 29, 31, 97, 106], "decompose_bloq": 16, "decompose_ccz": [10, 31], "decompose_cirq_directcpt": [10, 22], "decompose_diagonal_cirq": [10, 22], "decompose_from_regist": [10, 11, 15, 16, 28], "decompose_multi": 4, "decompose_onc": [10, 31], "decompose_op": [10, 31], "decompose_protocol": 31, "decompose_rot": [15, 30, 31], "decomposit": [5, 16, 17, 22, 29, 30, 31, 100, 106, 132], "decompositioncontext": [4, 11, 16, 29, 31], "decreas": [5, 11], "deduc": 16, "def": 7, "default": [4, 14, 15, 16, 17, 19, 22, 30, 31], "defens": [22, 32, 97, 98, 100, 104, 106, 107, 133], "defin": [0, 2, 4, 16, 22, 29, 30, 31, 32, 97, 98, 100, 104, 106, 107, 133], "definit": [0, 22, 134], "deg": 27, "delet": 134, "delete_sit": [10, 19], "delete_term": [10, 19], "deliv": [22, 32, 97, 98, 100, 104, 106, 107, 133], "delta": 22, "demonstr": 0, "denomin": 22, "denot": 16, "depend": [4, 22, 29, 31, 33, 133], "dependencyedg": [10, 29], "deprec": 5, "depth": [4, 16, 17, 22, 29], "depthtoff": 22, "der": 0, "deriv": [4, 16, 132], "describ": [4, 11, 12, 16, 22, 31, 97, 104, 107], "descrimin": [10, 22], "descript": [0, 6, 7, 14, 134], "desir": [4, 5, 11, 14, 16, 22], "detail": [0, 4, 6, 16, 22, 29, 32, 97, 98, 100, 104, 106, 107, 133], "determin": [0, 4, 10, 14, 16, 22, 29, 31], "determine_gate_precis": [10, 22], "determine_shift_oper": [10, 22], "dev": [133, 134], "develop": [4, 6, 7, 16, 133], "deviat": [4, 22, 31], "df": 5, "df_": [10, 12], "df_error_threshold": [11, 14], "df_fragment": [10, 14], "df_innerprepar": [10, 15], "df_outerprepar": [10, 15], "df_rotationsblock": [10, 15], "df_util": [9, 10], "dfar": [22, 32, 97, 98, 100, 104, 106, 107, 133], "diagon": [0, 16], "diagonal_bitstr": [10, 15], "diagonalbitstr": [15, 16, 17], "dialogu": 6, "diamond": 22, "dict": [12, 15, 16, 22, 29, 31], "dictionari": [4, 29, 31], "diff": 33, "differ": [0, 2, 4, 16, 17, 22, 30, 134], "differenti": 0, "diffphi": [25, 26], "digest": [4, 31], "digit": [11, 134], "dim": [19, 20, 31], "dimens": [14, 16, 19], "dimension": [0, 22], "diophantin": 22, "direct": [16, 29], "directli": [31, 133, 134], "directori": [6, 7, 32, 33, 133], "dirti": 31, "discov": 4, "discuss": [0, 4, 31], "disentangle_recurs": [15, 16], "disk": [22, 104], "distanc": [4, 22, 31], "distance_dict": [10, 24], "distribut": [4, 22, 29, 31, 32, 97, 98, 100, 104, 106, 107, 133], "divid": [4, 10, 22, 31], "divide_sqrt2": [10, 22], "do": [4, 6, 7, 12, 16, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133, 134], "do_negative_z_rot": [15, 16], "do_norm": 14, "do_pad": [14, 19], "do_prepar": 11, "do_prepare_invers": 11, "doc": 134, "doclear": 31, "docstr": 33, "document": [16, 31], "doe": [6, 11, 12, 29, 32, 134], "doesn": [2, 3, 29, 30, 31], "doi": 132, "don": 133, "done": [4, 11, 16, 134], "dopad": 14, "doubl": [0, 5, 11, 14, 16, 19], "doublefactor": [0, 9, 10, 16], "down": [4, 14, 22, 134], "dozen": 7, "dp": 22, "dpw": 0, "dpw_jw_alternating_spin": [10, 24], "dpw_to_pw_cutoff": [10, 24], "drastic": 30, "draw": [10, 29], "draw_lattic": [10, 14], "draw_lattice_2d": [10, 19], "drop": [19, 133], "dropdown": 7, "dt": 19, "dtype": [11, 16, 22], "dual": 0, "due": [4, 5, 11, 22, 134], "dummi": 19, "dummy_sit": 19, "duplic": 4, "dure": 29, "dynam": [0, 5], "e": [0, 6, 16, 19, 22, 31, 107, 133], "e_cut": 24, "e_cut_off": 14, "e_max": 19, "e_min": 19, "each": [4, 5, 6, 11, 14, 16, 22, 29, 31], "earli": 6, "easi": [4, 6], "easier": [4, 31], "easili": 5, "ed": 12, "edg": [10, 16, 19, 29], "edit": 133, "edu": [4, 22, 31, 97, 100, 133], "effect": 29, "effici": 16, "effort": 6, "eft": 16, "eg": 22, "eigendecomposit": 11, "eigenvalu": 11, "either": [4, 16, 22, 29, 31], "electron": [5, 14, 16, 30], "electronic_structure_lineart_encod": [31, 32], "electronicstructur": [0, 9, 10, 11], "element": [10, 16, 22, 31], "ell": 16, "ellips": [9, 10], "ellipse1": 22, "ellipse2": 22, "els": [2, 3, 31], "empti": [10, 29, 134], "enabl": [4, 5], "encod": [4, 5, 11, 14, 16, 28, 30, 31, 132], "encodid": 16, "end": [4, 16, 22, 29, 31, 134], "end_btre": 16, "energi": [0, 11, 14, 16], "energy_error": 11, "enforc": [6, 30], "engin": [4, 22, 32, 97, 98, 100, 104, 106, 107, 133, 134], "enough": 17, "ensur": 6, "enterpris": 6, "entir": [4, 5, 12, 16, 22, 29], "entri": [4, 16, 22, 29, 100], "entropi": 6, "enum": 11, "enumer": [22, 104], "env": 7, "environ": 7, "ep": [11, 20, 22, 25, 26, 28], "eps0": 31, "eps_m": 11, "eps_r": 11, "eps_t": 11, "epsilon": [11, 20, 22, 27], "eq": [11, 16, 30], "equ": 6, "equal": [5, 11, 16, 22], "equalitytest": [10, 15], "equat": [0, 14, 16, 22, 107], "equival": [11, 16, 22, 31], "erf": [25, 27], "erf_shift": [25, 27], "err": 22, "err_tgt": 27, "error": [4, 5, 7, 11, 22, 29, 31, 33], "essenti": 29, "estim": [4, 5, 11, 12, 22, 31, 132], "estimate_phas": [10, 12], "estimate_resourc": [4, 5, 10, 31], "estimate_t_count_direct": [22, 23], "estimate_t_count_fallback": [22, 23], "eta": [15, 16, 22], "etc": [4, 29, 31, 33, 134], "eth": 11, "eval": [25, 27], "eval_approx": [25, 27], "eval_chebyshev": [25, 27], "eval_chebyshev_strict": [25, 27], "eval_func": [25, 27], "eval_sequ": [10, 19], "eval_sequence_qsvt": [10, 19], "evalu": 6, "even": [16, 25, 27, 31], "event": 29, "eventu": 4, "everi": [22, 32], "exact": [4, 15, 16, 22, 97, 100], "exact_decomp": [9, 10], "exact_decomp_compress": [10, 22], "exact_decomp_compressed_m": [10, 22], "exact_decomp_to_matrix_str": [10, 22], "exact_decomp_to_qasm": [10, 22], "exactli": [4, 22], "exampl": [0, 4, 5, 7, 16, 22, 33], "examplefmatric": [10, 15], "except": 31, "excit": 6, "exclud": 29, "execpt": 31, "execut": [4, 7, 16, 22, 29, 133], "execution_numb": [17, 32], "execution_tim": 29, "exercis": 23, "exhaust": 0, "exist": [6, 7, 17, 22, 29, 31, 32, 97, 98, 100, 104, 106, 107, 133], "exmapl": 5, "exp": [16, 22], "expand": [0, 4, 10, 22, 25], "expand_composit": 22, "expand_projector": [10, 19], "expanded_circuit": 22, "expans": [0, 10, 25], "expansion_coeff": [10, 25], "expansion_degre": [10, 25], "expansion_error": [10, 25], "expansion_ev": [10, 25], "expansion_method": 25, "expect": [17, 32], "expedi": 7, "experi": 134, "experiment": 4, "explain": 16, "explicit": 16, "explicitli": 4, "expon": [16, 22], "exponenti": 16, "exponential_decay_even": [25, 27], "exponential_decay_odd": [25, 27], "expop": [15, 16], "export": [5, 16], "expr": [16, 22], "express": [0, 16, 22, 32, 97, 98, 100, 104, 106, 107, 133], "extend": 3, "extens": [16, 31], "extern": 29, "extra": 16, "extra_reg": 16, "extra_regist": [10, 11, 15, 16], "extrac_info_from_sim": [10, 12], "extract": 12, "extract_info_from_sim": [10, 12], "f": [10, 16, 25, 31], "f0_oper": [15, 16], "f0_oracl": [10, 14], "f1": 16, "f1_oper": [15, 16], "f1_oracl": [10, 14], "f2_oper": [15, 16], "f2_oracl": [10, 14], "f_cosin": [10, 25], "f_exp_fourier_respons": [10, 25], "f_oracl": [10, 11], "f_p": 16, "f_sine": [10, 25], "f_tgt": 27, "f_val": 31, "f_x": 31, "fa8702": [22, 32, 97, 98, 100, 104, 106, 107, 133], "facilit": 0, "fact": 6, "factor": [5, 11, 16, 22, 132], "factori": 16, "factual": 134, "fail": [5, 31], "failur": [4, 16, 31], "fakeoper": [10, 15], "fall": 31, "fallback": [4, 16, 22], "fallback_decompos": 31, "fals": [4, 7, 11, 12, 14, 15, 16, 17, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31], "familiar": 6, "fan": [10, 19], "far": 7, "faster": [5, 22], "fault": [11, 16], "favor": 5, "fcr": [10, 19], "featur": [4, 7, 29, 134], "feb": [22, 32, 97, 98, 100, 104, 106, 107, 133], "feed": 4, "fermat": 22, "fermi": [0, 10, 14, 19, 32], "fermi_hubbard_dynam": [31, 32], "fermi_hubbard_square_encod": [0, 9, 10], "fermihubbard": [0, 10, 14], "fermihubbardnnn": [10, 14], "fermihubbardsquar": [10, 11], "fermion": [0, 10, 11, 14], "fermionic_lineart": [0, 10, 11], "fermionic_model": [0, 9, 10], "fermionicprepare_lineart": [0, 15, 16], "fermionicselect_lineart": [0, 15, 16], "fermionoper": 13, "fermionprepar": [15, 16], "fermionpreprepar": [15, 16], "fermionselect": [15, 16], "field": 0, "fig": [0, 16], "figur": [11, 16], "file": [7, 11, 14, 31, 33], "filenam": [14, 19, 24, 27, 29, 31], "filenameg": 14, "filenameh": 14, "filepath": 15, "find": [7, 22, 32, 33, 97, 98, 100, 104, 106, 107, 133], "find_bounding_ellipse_direct": [10, 22], "find_bounding_ellipse_fallback": [10, 22], "find_ellipse_bounding_box": [10, 22], "find_grid_oper": [10, 22], "find_k": [10, 22], "find_prime_factor_z_omega": [10, 22], "find_prime_factors_integ": [10, 22], "find_prime_factors_z_sqrt2": [10, 22], "find_u_candidates_direct": [10, 22], "finish": [10, 29], "finit": 11, "firmwar": [22, 32, 97, 98, 100, 104, 106, 107], "first": [4, 11, 14, 16, 22, 29, 133, 134], "first_done_tim": 29, "first_two_item": [10, 31], "firstquant": [9, 10, 14], "fit": [0, 2, 3, 10, 25], "fitter": [0, 10, 25], "fix": [3, 4, 5, 134], "fixtur": 23, "fixup": 16, "fixuptableqrom": [10, 15], "fj": 16, "flag": [4, 12, 16, 17, 30, 133], "flag_ancilla": 16, "flag_dim": 16, "flag_equ": 16, "flag_ineq": 16, "flag_minus_zero": 16, "flag_nu": 16, "flaggedprepareuniformsuperposit": [10, 15], "flagzeroasfailur": [10, 15], "flexibl": 0, "flip": 16, "float": [4, 5, 11, 12, 14, 16, 17, 22, 23, 29, 31], "fo": 31, "folder": 33, "folk": 134, "follow": [0, 4, 7, 16, 22, 31, 33, 133, 134], "font_weight": 19, "foper": [10, 14], "forc": [22, 32, 33, 97, 98, 100, 104, 106, 107, 133], "force_det_on": [10, 22], "forceadd": 29, "form": [4, 6, 11, 14, 16, 22, 29, 31, 97, 100, 134], "format": [4, 16, 29], "formula": 14, "forthcom": 134, "found": [22, 33], "four": 22, "fourier": 0, "fourier_respons": [10, 25], "fpl_coeff": 16, "fpl_sign": 16, "fr": 25, "frac": [14, 16], "frame": 7, "framework": 0, "free": [29, 31, 134], "free_instruct": [10, 29], "free_resourc": [10, 29], "friendli": 4, "frobeniu": 14, "from": [0, 4, 5, 6, 7, 11, 12, 14, 16, 17, 22, 29, 30, 31, 100, 132, 133, 134], "from_ax": [10, 22], "from_measur": [10, 31], "from_tf_arrai": [15, 16], "from_tuv_arrai": [15, 16], "from_z_sqrt2": [10, 22], "frozen": 134, "frozenset": 22, "ft": [4, 5, 30], "full": [4, 10, 12, 16, 29, 134], "full_profil": [4, 29], "fulli": [4, 5, 22, 134], "func": [10, 25], "function": [0, 2, 3, 4, 12, 16, 17, 22, 29, 31, 32, 36, 41, 52, 54, 64, 75, 78, 80, 85, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 112, 115, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134], "further": [4, 29, 31], "futur": [4, 5, 29, 30], "future_submodul": 6, "fwlink": 7, "g": [6, 14, 22, 133], "g_0": 16, "g_minu": [10, 22], "g_plu": [10, 22], "gamma": [14, 20], "gancilla": 31, "gate": [4, 5, 11, 12, 15, 16, 17, 18, 22, 28, 29, 30, 31, 97, 106, 132], "gate_approxim": [9, 10], "gate_complex": [9, 10], "gate_count": [10, 22, 29], "gate_decomp": [4, 9, 10], "gate_nam": 31, "gate_op": 31, "gate_precis": [4, 15, 16, 22, 31], "gate_sequ": [4, 31], "gatecomplex": [10, 31], "gateoper": [17, 31], "gateset": [4, 5, 22, 29, 31, 100], "gatewithregist": [0, 11, 14, 16, 28], "gaussian": [0, 25, 27], "gcd": 22, "gen_pre_prepar": [15, 16], "gener": [2, 3, 4, 5, 10, 12, 14, 16, 17, 25, 26, 27, 31, 32, 33, 132, 134], "generate_circuit": [10, 12], "generate_qsp_circuit": [10, 15], "generate_qubit": [10, 12], "generate_qubits_from_s": [10, 15], "generate_test_unitari": [10, 12], "generator_decompos": [4, 10, 31], "generatortyp": 22, "geom": 19, "geometri": [9, 10, 14], "geometry_angstrom_to_bohr": [10, 19], "geometry_fil": [11, 14], "get": [4, 11, 12, 16, 22, 31, 32, 33, 98, 133], "get_alpha": [10, 14, 19], "get_approx_error": [10, 11], "get_approximate_t_depth": [10, 22], "get_avail": [10, 29], "get_cent": [10, 19], "get_chebyshev_domain": [25, 27], "get_clifford_count": [10, 22], "get_coeff_norm": [10, 19], "get_common_gate_op": [16, 17], "get_condition_format_str": [15, 16], "get_data_depend": [10, 29], "get_decomp_level": [10, 15], "get_equiv_class": [10, 22], "get_givens_angl": [10, 11], "get_hdf5": [9, 10], "get_index_set_zigzag": [10, 19], "get_instruction2node_map": [10, 29], "get_measurement_result": [10, 31], "get_minmax": [10, 19], "get_molecular_hamiltonian": 14, "get_n_m": [10, 11], "get_n_r": [10, 11], "get_n_t": [10, 11], "get_nonzero_match": [10, 19], "get_norm": [10, 14], "get_num_plane_wav": [10, 14], "get_num_pot_sol": [10, 22], "get_num_pot_sols_sc": [10, 22], "get_num_rotation_g": [10, 22], "get_par": [10, 22], "get_params_from_geometry_fil": [10, 14], "get_partial_st": [16, 17], "get_pt": [25, 27], "get_pts_m": [25, 27], "get_qsp_oper": [10, 19], "get_qsp_operators_lcu_r": [10, 19], "get_qsp_phase_op": [10, 19], "get_qsp_signal_op": [10, 19], "get_qsp_signal_st": [10, 19], "get_qubits_by_kei": [10, 31], "get_resouc": [10, 22], "get_resource_st": [10, 30], "get_ring_elts_direct": [10, 22], "get_ring_elts_fallback": [10, 22], "get_state_vector": [10, 31], "get_steps_from_logep": [25, 26], "get_syl": [10, 22], "get_t_count": [10, 22], "get_t_counts_from_rot": [10, 15, 31], "get_term": [10, 19], "get_unit": [10, 19], "get_vector_i": [19, 20], "getangleandqubit": [16, 17], "getangleandqubits2": [16, 17], "getencod": [0, 9, 10], "gethamiltonianandqubit": [16, 17], "gethamiltonianandqubits2": [16, 17], "getinst": [9, 10], "getlinequbitindexmap": [10, 31], "getlogepsilon": [25, 26], "getoper": [16, 17], "getqubit": [16, 17], "getqubitfrommap": [10, 31], "getqubits2": [16, 17], "gett_arrai": [10, 11], "getterm": [10, 11], "getu_arrai": [10, 11], "getunitari": [16, 17], "getv_arrai": [10, 11], "getvector": [16, 17], "git": [33, 133, 134], "github": [6, 30, 33, 133, 134], "gitlab": 6, "given": [4, 11, 14, 16, 22, 29, 31, 107], "global": [22, 29], "global_ancilla_manag": [9, 10], "globalqubitmanag": [10, 31], "go": [7, 133], "goal": [30, 134], "goe": 134, "good": 134, "googl": [5, 30], "govern": [22, 32, 97, 98, 100, 104, 106, 107, 133], "gradient": [11, 16], "gradient_optim": [25, 27], "graph": [16, 29], "great": 33, "green": 7, "grid": [14, 16, 22], "grid_op": 22, "grid_oper": [9, 10], "gridoper": [10, 22], "gridpt_to_id": [10, 24], "ground": 0, "grow": 6, "gse": [5, 12], "gsee": 0, "gtb": 31, "gto": 0, "gu": 22, "guarante": 31, "gui": 7, "guid": 133, "guidelin": 6, "h": [4, 10, 14, 19, 22, 31], "h2": 32, "ha": [4, 6, 7, 16, 22, 29, 31, 134], "had": 22, "hadamard": [12, 16, 17, 22], "ham": [14, 19, 24], "ham_from_pauli_tupl": [10, 19], "ham_input": 31, "ham_op": 13, "ham_term": 16, "ham_typ": 31, "hamiltonian": [5, 9, 10, 11, 14, 15, 16, 32], "hamiltonian_encod": [10, 15], "hamiltonian_tensor": [10, 14], "hamiltonian_term": 16, "hamiltoniancoeffici": [10, 24], "haml": 31, "handl": [29, 30], "handle_scalar": [25, 27], "handler": 0, "happen": [4, 33], "hard": 6, "have": [4, 6, 7, 12, 16, 22, 29, 134], "hdf5": 14, "head": [31, 134], "header": 31, "heisenberg": [0, 10, 14, 21], "heisenberg_phase_estim": [31, 32], "help": [2, 3, 31], "helper": [0, 5, 16, 31], "here": [16, 134], "hesit": 133, "heurist": [22, 31], "high": 6, "higher": 4, "highest": 22, "hold": 12, "homogen": 0, "hood": 4, "hook": 23, "hop": 14, "hope": 4, "host": 33, "hot": 16, "hover": 7, "how": [0, 4, 12, 16, 22, 29, 31, 33], "ht": 22, "html": 33, "http": [4, 7, 11, 16, 22, 30, 31, 97, 100, 132, 133], "hubbard": [0, 14, 32], "hundr": 7, "hundred_g": [15, 18], "hypercontract": [0, 16], "i": [4, 6, 7, 10, 11, 12, 14, 15, 16, 17, 22, 29, 30, 31, 32, 33, 97, 98, 100, 104, 106, 107, 132, 133, 134], "i2pi": 16, "i_low": 27, "i_upp": 27, "icon": 7, "id_to_gridpt": [10, 24], "ident": [4, 31], "identifi": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "idx": [24, 31], "ie": [4, 11, 16], "iff": 16, "ig_plot_converg": [10, 31], "ig_plot_fit": [10, 31], "ig_plot_scalar_qsp": [10, 31], "ight": 16, "ignor": [4, 19, 22, 33], "ignorelen": 31, "ii": [11, 16], "im": 16, "image_typ": 29, "immedi": [16, 134], "implement": [0, 4, 5, 11, 12, 14, 15, 22, 29, 31, 106], "implent": 6, "impli": [31, 134], "implicitli": 4, "import": [6, 7, 33, 133], "import_export_and_print": 5, "imprecis": 11, "improv": [5, 16], "in_list": 31, "in_qubit": 16, "includ": [0, 4, 5, 14, 16, 22, 29, 31], "include_classical_bit": 12, "include_head": 31, "incom": [22, 29], "incomplet": [5, 29], "increas": [4, 10, 22], "incredibli": 33, "increment": 134, "incrementbooleantre": [15, 16], "index": [16, 19, 29, 31, 33, 132], "indic": [4, 12, 16, 19, 22, 31], "individu": 4, "inequ": [11, 16], "inflat": 5, "info": [12, 31], "inform": [4, 7, 14, 16, 29], "informatoin": 12, "infrastructur": [0, 6], "infrom": 12, "init_st": [10, 12], "init_theta": 22, "initi": [4, 12, 16, 17, 22, 31, 106], "initial_st": 16, "inlist": 31, "inner": 16, "inner_prep_extra_regist": [10, 11], "innerprepar": [15, 16], "innt": 11, "input": [4, 5, 11, 16, 17, 32], "inspect": 7, "inst": 29, "inst_map": 29, "instal": [33, 132], "instanc": [5, 11, 12, 14, 16, 28, 132], "instanti": [13, 14, 18], "instead": [4, 5, 133], "institut": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "instruct": [9, 10, 22, 33], "int": [4, 11, 12, 14, 15, 16, 17, 22, 23, 28, 29, 30, 31], "int32": 16, "int_": 16, "int_i": 17, "int_x": 17, "integ": [16, 17, 22], "integr": [0, 6], "integratedtermin": 7, "intellisens": 7, "intent": 31, "interact": 14, "interactionoper": 14, "intercept": 22, "intercept_decompos": [10, 31], "intercepting_decompos": 31, "interest": [4, 11, 14, 31], "interfac": 29, "intermedi": 31, "intern": [5, 31, 132], "interrog": 4, "interv": [22, 23], "introduc": [4, 30, 31, 134], "introduct": 5, "invalid": [5, 16, 32], "invers": [5, 10, 17, 22, 25, 27], "invert": [16, 19], "invert_select": 11, "involv": 16, "ipynb": [0, 4, 16, 29, 30], "is_adjoint": [15, 16], "is_directcpt_g": [10, 22], "is_fermion": [10, 31], "is_filtered_g": [10, 22], "is_gate_clifford_plus_t": [10, 22], "is_lcu": [10, 31], "is_odd": [10, 22], "is_positive_semi_definit": [10, 22], "is_prim": [10, 22], "is_reduc": [10, 22], "isi": 133, "islinux": [10, 31], "ismac": [10, 31], "isn": 31, "isol": 0, "issu": [4, 5, 6, 17, 134], "iswindow": [10, 31], "item": 19, "iter": [16, 22, 31], "ith": 16, "its": [4, 16, 22, 29, 31], "iv": 11, "izt": 16, "i\u03b8": 22, "i\u03c0": 22, "i\u03c6": 22, "j": [12, 14, 16], "j1": 14, "j2": 14, "ja_co": [25, 27], "ja_sin": [25, 27], "jenkin": 6, "jira": 134, "jordan": 32, "json": 7, "jth": 16, "julia": 5, "junk_p": 16, "junk_regist": [10, 11, 15, 16, 28], "jupyt": 33, "just": [3, 4, 5, 22, 29], "justmycod": 7, "jw": 5, "k": [10, 11, 16, 17, 19, 20, 22], "kagomelattic": [10, 19], "kamada_kawai": [14, 19], "kappa": 27, "keep": [4, 6, 10, 15, 16, 30, 31, 134], "keep_bits": [11, 15, 16], "keep_data": [15, 16], "keep_indic": 17, "kei": [15, 16, 31], "kept": 31, "kernel": 0, "ket": 30, "keyword": [4, 12, 31], "kinet": 16, "know": [4, 16, 22], "knowledg": 33, "known": [4, 22], "kwarg": [11, 12, 14, 15, 16, 17, 22, 23, 25, 28], "l": [11, 16], "l1_norm_of_coeff": [15, 16], "l_": 16, "l_n": 16, "l_x": 20, "label": [6, 19, 134], "label_to_pauli": [10, 19], "label_typ": 19, "laboratori": 132, "ladder": 16, "ladybug": 7, "lam": [10, 11, 14], "lam_tp": [10, 11], "lam_u": [10, 11], "lam_v": [10, 11], "lambda": [11, 22], "lambda_": 16, "lambda_t": 11, "lambda_u": [11, 16], "lambda_v": [11, 16], "lambda_zeta": [15, 16], "langl": [14, 16], "langle2": 16, "larg": [4, 5, 6, 16, 22], "last": [22, 29, 134], "later": [4, 22, 133, 134], "latter": 4, "lattic": [0, 9, 10, 14], "lattice_definit": [9, 10, 14], "lattice_to_op": [10, 19], "latticeinst": [0, 9, 10], "launch": 7, "layout": [14, 19], "lceil": 16, "lcu": [0, 31], "lcu_util": 16, "lcucorrect": [10, 11], "lcuprep": [10, 11], "lead": 16, "leading_t": [4, 31], "learn": [7, 33], "least": [16, 29], "leav": 31, "left": [7, 16, 22, 29], "legaci": [0, 5], "legacy_resource_profil": [10, 31], "lemma": 16, "len": [7, 12], "length": [4, 14, 16, 22, 31], "less": [11, 16, 22], "less_than_ancilla": 16, "less_than_equal_ancilla": 16, "let": [4, 16, 22, 30, 134], "level": [4, 15, 16, 29, 31], "leverag": [5, 16], "librari": 132, "licens": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "lightweight": 134, "like": [7, 22, 133, 134], "limit": [5, 16], "linalg": 16, "lincoln": 132, "line": [4, 7, 22, 31], "linear": [0, 5, 16, 22, 30], "linearization_tool": [0, 10, 19], "lineart": [0, 5, 9, 10, 14], "linequbit": [16, 31], "link": [0, 6, 7, 29, 134], "linkid": 7, "linux": 31, "list": [0, 4, 7, 11, 12, 14, 16, 17, 19, 22, 29, 31, 98, 133], "list_in": 31, "listifi": [10, 19], "littl": 33, "live": [6, 7], "ll": 7, "lmax": 20, "load": [10, 11, 15, 134], "load_coordin": [10, 19], "local": [0, 6, 33, 133, 134], "localchemistri": 0, "log": 7, "log2": [4, 16, 22, 31], "log_2": 16, "logd": 16, "logl": 16, "loglen": [10, 31], "logm_val": [15, 16], "logn": 16, "long": 29, "look": 7, "lookup": 16, "loop": [4, 16], "lot": [2, 3, 33], "lotka": 0, "low": 16, "lower": [16, 22], "lowest": 22, "lsb": 22, "lsb_first": 31, "lt": [16, 19], "lvert": 16, "lxn": 16, "m": [7, 11, 16, 19, 20, 22, 30], "m_op": 19, "m_param": [15, 16], "m_to_np": [25, 27], "m_val": [14, 15, 16], "ma": 22, "mac": [31, 133], "machin": [33, 133], "made": [4, 134], "magnesium": 0, "magnitud": [4, 14, 16], "magnitude_squar": [10, 22], "mai": [4, 5, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "main": [0, 7, 22, 23, 29, 134], "maintain": [6, 134], "major": 134, "majorana": 16, "make": [4, 6, 7, 14, 22, 30, 31, 33, 100, 134], "make_on": [15, 16], "makeup": 29, "manag": [2, 3, 4, 31, 133], "mani": [4, 6, 16, 22, 29, 31], "manipul": [0, 29], "manual_link": [10, 29], "map": 31, "mark": [7, 16, 17, 23], "mass": 5, "massachusett": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "master": [6, 30, 134], "mat": 27, "mat_d_omega": [10, 22], "match": [7, 16], "materi": [0, 22, 32, 97, 98, 100, 104, 106, 107, 133], "math": [16, 22], "mathcal": [11, 16], "matric": [4, 9, 10, 16, 100], "matrix": [10, 14, 16, 19, 22], "matrixinst": [9, 10], "matsumoto": [4, 22, 97, 100], "max": [4, 5, 22, 29, 31], "max_decomposition_pass": 31, "max_it": 27, "max_meas_bit": 16, "max_moment": 29, "max_uncompute_bit": 16, "maximum": [4, 22, 31], "mcx": 16, "mean": [4, 22, 31, 133], "meant": 134, "measnam": 31, "measur": [4, 5, 12, 16, 32], "measure_obs_sit": [10, 19], "measurement_kei": 16, "measurement_uncomput": [15, 16, 17], "measurementkei": 16, "med_phas": [10, 12], "median": 12, "meet": 31, "merg": [6, 134], "met": 16, "method": [4, 5, 12, 14, 15, 16, 17, 18, 22, 23, 29, 97, 104, 132], "methodnam": 23, "metric": 29, "microsoft": 7, "mid": 4, "might": 33, "migrat": 5, "min": 27, "mind": [6, 134], "minim": [4, 134], "minimum": 29, "minmax": [10, 19], "minor": 134, "minu": 16, "miss": 29, "mit": 132, "mixin": 16, "mk": [10, 19, 20], "mk_": [10, 19, 20], "mk_id": [10, 19, 20], "mk_id_": [10, 19, 20], "mk_idpad": [10, 19, 20], "mk_idpad_": [10, 19, 20], "mk_ksum": [10, 19, 20], "mk_ksum_": [10, 19, 20], "mk_n": [10, 19, 20], "mk_n_": [10, 19, 20], "mm": 134, "mod": [15, 16, 22], "modaddk": 16, "mode": [15, 19, 22, 133], "model": [0, 14], "model_prefix": 14, "modif": 16, "modifi": [4, 5, 16, 31, 133], "modify_coeff": [10, 19], "modify_typ": [10, 19], "modul": [6, 7, 8, 132], "modular": 22, "modular_sqrtm1": [10, 22], "modular_square_root": [10, 22], "mol_ham": 14, "mol_nam": 14, "molecul": [0, 14], "molecular": [0, 14], "moleculeparamet": [9, 10, 11], "moment": 22, "momenta": 16, "momentum": 16, "more": [4, 5, 6, 7, 16, 17], "most": [0, 4, 7, 31, 133], "mostli": 6, "motiv": 6, "move": 29, "move_ready_to_execut": [10, 29], "mpfr": 22, "mpm_prec": [25, 27], "mpmath": 5, "mu": [15, 16, 19], "much": 22, "mul_by_sqrt2": [10, 22], "mult_pow_2": [10, 22], "mult_x_y_pt": [10, 22], "multi": [4, 22], "multi_ccx": [15, 16], "multi_control_v": 28, "multi_target_g": 28, "multi_target_v": 28, "multicontrol": 5, "multicz": [10, 15], "multilinear": 0, "multilinear_algebra": [9, 10], "multipl": [5, 16, 22, 29, 30], "multiplex_aux": [15, 16], "multiplexor": [15, 16], "multiply_z_omega": [10, 22], "murangl": 16, "must": [4, 7, 16, 29, 133], "myriad": 134, "n": [4, 7, 11, 12, 14, 16, 17, 19, 20, 22, 25, 26, 27, 30, 31, 33, 133], "n1": 11, "n2": 11, "n_": [11, 14, 16], "n_bit": [15, 16, 17], "n_control": [16, 28], "n_data": 17, "n_lcu_term": [10, 14], "n_lxi": [15, 16], "n_m": 11, "n_p": 16, "n_phi": [10, 28], "n_point": [10, 24], "n_pt": 25, "n_qb": 19, "n_qubit": [10, 12, 14, 31], "n_r": 11, "n_select": 17, "n_t": 11, "n_term": [10, 14], "n_v": 20, "n_x": 20, "n_xi": [15, 16], "name": [0, 7, 11, 14, 16, 17, 23, 29, 31, 133, 134], "named_factor": [9, 10], "nativ": 4, "navig": [31, 33, 133], "nb": 16, "ndarrai": [11, 16], "nearest": 14, "nearli": 17, "necessari": [30, 31], "necessarili": [4, 22, 32, 97, 98, 100, 104, 106, 107, 133, 134], "need": [4, 7, 11, 14, 16, 22, 29, 31, 133], "neg": 16, "negat": 16, "negative_z_rot": 17, "neghbor": 14, "neighbor": 14, "neither": 29, "neq": [14, 16], "nest": 16, "new": [0, 4, 6, 16, 22, 133, 134], "new_coeff": 19, "new_typ": 19, "new_unit": 19, "nex": 7, "next": [7, 14, 29, 134], "nj": 16, "nk": 16, "no_decomp": 22, "node": 29, "node_s": 19, "node_scal": 24, "nomin": 16, "non": [0, 4, 5, 22, 31], "none": [4, 11, 12, 14, 15, 16, 19, 22, 23, 25, 26, 27, 28, 29, 31], "nonlinear": 0, "nonlinearod": [9, 10], "nonloc": 0, "nor": 29, "norm": [4, 10, 11, 14, 22, 31], "norm_typ": 14, "normal": [4, 10, 11, 14, 16, 22, 31, 97, 100], "normalize_pauli_lcu": [10, 14], "note": [5, 6, 7, 11, 12, 14, 15, 16, 22, 31, 133, 134], "notebook": [0, 4, 5, 16, 21, 33], "noth": 16, "notic": [22, 32, 97, 98, 100, 104, 106, 107, 133], "notifi": 29, "notimpl": [16, 31], "notion": 134, "notwithstand": [22, 32, 97, 98, 100, 104, 106, 107, 133], "now": [5, 7, 30, 134], "np": 16, "nseg": 26, "nth": 16, "nth_oper": [15, 16], "nth_operation_callgraph": [15, 16], "nu": [11, 16, 20], "nu_i": 16, "nu_x": 16, "nu_xrangl": 16, "nu_yrangl": 16, "nu_z": 16, "nu_zrangl": 16, "nuclear": 16, "nuclei": 16, "num_atom": [14, 15, 16], "num_bit_rot_aa": 11, "num_bits_m": [15, 16], "num_bits_nuc_po": [15, 16], "num_bits_p": [15, 16], "num_bits_rot_aa": [11, 15, 16], "num_bits_t": [15, 16], "num_control": 16, "num_data_bit": [15, 16], "num_electron": 14, "num_phas": [10, 25], "num_plane_wav": 14, "num_qubit": [10, 11, 12, 15, 16, 22, 28], "num_qubits_in_regist": [10, 28], "num_rotation_g": [4, 15, 22, 31], "num_run": [10, 12], "num_sampl": 23, "num_sit": [10, 19], "num_target_bit": [15, 16], "number": [4, 5, 7, 11, 12, 14, 15, 16, 22, 28, 29, 30, 31, 132, 134], "number_qubit": 14, "numer": [0, 22], "numpi": 30, "numpydoc": 33, "o": [16, 31, 33], "obj": 22, "object": [7, 12, 13, 14, 15, 17, 18, 19, 21, 22, 24, 25, 27, 29, 30, 31, 32], "obs_op": 19, "obtain": [4, 16, 22, 31], "occ_idx": 19, "occup": 12, "occur": [4, 5, 16, 29], "od": 0, "odd": [16, 25, 27], "off": [5, 6, 14], "offset": [12, 27], "ofq_str": 31, "old": 5, "on_stuck_rais": 31, "onboard": 33, "onc": [7, 29, 31], "one": [4, 6, 16, 22, 29, 30, 133, 134], "one_dir_above_repo": 133, "ones": 16, "onli": [4, 5, 7, 11, 12, 14, 16, 22, 29, 30, 31, 133, 134], "onsit": [14, 19], "op": [10, 17, 19, 20, 22, 28, 29, 31], "op_str": [10, 19], "op_tre": 31, "op_tuple_to_str": [10, 19], "op_typ": 16, "opdecomposerwithcontext": 31, "open": [6, 33], "open_fermion_to_qasm": [10, 31], "open_grid": [10, 24], "open_hamiltonian": [10, 24], "openfermion": [13, 14, 31, 32], "openqasm": [0, 5, 10, 31, 32], "openqasm2": 4, "oper": [4, 5, 9, 10, 11, 14, 15, 18, 22, 29, 31, 98, 100, 132], "operator_complex": [9, 10], "operator_lattic": [9, 10], "operator_list": [10, 19], "operator_pow": [10, 12], "operator_sim": [9, 10], "operator_str": [9, 10], "operatorcel": [10, 19], "operatorlattic": [10, 19], "operatorunitcel": [10, 19], "opinion": [22, 32, 97, 98, 100, 104, 106, 107, 133], "oppos": 4, "optim": [0, 5, 10, 14, 16, 25, 28], "option": [0, 4, 11, 14, 16, 31, 133], "optre": [11, 16, 31], "optyp": 16, "orbit": [0, 14, 16], "order": [4, 7, 22, 31], "org": [4, 5, 11, 16, 30, 31, 132], "organ": 5, "orgiin": 16, "origin": [16, 22], "oscil": 0, "ostr": [10, 19], "other": [2, 3, 5, 7, 16, 22, 29, 32, 97, 98, 100, 104, 106, 107, 133], "otherwis": [16, 29, 31], "otim": 16, "our": [4, 5, 6, 16, 22, 30, 134], "ourselv": 4, "out": [4, 11, 16, 17, 22, 29, 33, 134], "out_map": 31, "out_qubit": 16, "outer_prep_ep": 11, "outer_prep_extra_regist": [10, 11], "outerprepar": [15, 16], "outlin": [4, 16, 31, 134], "outlist": 31, "output": [4, 11, 12, 16, 17, 31, 32], "over": [4, 14, 16, 22, 100], "overal": [11, 16], "overhang": 19, "overrid": [16, 133], "overriden": [15, 16], "overwrit": 16, "overzeal": 4, "own": 22, "p": [11, 14, 16, 22, 24], "p_": 16, "p_val": 31, "p_x": 31, "packag": [5, 6, 8, 133], "pad_valu": [14, 19], "page": [6, 11, 16, 132, 134], "pair": [10, 19], "pair_coeff_arrai": [10, 24], "pair_coeff_lookup": [10, 24], "panda": 12, "pandoc": 33, "pane": 7, "paper": [0, 16], "paralel": 29, "parallel": [4, 29, 31], "parallelism_analysi": [10, 29], "param": [16, 22, 30, 31], "paramet": [7, 11, 12, 14, 16, 22, 29, 31], "parent": 0, "pariti": [19, 27], "pars": 22, "parse_and_reconstruct": [10, 22], "parse_g": [10, 22], "parse_wfn_traj_op": [10, 19], "part": [4, 7, 16, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "partial": 33, "particular": 29, "particularli": [4, 22], "pass": [4, 11, 14, 16, 22, 31, 32, 134], "past": 7, "patch": 134, "path": [14, 31], "pauli": [0, 16, 22], "pauli_string_manip": [9, 10], "pauli_term": [10, 14], "paulilcu": [10, 11, 14], "paulistringlcu": [0, 9, 10], "pbc": 14, "pdf": [4, 5, 11, 16, 22, 31, 97, 100], "pe": [9, 10], "pe_circuit": [10, 12], "pe_gat": [9, 10], "pe_inst": [10, 12], "pe_sim": [9, 10], "pe_simul": [10, 12], "peek": 4, "peopl": [6, 133], "pep8": 6, "peq": [10, 11], "perform": [4, 5, 11, 12, 16, 22, 29, 100], "period": [0, 4, 14, 19, 33], "periodicchemistri": 0, "permut": 16, "perp": 16, "pertin": 134, "pest": 14, "pest_interfac": [9, 10], "pest_python": [9, 10], "pg": 16, "phase": [11, 12, 16, 19, 22, 98, 132], "phase_algorithm": [25, 28], "phase_convent": 28, "phase_estim": [0, 9, 10, 12], "phase_estimation_inst": 12, "phase_estimation_of_quantum_walk": 30, "phase_factor": [0, 9, 10], "phase_gener": [10, 25], "phase_gradient_bit": [15, 16], "phase_gradient_ep": 11, "phase_gradient_st": 16, "phase_offset": [10, 12], "phase_qubit": 16, "phase_regist": [10, 28], "phase_set": 28, "phase_w_to_r": [10, 19], "phaseco": 19, "phaseestim": [5, 9, 10], "phasefactor": [10, 25], "phasegradientrot": [10, 15], "phasegradientzrot": [15, 16], "phaseoffset": [10, 12], "phases_wx_to_r": [10, 25], "phasesin": 19, "phasesw": 19, "phi": [10, 16, 22, 25, 26, 28, 31], "phi_wx_to_o": [10, 19], "phi_wx_to_qsvt": [10, 19], "phi_wx_to_r": [10, 19], "philosophi": 134, "phiset": 19, "phy": 0, "physic": 14, "physical_data": [9, 10], "pi": [5, 16, 22, 30], "pick": 6, "pip": 133, "pipe": 133, "plan": [0, 134], "plane": [0, 14], "plaquett": [10, 19], "pleas": [4, 16, 33, 132, 133], "plot_expansion_error": [10, 25], "plot_func_error": [10, 31], "plot_help": [9, 10], "plu": [2, 3, 16], "plus_t": 16, "png": 29, "point": [5, 7, 14, 16, 19, 22, 104], "point_enumer": [9, 10], "pol": 0, "pollard_rho": [10, 22], "polynomi": 0, "pool": 29, "popul": 29, "populate_readi": [10, 29], "portion": 12, "pos1": 16, "pos2": 16, "posit": [11, 16, 22], "possibl": [7, 31], "potenti": [0, 4, 16, 31, 134], "potentianlli": 7, "power": [5, 7, 12, 16, 22], "pp_com": [15, 16], "pp_ctl": [15, 16], "pp_exp": [15, 16], "pp_tgt": 16, "pr": 6, "practic": 132, "pre": 31, "prec": [22, 23, 27, 28], "prec_ord": 12, "precis": [4, 5, 11, 12, 16, 23, 29, 31], "precision_bit": [15, 16], "precision_bit_st": 12, "precision_is_valid": [22, 23], "precision_ord": [10, 12], "precision_qubit": [10, 12], "precomput": [25, 28], "predic": 31, "prefer": 33, "prefix": 31, "prep": [16, 134], "prep_l": 16, "prepar": [5, 10, 11, 15, 17, 30], "prepare_angl": [15, 16], "prepare_catalytic_st": 16, "prepare_firstquant": [10, 15], "prepare_lineart": [0, 10, 15], "prepare_oracl": 11, "prepare_oracle_pauli_lcu": [0, 10, 15], "prepare_pauli_lcu": [15, 16], "prepare_typ": 11, "preparefirstquant": [15, 16], "preparemuunaryencod": [10, 15], "preparenu": [10, 15], "preparenust": [15, 16], "preparenusuperposit": [10, 15], "prepareoracl": [15, 16], "preparepowertwost": [10, 15], "preparet": 16, "preparet_firstquant": [10, 15], "prepareuv_firstquant": [10, 15], "prepareuvfirstquant": [15, 16], "preprocess_lcu_coefficients_for_reversible_sampl": 16, "preserve_structur": 31, "pretty_nam": [15, 16], "prev_bit": 12, "prevent": 31, "previou": [29, 33, 134], "previous": 12, "primail": 22, "primari": [22, 31], "primarili": 5, "prime": 22, "principl": 16, "print": [4, 5, 9, 10, 17, 19, 22], "print_numb": 19, "print_unit_cel": [10, 14], "print_xyz": [10, 19], "prioriti": 134, "probability_ep": 11, "probabl": 11, "problem": [5, 14, 22, 132], "problem_s": [10, 31], "problemat": 31, "probleminst": [0, 9, 10, 11], "procedur": 16, "process": [6, 10, 19, 134], "prod_": 16, "produc": [5, 16], "product": 16, "productpauliexponenti": [10, 15], "profession": 134, "profil": [29, 31], "program": 7, "progress": [6, 17, 134], "project": [0, 7, 134], "prop": 19, "prop_lvn": [10, 19], "prop_wfn": [10, 19], "properli": 4, "protocol": [22, 31], "provid": [0, 2, 3, 4, 5, 6, 14, 15, 16, 22, 31, 32, 97, 98, 100, 104, 106, 107], "ps_print_set": [10, 19], "ps_print_set_merg": [10, 19], "ps_text_full_set": [10, 19], "ps_text_full_set_withzero": [10, 19], "ps_text_pad": [10, 19], "ps_text_to_matrix": [10, 19], "ps_text_to_op": [10, 19], "psi": [12, 16], "psi_bit_st": 12, "pstr": [19, 31], "pts_init": 27, "public": [22, 32, 97, 98, 100, 104, 106, 107, 133], "publish": 132, "pull": [6, 29, 133, 134], "purge_skeleton": [10, 19], "purpos": 134, "push": [5, 134], "put": 22, "pw": 0, "pw_to_dpw_cutoff": [10, 24], "py": [0, 6, 134], "pydag": 29, "pygpen": 133, "pylcircuit": [9, 10, 30], "pyliqtr": [4, 5, 8, 9, 134], "pyloper": [9, 10, 16], "pylqt_t_complex": [10, 31], "pytest": [6, 7], "pytestmark": [16, 17, 22, 23], "python": [7, 12, 133], "pythonpath": 7, "q": [14, 16, 24], "q0": 22, "q0n": 22, "q1": 22, "qa": [4, 22, 31, 97, 100], "qalloc": [10, 31], "qasm": [2, 3, 5, 15, 16, 17, 22, 31, 32], "qasminfo": [10, 31], "qborrow": [10, 31], "qet": 0, "qfree": [10, 31], "qid": [4, 11, 16, 22, 31], "qint": 16, "qmontgomeryuint": 16, "qrom": [0, 5, 11, 16], "qrom_bloq": [15, 16], "qrom_data_measur": 16, "qromselectv": [15, 16], "qromwithmeasurementuncomput": [10, 15], "qsp": [5, 9, 10, 31], "qsp_exp_sim_r": [10, 19], "qsp_fourier_respons": [0, 10, 28], "qsp_helper": [9, 10], "qsp_prepar": [15, 16], "qsp_respons": [10, 19], "qsp_sequenc": [10, 19], "qsp_x": 31, "qspfilesio": [10, 31], "qsvt": [4, 5, 9, 10, 25], "qsvt_abstract": [0, 10, 28], "qsvt_and_qsp": 0, "qsvt_dynam": [0, 9, 10], "qsvt_real_polynomi": [0, 10, 28], "qsvt_real_polynomial_sum": [0, 10, 28], "qsvt_respons": [10, 19], "qsvt_sequenc": [10, 19], "qualnam": 11, "qualtran": [0, 4, 5, 11, 16, 31], "quantiz": [11, 16], "quantum": [2, 11, 16, 30, 132], "quantumlib": 30, "qubit": [4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 22, 29, 30, 31, 97, 98, 100, 132], "qubit_dict": 16, "qubit_lin": 31, "qubit_map": 29, "qubit_reg": 16, "qubitized_g": [0, 9, 10], "qubitizedphaseestim": [0, 5, 10, 28], "qubitizedreflect": [0, 10, 28], "qubitizedrot": [0, 10, 28], "qubitizedwalkoper": [0, 10, 28], "qubitmanag": 31, "qubitoper": 13, "queri": [22, 29], "question": 29, "queue": 29, "quick": [0, 133], "quickli": 7, "quint": 16, "quot": 133, "qureg": [11, 16, 28], "qx": 29, "qy": 29, "r": [0, 4, 10, 16, 19, 22, 25, 28], "r1": 22, "r_": 16, "r_n": 16, "r_x": 31, "rac": [16, 30], "rad": [22, 28], "radian": 31, "rais": [4, 12, 16, 17, 22, 29, 31], "random": [4, 5, 22, 23, 25, 26, 31], "random_decomp": [10, 22], "randomli": [4, 22], "rang": [7, 16, 22], "rangl": [14, 16], "rangle_u": 16, "rangle_v": 16, "rank": [11, 16], "rather": [31, 133], "raw_typ": 31, "rceil": 16, "re": [22, 134], "reach": [4, 33], "read": [22, 31, 134], "read_poli": [25, 27], "readangl": [10, 31], "readd": 31, "readhaml": [10, 31], "readi": [6, 7, 29, 134], "real": [0, 22, 134], "realist": 4, "reason": 17, "rebuild": 33, "receiv": [4, 31], "recent": [10, 19], "recommend": [4, 22, 29, 32, 33, 97, 98, 100, 104, 106, 107, 133], "recurs": [5, 16, 29, 31], "recursion_level": 29, "reduc": [10, 22], "reduce_by_1": [10, 22], "reduce_by_2": [10, 22], "reduce_by_sqrt2": [10, 22], "reduce_skew": [10, 22], "ref": [11, 16, 30], "refer": [4, 11, 16], "reflect": [0, 4, 10, 15, 19, 22, 32, 97, 98, 100, 104, 106, 107, 133, 134], "reg": 31, "reg_nam": 31, "reg_qubit": [12, 15, 16], "regard": 29, "regener": 33, "region": 22, "regist": [11, 12, 16, 17, 28, 31], "register_qubit": [10, 12], "regsiter_qubit": [10, 12], "reinstal": 133, "relat": [5, 6], "relationship": 16, "releas": [5, 22, 32, 97, 98, 100, 104, 106, 107, 132, 133], "relev": [4, 31], "remain": [29, 31], "remap": 16, "remark": 22, "remez": [25, 27], "remot": 133, "remov": [5, 29, 134], "remove_depend": [10, 29], "remove_zero": [10, 19], "replac": [4, 5, 16, 22], "replace_kei": [15, 16], "repo": [133, 134], "repositori": 133, "repres": [12, 14, 16, 22, 29, 30, 31], "represent": [4, 16, 22, 31], "request": [6, 7, 23, 32, 134], "requir": [0, 4, 5, 14, 22, 29, 31, 133], "requr": 16, "rescal": 14, "rescale_coeff_norm": [10, 19], "rescale_coeff_scalar": [10, 19], "rescale_minmax": [10, 19], "research": [22, 32, 97, 98, 100, 104, 106, 107, 133], "reserv": 29, "reset": [10, 31], "resolv": [4, 6, 7, 15, 16, 17], "resourc": [0, 5, 10, 15, 17, 29, 30, 31, 132], "resource_analysi": [4, 9, 10], "resource_analysis_mod": [10, 15], "resource_avail": [10, 29], "resource_count": [10, 29], "resourceanalysismod": 15, "resourceanalyz": [10, 15, 30], "resourcei": 29, "resourcex": 29, "respons": 0, "rest": [4, 22, 29], "restrict": [0, 4, 29], "result": [4, 16, 22, 29, 31], "return": [4, 11, 12, 14, 15, 16, 17, 22, 29, 30, 31, 32], "return_a": [14, 19], "return_obj": 22, "reus": 16, "rev": [0, 22], "revers": 7, "rework": 5, "rh": 11, "right": [16, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "rigor": 134, "ring": [4, 9, 10, 100, 104], "ring_gcd": [10, 22], "root": [7, 22], "rot_ancilla": 16, "rot_data": 16, "rotat": [0, 4, 5, 11, 12, 14, 16, 22, 29, 30, 31, 97, 106], "rotation_allow": [4, 31], "rotation_ancilla": 16, "rotation_control_qubit": 28, "rotation_control_v": 28, "rotation_g": [9, 10, 28], "rotation_gate_precis": [4, 15, 31], "rotation_target": 16, "rotation_target_qubit": 16, "rotation_to_t": [10, 29], "rotationsblock": [15, 16], "rotationsqrom": [5, 10, 15], "round": 5, "rtype": 22, "run": [6, 12, 29, 31, 32, 133], "run_this_test": 7, "runtest": 23, "runtim": 4, "rustworkx": 29, "rv": 19, "rvert": 16, "rx": [4, 5, 22, 31], "rx_d": [4, 5, 31], "rx_decomp": [10, 22], "ry": [4, 5, 22, 31], "ry_d": [4, 5, 31], "ry_decomp": [10, 22], "rydberg": 14, "rz": [4, 5, 16, 22, 28, 31], "rz_d": [4, 5, 31], "rz_decomp": [10, 22], "s0": 19, "s1": 19, "s2": 19, "s_k": [10, 12], "s_set": 19, "same": [16, 22, 32], "sampl": [4, 16, 22, 31], "sanitize_meas_nam": [10, 31], "sate": 16, "satisfi": [16, 31], "save": [7, 10, 15], "scalar": 0, "scale": [14, 16, 22], "scale_ellips": [10, 22], "scaled_one_dim_grid_problem": [10, 22], "scenario": 133, "schedul": [9, 10, 132], "schedule_circuit": [4, 10, 29], "scheduler_util": [9, 10], "scheduling_exampl": [4, 29], "scope": 6, "scratch": 133, "screen": 12, "script": [32, 33], "script_loc": [31, 32], "sd": [10, 22], "search": 132, "second": [11, 14, 16, 134], "secondari": 22, "secretari": [22, 32, 97, 98, 100, 104, 106, 107, 133], "section": [0, 4, 11, 16, 22, 97, 100, 134], "see": [4, 5, 6, 7, 16, 22, 31, 97], "seed": 31, "sel_q": 16, "select": [4, 11, 16, 22], "select_lineart": [0, 10, 15], "select_oracl": 11, "select_oracle_pauli_lcu": [0, 10, 15], "select_prepare_pauli": [10, 15], "select_q": 16, "selection_bits": [15, 16], "selection_index": 17, "selection_indic": 16, "selection_reg": [15, 16], "selection_regist": [10, 11, 15, 16, 28], "selectoracl": [15, 16], "selectv": [10, 15], "selectvbas": 5, "selectvutil": [10, 15], "self": [7, 12, 16, 22], "selvbas": [15, 16], "semant": 134, "semi_major": 22, "semi_minor": 22, "sens": 16, "separ": [16, 31, 133], "seper": 16, "sequenc": [4, 11, 16, 22, 25, 28, 31], "sequence_length": [4, 31], "sequence_nam": 28, "sequnc": 22, "server": 6, "session": 7, "set": [0, 2, 3, 4, 7, 9, 10, 11, 12, 14, 16, 23, 30, 31], "set_coeff": [25, 27], "set_even": [25, 27], "set_execution_tim": [10, 29], "set_label": [10, 19], "set_num_qb": [10, 19], "set_odd": [25, 27], "set_par": [25, 27], "set_poli": [25, 27], "set_precis": [25, 27], "set_root_solv": [25, 27], "set_typ": [25, 27], "set_unit": [10, 19], "settings_obj": 7, "settl": 134, "setup": [5, 7, 22, 23], "sf_error_threshold": [11, 14], "shank": 22, "shape": [14, 16], "share": 33, "shift": 16, "short": [6, 31, 134], "shortcom": 4, "should": [3, 4, 6, 15, 16, 17, 22, 29, 31, 33, 133, 134], "shown": 4, "sht": 22, "sigma": [14, 16], "sigma_mu_bits": [15, 16], "sign": 16, "signal_convent": 19, "signatur": [10, 11, 15, 16, 28], "signific": 16, "signs_data": [15, 16], "silent": [19, 25, 26, 27, 31, 133], "sim_method": 5, "sim_phase_estim": [10, 12], "sim_result": 12, "sim_run": [10, 12], "sim_run_analysi": [10, 12], "similar": 4, "similarli": 134, "simpl": [4, 29, 32], "simplequbitmanag": 4, "simpli": [4, 7, 18, 22, 31, 32], "simqsp": [9, 10], "simul": [2, 3, 5, 9, 10, 11, 12, 16, 17], "simulation_phas": [0, 10, 25, 28], "simultan": [4, 29], "sin": [16, 22, 30], "sinc": [4, 16, 29], "sine": 4, "singl": [0, 4, 7, 16, 18, 22, 97, 98, 100], "single_g": [15, 18], "single_op": 31, "single_spin": [14, 19], "singular": 0, "site": [10, 19], "sites_to_arrai": [10, 19], "six": 16, "size": [14, 16, 19, 30, 31], "skip": 17, "skip_head": 31, "slab": 0, "slatter": 0, "slight": 16, "slightli": 133, "slope": 22, "slow": [4, 33], "slower": 4, "small": [0, 6, 31], "smaller": [4, 5, 16], "smallest": 22, "snapshot": 134, "snorm": [10, 31], "so": [4, 5, 6, 7, 16, 22, 30, 31, 133, 134], "so3": [10, 22], "softwar": [22, 32, 97, 98, 100, 104, 106, 107, 132, 134], "sol": 27, "solid": 134, "solut": 22, "solv": [22, 107], "solve_diophantin": [9, 10], "solve_one_dim_grid_problem": [10, 22], "solve_two_dim_grid_problem_ellips": [10, 22], "solve_two_dim_grid_problem_upright_rectangl": [10, 22], "solvediophantin": [10, 22], "solver": 27, "some": [0, 4, 5, 16, 22, 31, 134], "someon": 6, "someth": [4, 6, 16, 22], "sometim": 5, "soq": 16, "soquet": 16, "sort": 29, "sourc": [0, 3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "space": 7, "spars": [14, 20], "sparse_arrai": [10, 14], "sparse_matrix": [10, 14, 19], "sparse_tupl": [10, 14], "sparsiti": 16, "spatial": [14, 16], "spdx": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131], "specal": 0, "speci": 16, "special": 0, "specif": [0, 2, 16, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "specifi": [0, 4, 16, 22, 29, 31], "spectra": [11, 30], "spectral": 11, "speed": [5, 31], "speedi": 4, "sphere": 22, "sphinx": 33, "spin": [0, 14, 16], "spin_model": [0, 9, 10], "split_angl": [15, 16], "splitin2": [10, 31], "splitinpair": [10, 31], "sqrt": [10, 16, 22, 30], "squar": [0, 14, 16, 22], "squarelattic": [10, 14, 19], "src": 33, "ssa": 16, "stabl": [33, 133, 134], "stack": 7, "stai": 6, "staircas": 16, "standard": [4, 22, 31], "start": [4, 6, 7, 11, 12, 16, 22, 29, 31, 134], "start_btre": 16, "start_tim": 29, "state": [0, 11, 12, 16, 17, 19, 22, 30, 31], "state_multifermi_idx": [10, 19], "state_vacuum": [10, 19], "state_vector": 17, "statement": [22, 32, 97, 98, 100, 104, 106, 107, 133], "statepreparationaliassampl": 16, "static": [12, 31], "statist": 4, "statu": 29, "stave": 6, "stc": 31, "step": [11, 16, 26, 134], "step_error": 11, "stepright": [15, 16], "stick": 12, "still": 6, "sto": 0, "stop": [7, 31], "store": [11, 16, 29, 31], "str": [4, 11, 14, 15, 16, 22, 29, 31], "str_out": 31, "strategi": [19, 132, 134], "strength": 14, "string": [0, 2, 3, 5, 10, 16, 19, 22, 27, 31, 134], "structur": [5, 6, 14, 16], "studio": 7, "style": 33, "sub": 16, "subbloq": 16, "subcircuit": 31, "subclass": 22, "subcompon": 16, "subfunct": 16, "submit": 6, "submodul": [6, 9, 10], "subpackag": 8, "subprepar": [0, 16], "subprepare_lineart": [0, 15, 16], "subregion": [22, 104], "subroutin": 11, "subsum": 5, "subtract": 17, "succ": 16, "succ_i": 16, "succ_j": 16, "succ_nu": 16, "succ_p": 16, "success": [11, 16, 133], "suffici": 16, "sum": [0, 14, 16], "sum_": [14, 16, 30], "sum_atomic_num": 14, "sum_jb_k2": 16, "sum_of_lcu_coeff": [15, 16], "sum_p": 16, "sum_r": 16, "superposit": 16, "superpost": [11, 16], "support": [2, 3, 4, 5, 11, 14, 16, 22, 29, 32, 97, 98, 100, 104, 106, 107, 133], "suppos": 22, "sure": [30, 134], "surround": 16, "suzuki": 5, "swap": 16, "swap_network": [10, 15], "swapcorrect": [10, 11], "swapnetwork": [15, 16], "swapunari": [15, 16], "switch": 133, "syllabl": 22, "symbol": 16, "symbolicfloat": 16, "symbolicint": 16, "symmetr": 19, "sympi": 16, "sympysymbolalloc": 16, "synthesi": [22, 97], "system": [0, 11, 14, 32, 33], "sz": 31, "szegedywalkoper": [15, 16], "t": [0, 2, 3, 5, 10, 11, 12, 14, 16, 17, 19, 22, 24, 29, 30, 31, 33, 97, 100, 106, 107, 132, 133, 134], "t_arr": [10, 24], "t_arrai": 16, "t_coeff": 16, "t_complex": 31, "t_complexity_from_circuit": [10, 31], "t_cost": 14, "t_gate_count": 31, "t_less_than_ancilla": 16, "t_max": 19, "t_pq": 16, "t_rotation_ancilla": 16, "t_sign": 16, "tabl": [0, 16], "tag": [7, 133, 134], "take": [4, 14, 31, 133], "target": [16, 17, 19, 22, 31], "target_bits": 16, "target_g": 28, "target_mol_no": 31, "target_qubit": 16, "target_regist": [10, 11, 15, 16, 28], "target_s": 15, "target_shap": 16, "task": 134, "tau": [25, 26, 27], "tcomplex": [14, 16, 31], "td": [10, 14, 19, 22], "td_onsit": 14, "team": 6, "techniqu": 16, "technologi": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "tell": 7, "temp": 16, "temp_d": 16, "templat": 0, "temporari": [4, 33], "ten_gat": [15, 18], "tensor": [0, 10, 11, 16, 19], "tensor_method": [9, 10], "term": [0, 4, 10, 11, 14, 16, 19, 27, 31, 134], "term_dict": 19, "termin": 7, "terms_jw": [10, 14], "termselect": 14, "terror": 31, "test": [4, 5, 9, 10, 11, 12, 15, 16, 19, 22, 29, 31, 134], "test_a_op": [22, 23], "test_accuracy_issu": [22, 23], "test_acquisit": 6, "test_angl": 17, "test_b_op": [22, 23], "test_base_class_pyloperator_cr": [15, 18], "test_binarytounari": [15, 16], "test_binarytounarybit": [16, 17], "test_binarytounarybits_complex": [16, 17], "test_binarytounarybits_decompos": [16, 17], "test_binarytounarybits_invers": [16, 17], "test_binarytounarybits_qasm": [16, 17], "test_catalyticallycontrolledhadamard": [15, 16], "test_catalyticallycontrolledhadamard_decompos": [16, 17], "test_catalyticallycontrolledhadamard_invers": [16, 17], "test_catalyticallycontrolledhadamard_qasm": [16, 17], "test_catalyticallycontrolledhadamard_resourc": [16, 17], "test_chemical_phase_estim": [31, 32], "test_chemical_phase_estimation_context": [31, 32], "test_childs_bas": [16, 17], "test_childs_count": [16, 17], "test_childs_decomp": [16, 17], "test_circuit_4_qubit": [22, 23], "test_circuit_no_rz": [22, 23], "test_cirq_transform": [10, 22], "test_cirqft_adjoint_and": [10, 30], "test_cirqft_and": [10, 30], "test_cirqft_apply_gate_to_lth_qubit": [10, 30], "test_cirqft_generic_select": [10, 30], "test_cirqft_hubbard": [10, 30], "test_cirqft_multi_target_cnot": [10, 30], "test_cirqft_multicontrol_pauli": [10, 30], "test_cirqft_prepare_uniform_superposit": [10, 30], "test_cirqft_walk_oper": [10, 30], "test_classical_control_exampl": [31, 32], "test_compressed_rep1": [22, 23], "test_compressed_rep2": [22, 23], "test_convert_": [22, 23], "test_convert_compl": [22, 23], "test_convert_h": [22, 23], "test_convert_ht": [22, 23], "test_convert_t": [22, 23], "test_convert_t2": [22, 23], "test_cool_new_modul": 6, "test_cyclic_shift": [15, 16], "test_dataandkeycondit": [15, 16], "test_dataandkeycondition_resolve_arrai": [16, 17], "test_dataandkeycondition_resolve_int": [16, 17], "test_default_set": 7, "test_determine_gate_precision_circuit_precision_non": [22, 23], "test_determine_gate_precision_no_rotational_g": [22, 23], "test_determine_gate_precision_only_circuit_precis": [22, 23], "test_determine_gate_precision_only_gate_precis": [22, 23], "test_determine_gate_precision_valid_param": [22, 23], "test_diagonal_bitstr": [15, 16], "test_electronic_structure_context": [31, 32], "test_equ": [16, 17], "test_equalitytest": [15, 16], "test_equalitytest_decompos": [16, 17], "test_equalitytest_invers": [16, 17], "test_equalitytest_qasm": [16, 17], "test_equalitytest_resourc": [16, 17], "test_equalitytest_valueerror": [16, 17], "test_exact_decomp": [10, 22], "test_exact_decomp_fallback_prec10": [22, 23], "test_exact_decomp_fallback_prec20": [22, 23], "test_exact_decomp_fallback_prec30": [22, 23], "test_exact_decomp_fallback_prec40": [22, 23], "test_exact_decomp_fallback_prec50": [22, 23], "test_exact_decomp_prec10": [22, 23], "test_exact_decomp_prec20": [22, 23], "test_exact_decomp_prec30": [22, 23], "test_exact_decomp_prec40": [22, 23], "test_factor1": [22, 23], "test_factor2": [22, 23], "test_fermi_hubbard": [31, 32], "test_fermi_hubbard_context": [31, 32], "test_fermi_hubbard_context_error": [31, 32], "test_fermi_hubbard_simple_context": [31, 32], "test_find_bounding_ellips": [22, 23], "test_find_e_and_z": [22, 23], "test_find_k_1": [22, 23], "test_find_k_2": [22, 23], "test_find_k_3": [22, 23], "test_find_k_4": [22, 23], "test_find_k_5": [22, 23], "test_find_u_candidate_1": [22, 23], "test_find_u_candidate_2": [22, 23], "test_find_u_candidate_3": [22, 23], "test_find_u_candidate_4": [22, 23], "test_flagzeroasfailur": [15, 16], "test_flagzeroasfailure_decompos": [16, 17], "test_flagzeroasfailure_invers": [16, 17], "test_flagzeroasfailure_qasm": [16, 17], "test_flagzeroasfailure_resourc": [16, 17], "test_for_bad_gate_op": [10, 31], "test_gate_complex": [10, 31], "test_gate_complexity_init": [31, 32], "test_get_approx_t_depth": [22, 23], "test_get_attr_qasm": [31, 32], "test_gse_circuit": [22, 23], "test_hamiltonian_encod": [15, 16], "test_heisenberg": [10, 19, 31, 32], "test_heisenberg_non_zero": [19, 21], "test_heisenberg_zero": [19, 21], "test_hundred_gate_resourc": [15, 18], "test_invalid_trotterized_hamiltonian": [31, 32], "test_is_mac": [31, 32], "test_is_windows_on_mac_or_linux": [31, 32], "test_is_windows_on_window": [31, 32], "test_k_op": [22, 23], "test_matric": [10, 22], "test_modular_square_root1": [22, 23], "test_modular_square_root2": [22, 23], "test_modular_square_root3": [22, 23], "test_modular_square_root4": [22, 23], "test_modular_square_root5": [22, 23], "test_mult_matdomega_1": [22, 23], "test_mult_matdomega_2": [22, 23], "test_mult_so3_1": [22, 23], "test_mult_so3_2": [22, 23], "test_mult_so3_3": [22, 23], "test_multi_axis_rotation_prec10": [22, 23], "test_multi_axis_rotation_prec13": [22, 23], "test_multi_cz_bas": [16, 17], "test_multi_cz_count": [16, 17], "test_multi_cz_equ": [16, 17], "test_multi_cz_toqasm": [16, 17], "test_multicz": [15, 16], "test_multiple_decomp_rotations_to_qasm": [22, 23], "test_num_rotation_gates1": [22, 23], "test_one_dim_grid_problem_rand": [22, 23], "test_open_fermion_to_qasm": [31, 32], "test_pauliproductexponentials_decompos": [16, 17], "test_pe_g": [10, 12], "test_phasegradientrot": [15, 16], "test_phasegradientzrot": [16, 17], "test_phasegradientzrotation_decompos": [16, 17], "test_phasegradientzrotation_invers": [16, 17], "test_phasegradientzrotation_qasm": [16, 17], "test_pi_rot": [22, 23], "test_point_enumer": [10, 22], "test_prepar": [15, 16], "test_prepare_comparison_to_common_op": [16, 17], "test_preparemuunaryencod": [15, 16], "test_preparemuunaryencoded_decompos": [16, 17], "test_preparemuunaryencoded_invers": [16, 17], "test_preparemuunaryencoded_qasm": [16, 17], "test_preparemuunaryencoded_resourc": [16, 17], "test_preparenusuperposit": [15, 16], "test_preparenusuperposition_decompos": [16, 17], "test_preparenusuperposition_invers": [16, 17], "test_preparenusuperposition_qasm": [16, 17], "test_preparenusuperposition_resourc": [16, 17], "test_preparepowertwost": [15, 16], "test_preparepowertwostate_decompos": [16, 17], "test_preparepowertwostate_invers": [16, 17], "test_preparepowertwostate_qasm": [16, 17], "test_preparepowertwostate_resourc": [16, 17], "test_preparet_firstquant": [15, 16], "test_preparet_firstquantized_decompos": [16, 17], "test_preparet_firstquantized_invers": [16, 17], "test_preparet_firstquantized_qasm": [16, 17], "test_preparet_firstquantized_resourc": [16, 17], "test_print": [10, 31], "test_productpauliexponenti": [15, 16], "test_productpauliexponentials_qasm": [16, 17], "test_productpauliexponentials_uncomput": [16, 17], "test_productpauliexponeti": [16, 17], "test_profile_prec10": [22, 23], "test_profile_prec15": [22, 23], "test_pylcircuit": [10, 15], "test_pylcircuit_init": [15, 18], "test_pyloper": [10, 15], "test_qromwithmeasurementuncomput": [15, 16], "test_qromwithmeasurementuncompute_decompos": [16, 17], "test_qsp_circuit": [22, 23], "test_qtadd": [15, 16], "test_qtadd_decompos": [16, 17], "test_qtadd_qasm": [16, 17], "test_qtadd_with_phase_gradi": [16, 17], "test_qtadd_with_zero_pad": [16, 17], "test_qtadd_with_zero_padding_invers": [16, 17], "test_qualtran_resource_analyze_multiple_g": [9, 10], "test_qualtran_resource_analyze_single_g": [9, 10], "test_r_op": [22, 23], "test_rand_angles_prec50": [22, 23], "test_random_decomp1": [22, 23], "test_random_decomp2": [22, 23], "test_reduce_skew_extra_1": [22, 23], "test_reduce_skew_large_bias1": [22, 23], "test_reduce_skew_large_bias2": [22, 23], "test_reflect": [15, 16], "test_reflect_bas": [16, 17], "test_reflect_count": [16, 17], "test_reflect_equ": [16, 17], "test_reflect_toqasm": [16, 17], "test_resoure_analyz": [10, 31], "test_rotationsqrom": [15, 16], "test_rotationsqrom_decompos": [16, 17], "test_rotationsqrom_invers": [16, 17], "test_rotationsqrom_measurement_uncomput": [16, 17], "test_rotationsqrom_qasm": [16, 17], "test_rotationsqrom_resourc": [16, 17], "test_rx_decomp_inverse_g": [22, 23], "test_rx_decomp_to_qasm": [22, 23], "test_ry_decomp_to_qasm": [22, 23], "test_rz_decomp1": [22, 23], "test_rz_decomp2": [22, 23], "test_rz_decomp_circuit2qasm": [22, 23], "test_rz_decomp_qsp_circuit": [22, 23], "test_rz_decomp_to_qasm": [22, 23], "test_rz_decomp_w_classical_control": [22, 23], "test_scaled_one_dim_grid_problem_1": [22, 23], "test_scaled_one_dim_grid_problem_2": [22, 23], "test_scaled_one_dim_grid_problem_3": [22, 23], "test_scaled_one_dim_grid_problem_4": [22, 23], "test_selectv": [15, 16], "test_shift_oper": [22, 23], "test_single_gate_depth": [15, 18], "test_single_gate_resourc": [15, 18], "test_single_qubit_x_rot": [22, 23], "test_single_qubit_y_rot": [22, 23], "test_single_qubit_z_rot": [22, 23], "test_solve_diophantin": [10, 22], "test_solve_one_dim_grid_problem_1": [22, 23], "test_solve_one_dim_grid_problem_2": [22, 23], "test_solve_one_dim_grid_problem_3": [22, 23], "test_solve_one_dim_grid_problem_4": [22, 23], "test_solve_one_dim_grid_problem_5": [22, 23], "test_solve_one_dim_grid_problem_6": [22, 23], "test_solve_one_dim_grid_problem_tmp": [22, 23], "test_solve_two_dim_grid_problem_ellips": [22, 23], "test_ten_gate_resourc": [15, 18], "test_thousand_gate_resourc": [15, 18], "test_to_openqasm": [31, 32], "test_transl": [15, 16], "test_trotter_unitary_instanti": [12, 13], "test_two_dim_upright_rectangle1": [22, 23], "test_two_dim_upright_rectangle2": [22, 23], "test_uniformsuperpositionij": [15, 16], "test_uniformsuperpositionij_decompos": [16, 17], "test_uniformsuperpositionij_invers": [16, 17], "test_uniformsuperpositionij_qasm": [16, 17], "test_uniformsuperpositionij_resourc": [16, 17], "test_unitari": 12, "test_unitary_bas": [16, 17], "test_unitary_decomp": [16, 17], "test_util": [10, 31], "test_writing_out_qasm_with_decomposed_rot": [31, 32], "test_writing_out_qasm_with_rot": [31, 32], "test_xpow_g": [22, 23], "testapproximationfunct": [22, 23], "testbinarytounarybit": [16, 17], "testcas": 23, "testcatalyticallycontrolledhadamard": [16, 17], "testcirqftmultiplegatedecompos": [10, 30], "testcirqftsinglegatedecompos": [10, 30], "testcirqtransform": [22, 23], "testclamheisenberg": [19, 21], "testdataandkeycondit": [16, 17], "testdiagonalbitstr": [16, 17], "testencod": [16, 17], "testequalitytest": [16, 17], "testexactdecomp": [22, 23], "testfactoringfunct": [22, 23], "testflagzeroasfailur": [16, 17], "testgatecomplex": [31, 32], "testmatric": [22, 23], "testmulticz": [16, 17], "testnuinequ": [15, 16], "testpeg": [12, 13], "testphasegradientzrot": [16, 17], "testprepar": [16, 17], "testpreparemuunaryencod": [16, 17], "testpreparenusuperposit": [16, 17], "testpreparepowertwost": [16, 17], "testpreparet_firstquant": [16, 17], "testprint": [31, 32], "testproductpauliexponenti": [16, 17], "testpylcircuit": [15, 18], "testpyloper": [15, 18], "testqromwithmeasurementuncomput": [16, 17], "testqtadd": [16, 17], "testreflect": [16, 17], "testrotationsqrom": [16, 17], "testselectv": [16, 17], "testtcount": [16, 17], "testtransl": [16, 17], "testuniformsuperpositionij": [16, 17], "testunitary0": [16, 17], "testunitaryc": [16, 17], "testutil": [31, 32], "tgt": 16, "tgt_q": [16, 31], "tgt_qubit": [12, 16], "than": [4, 5, 11, 16, 22, 31, 32, 97, 98, 100, 104, 106, 107, 133], "thank": 4, "thei": [4, 6, 16, 21, 22, 29, 134], "them": [6, 7, 29, 33, 134], "theta": [15, 16, 22], "theta_": 16, "theta_alt": [15, 16], "theta_b": 16, "theta_d": 16, "theta_n": 16, "theta_p": 16, "theta_sign": [15, 16], "thi": [0, 4, 6, 7, 11, 12, 14, 15, 16, 18, 22, 28, 29, 30, 31, 32, 33, 97, 98, 100, 104, 106, 107, 132, 133, 134], "thing": [2, 3, 6, 134], "those": [11, 22, 29, 32, 97, 98, 100, 104, 106, 107, 133], "though": 4, "thousand_g": [15, 18], "three": 16, "threshold": 11, "through": [4, 6, 7, 16], "throw": 11, "thrown": 11, "ti": 16, "tid": 19, "tidi": 6, "tild": 16, "time": [4, 16, 22, 25, 28, 29, 30, 31, 32, 133, 134], "time_dynam": [9, 10], "time_rescal": 28, "time_step_comparison_mp": [10, 31], "timestep": 29, "to_arrai": [10, 22], "to_openqasm": [5, 10, 15], "to_zomega": [10, 22], "to_zsqrt": [10, 22], "tobe": 29, "todo": [16, 17], "toffoli": [4, 15, 16], "togeth": 14, "toler": [11, 16], "tonelli": 22, "tool": [0, 7], "toolbar": 7, "top": 7, "total": [4, 14, 16, 29, 31], "total_decomp": [10, 15], "total_iteration_s": 16, "toward": 134, "track": [33, 134], "traj_raw": 19, "transfer": 16, "transform": [0, 11, 16, 22, 32, 97], "translat": [10, 15, 17, 32], "transpos": [10, 16, 22], "transvers": 0, "transverse_field_is": [0, 10, 14], "tree": 31, "trgt": 16, "tri": 4, "triangl": 7, "triangularlattic": [10, 19], "trotter": [5, 31, 32], "trotter_unitari": [10, 12], "trotterise_exp_qubop_to_qasm": 31, "trotterized_hamiltonian": [31, 32], "true": [4, 11, 12, 14, 15, 16, 19, 22, 25, 28, 29, 30, 31], "true_ep": 26, "true_phas": 12, "truncat": [11, 14, 16], "try": [4, 18, 22, 33, 134], "tune": 6, "tupl": [11, 14, 16, 19, 22, 31], "tuple_in": 31, "tupleiz": [10, 19], "tupleize_sit": [10, 19], "turn": [7, 134], "tutori": 5, "tuv": 16, "tweak": [4, 5], "twice": 16, "two": [4, 11, 16, 22, 29, 134], "two_compl": [15, 16], "type": [0, 2, 4, 6, 7, 11, 12, 16, 17, 19, 22, 29, 31, 134], "typeerror": 31, "u": [4, 6, 10, 11, 12, 14, 16, 22, 24, 32, 97, 98, 100, 104, 106, 107, 133], "u00": 22, "u01": 22, "u02": 22, "u10": 22, "u11": 22, "u12": 22, "u20": 22, "u21": 22, "u22": 22, "u_arr": [10, 24], "u_arrai": 16, "ultim": 14, "umd": [4, 22, 31, 97, 100], "unari": [5, 16], "unary_ancilla": 16, "unaryiter": [15, 16], "unaryiterationg": 16, "uncomput": [5, 15, 16, 17], "undefin": 16, "under": [4, 16, 22, 32, 97, 98, 100, 104, 106, 107, 133, 134], "underbrac": 16, "underli": 4, "understand": 4, "unfortun": 6, "uniform": [11, 16], "uniformsuperpositionij": [10, 15], "uniformsuperpositionijfirstquant": [15, 16], "union": [4, 22, 31], "uniqu": 16, "unit": [6, 14, 19, 22, 24, 30, 104], "unitari": [0, 4, 12, 16, 17, 22, 31, 100], "unitary_kw_arg": [10, 12], "unitaryblockencod": [15, 16], "unitcel": [10, 19], "unless": [4, 22, 31], "unlimit": [22, 32, 97, 98, 100, 104, 106, 107, 133], "unnecessarili": 5, "unoptim": 17, "unreleas": 134, "until": [29, 31], "unveil": 4, "unwant": 31, "up": [4, 5, 14, 16, 22, 23, 33, 98], "updat": [5, 7, 29, 133, 134], "update_info": [10, 31], "upon": [22, 32, 97, 98, 100, 104, 106, 107, 133], "upper": [11, 22], "us": [0, 2, 3, 4, 5, 7, 11, 12, 14, 16, 18, 21, 22, 29, 31, 32, 33, 97, 98, 100, 104, 106, 107, 132, 133, 134], "usabl": 31, "usc": 133, "use_plu": 22, "use_qasm": 22, "use_random_decomp": [4, 22, 31], "use_rotation_decomp_g": [4, 15, 22], "usefixtur": 23, "user": [4, 5, 6, 22, 29, 134], "util": [4, 5, 7, 9, 10, 15, 16, 21, 132], "uv": 16, "v": [10, 11, 14, 16, 24], "v_arr": [10, 24], "v_arrai": 16, "val": [16, 19, 31], "valid": 16, "valid_encod": [10, 11, 14], "valid_region_abov": 22, "valid_region_right": 22, "valu": [0, 4, 11, 14, 16, 17, 22, 31], "valueerror": [16, 17, 22, 31], "van": 0, "vari": [4, 22, 31], "variabl": [7, 11], "variou": [4, 5, 7, 22, 29, 104, 133], "vc": 7, "ve": 134, "vector": [10, 11, 14, 15, 16, 19, 30], "verbos": [12, 22, 31], "veri": [4, 22], "verif": 133, "verifi": [4, 16, 22], "version": [4, 5, 7, 16, 31, 33, 133, 134], "vertic": 7, "via": [0, 4, 5, 22, 133], "view": [7, 22, 32, 33, 97, 98, 100, 104, 106, 107, 133], "view_decomp_level": [10, 15], "violat": [22, 29, 32, 97, 98, 100, 104, 106, 107, 133], "virut": 133, "viscou": 0, "visibl": 7, "visit": 7, "visual": 7, "vlasov": 0, "vlasov_coeffs_linear_1d": [19, 20], "vlasov_coeffs_linear_1d_spars": [19, 20], "vlasov_coeffs_nonlinear_1d": [19, 20], "vlasov_coeffs_nonlinear_1d_spars": [19, 20], "vlasov_n8_qsp": [31, 32], "vlasov_spectr": [10, 19], "vlasov_spectral_linear": [19, 20], "vlasov_spectral_linear_spars": [19, 20], "vlasov_spectral_system": [19, 20], "volterra": 0, "volum": 14, "vx": 134, "w": [0, 16, 22], "wa": [5, 7, 22, 29, 31, 133], "wade": 7, "wai": [7, 22, 134], "walk": [0, 11], "walkdown": [15, 16], "want": [4, 6, 7, 12, 16, 22, 31, 33, 133, 134], "warn": [4, 5, 16, 22, 29, 30], "warn_if_not_decompos": [4, 22], "wasn": 33, "wave": [0, 14], "we": [4, 6, 16, 22, 29, 30, 31, 33, 134], "web": 33, "well": [2, 3, 6, 17, 22, 29], "were": [4, 6, 22, 29, 31], "wfn": 19, "wfn_product_st": [10, 19], "wfn_to_cm": [10, 19], "wfv": 19, "what": [4, 31, 134], "whatev": 7, "when": [4, 5, 6, 14, 16, 17, 22, 29, 31, 33, 106, 132, 134], "where": [12, 14, 16, 22, 29, 133, 134], "wherea": [4, 22, 31], "wherev": 7, "whether": [4, 12, 16, 22, 29, 31], "which": [0, 4, 6, 11, 12, 14, 16, 22, 29, 31, 133], "while": [29, 133, 134], "who": [6, 22], "whose": [4, 16, 22, 31], "width": [4, 29], "wigner": 32, "window": [31, 133], "wish": 31, "with_label": 19, "within": [0, 2, 4, 5, 6, 21, 22, 31, 33, 133], "without": [5, 7, 18, 29, 133], "won": [16, 134], "word": 16, "work": [6, 13, 17, 22, 32, 97, 98, 100, 104, 106, 107, 133, 134], "workflow": 31, "workspaceroot": 7, "would": [6, 22, 133], "wrap": [4, 16, 29], "wrapper": 31, "write": [22, 31], "write_poli": [25, 27], "write_xyz": [10, 19], "written": [6, 14], "www": [4, 22, 31, 97, 100], "x": [0, 4, 10, 16, 22, 23, 25, 27, 28, 29, 31, 134], "x0": 22, "x1": 22, "x2": 22, "x_": 16, "x_p": 16, "x_q": 16, "x_set": 19, "xi": [16, 22], "xi_": 16, "xi_el": 16, "xi_l": 16, "xi_val": 16, "xpt": [19, 27, 31], "xvec": 31, "xx": 22, "xyz": [14, 19], "xzx": [10, 16, 24], "xzx_arr": [10, 24], "y": [4, 10, 16, 22, 29, 134], "y0": 22, "y1": 22, "y2": 22, "y_": 16, "y_p": 16, "y_q": 16, "yet": [4, 6, 12], "yield": [14, 31], "yield_df_info": [10, 14], "yield_fable_info": [10, 14], "yield_fermionic_info": [10, 14], "yield_firstquantized_info": [10, 14], "yield_lineart_info": [10, 14], "yield_operator_info": [10, 14], "yield_operator_matrix": [10, 14], "yield_paulilcu_info": [10, 14], "you": [3, 4, 6, 7, 12, 16, 22, 31, 32, 33, 97, 98, 100, 104, 106, 107, 133, 134], "your": [4, 6, 7, 33, 133], "yourself": 133, "yy": 22, "yyyi": 134, "yzy": 16, "z": [4, 10, 16, 22, 24, 28, 29, 107, 134], "z_": 16, "z_arr": [10, 24], "z_omega": [10, 22], "z_sqrt2": [10, 22], "zenodo": 132, "zero": [16, 17, 22], "zero_poli": [25, 27], "zeta_": 16, "zigzag": 19, "zsh": 133, "zx_": 16, "zy_": 16, "zz": [10, 16, 22, 24], "zz_arr": [10, 24], "\u03b4": 22, "\u03b5": [4, 22, 31], "\u03b7": 22, "\u03b8": 22, "\u03b81": 22, "\u03b82": 22, "\u03bb": 22, "\u03c0": 22, "\u03c9": [4, 22, 100, 104, 107]}, "titles": ["pyLIQTR Features", "pyLIQTR", "pyLIQTR API Reference", "Internal API reference, for users customizing behavior", "Best Practices", "High-level changelog (not all inclusive of all changes)", "Contributing to <code class=\"docutils literal notranslate\"><span class=\"pre\">pyliqtr</span></code>", "Debugger", "src", "src package", "src.pyLIQTR package", "src.pyLIQTR.BlockEncodings package", "src.pyLIQTR.PhaseEstimation package", "src.pyLIQTR.PhaseEstimation.tests package", "src.pyLIQTR.ProblemInstances package", "src.pyLIQTR.circuits package", "src.pyLIQTR.circuits.operators package", "src.pyLIQTR.circuits.operators.tests package", "src.pyLIQTR.circuits.tests package", "src.pyLIQTR.clam package", "src.pyLIQTR.clam.linearization_tools package", "src.pyLIQTR.clam.tests package", "src.pyLIQTR.gate_decomp package", "src.pyLIQTR.gate_decomp.tests package", "src.pyLIQTR.pest_interface package", "src.pyLIQTR.phase_factors package", "src.pyLIQTR.phase_factors.fourier_response package", "src.pyLIQTR.phase_factors.optimization package", "src.pyLIQTR.qubitization package", "src.pyLIQTR.scheduler package", "src.pyLIQTR.tests package", "src.pyLIQTR.utils package", "src.pyLIQTR.utils.tests package", "Documentation", "src.pyLIQTR.BlockEncodings.BlockEncoding", "src.pyLIQTR.BlockEncodings.CarlemanLinearization", "src.pyLIQTR.BlockEncodings.DoubleFactorized", "src.pyLIQTR.BlockEncodings.FirstQuantized", "src.pyLIQTR.BlockEncodings.LinearT", "src.pyLIQTR.BlockEncodings.PauliStringLCU", "src.pyLIQTR.BlockEncodings.fermi_hubbard_square_encoding", "src.pyLIQTR.BlockEncodings.getEncoding", "src.pyLIQTR.PhaseEstimation.pe", "src.pyLIQTR.PhaseEstimation.pe_gates", "src.pyLIQTR.PhaseEstimation.pe_sim", "src.pyLIQTR.ProblemInstances.ChemicalHamiltonian", "src.pyLIQTR.ProblemInstances.ElectronicStructure", "src.pyLIQTR.ProblemInstances.LatticeInstance", "src.pyLIQTR.ProblemInstances.MatrixInstance", "src.pyLIQTR.ProblemInstances.NonlinearODE", "src.pyLIQTR.ProblemInstances.ProblemInstance", "src.pyLIQTR.ProblemInstances.fermionic_models", "src.pyLIQTR.ProblemInstances.getInstance", "src.pyLIQTR.ProblemInstances.spin_models", "src.pyLIQTR.circuits.operators.AddMod", "src.pyLIQTR.circuits.operators.BinaryToUnary", "src.pyLIQTR.circuits.operators.BitwiseZRotation", "src.pyLIQTR.circuits.operators.ControlledUniformSuperposition", "src.pyLIQTR.circuits.operators.DF_InnerPrepare", "src.pyLIQTR.circuits.operators.DF_OuterPrepare", "src.pyLIQTR.circuits.operators.DF_RotationsBlock", "src.pyLIQTR.circuits.operators.ExampleFMatrices", "src.pyLIQTR.circuits.operators.FixupTableQROM", "src.pyLIQTR.circuits.operators.FlaggedPrepareUniformSuperposition", "src.pyLIQTR.circuits.operators.PhaseGradientRotation", "src.pyLIQTR.circuits.operators.ProductPauliExponentials", "src.pyLIQTR.circuits.operators.QROMwithMeasurementUncompute", "src.pyLIQTR.circuits.operators.RotationsQROM", "src.pyLIQTR.circuits.operators.cascading_translation", "src.pyLIQTR.circuits.operators.cyclic_shift", "src.pyLIQTR.circuits.operators.diagonal_bitstring", "src.pyLIQTR.circuits.operators.hamiltonian_encodings", "src.pyLIQTR.circuits.operators.multiCZ", "src.pyLIQTR.circuits.operators.prepare", "src.pyLIQTR.circuits.operators.prepare_LinearT", "src.pyLIQTR.circuits.operators.prepare_oracle_pauli_lcu", "src.pyLIQTR.circuits.operators.reflect", "src.pyLIQTR.circuits.operators.selectV", "src.pyLIQTR.circuits.operators.selectVutils", "src.pyLIQTR.circuits.operators.select_LinearT", "src.pyLIQTR.circuits.operators.select_oracle_pauli_lcu", "src.pyLIQTR.circuits.operators.select_prepare_pauli", "src.pyLIQTR.circuits.operators.swap_network", "src.pyLIQTR.circuits.operators.translation", "src.pyLIQTR.clam.cell_complex", "src.pyLIQTR.clam.geometry", "src.pyLIQTR.clam.lattice_definitions", "src.pyLIQTR.clam.multilinear_algebra", "src.pyLIQTR.clam.operator_complex", "src.pyLIQTR.clam.operator_lattice", "src.pyLIQTR.clam.operator_sims", "src.pyLIQTR.clam.operator_strings", "src.pyLIQTR.clam.operators", "src.pyLIQTR.clam.physical_data", "src.pyLIQTR.clam.simqsp", "src.pyLIQTR.clam.tensor_methods", "src.pyLIQTR.clam.time_dynamics", "src.pyLIQTR.gate_decomp.cirq_transforms", "src.pyLIQTR.gate_decomp.clifford_gates", "src.pyLIQTR.gate_decomp.ellipse", "src.pyLIQTR.gate_decomp.exact_decomp", "src.pyLIQTR.gate_decomp.gate_approximation", "src.pyLIQTR.gate_decomp.grid_operator", "src.pyLIQTR.gate_decomp.matrices", "src.pyLIQTR.gate_decomp.point_enumeration", "src.pyLIQTR.gate_decomp.rings", "src.pyLIQTR.gate_decomp.rotation_gates", "src.pyLIQTR.gate_decomp.solve_diophantine", "src.pyLIQTR.phase_factors.angler", "src.pyLIQTR.phase_factors.conversions", "src.pyLIQTR.phase_factors.named_factors", "src.pyLIQTR.phase_factors.phase_factors", "src.pyLIQTR.phase_factors.simulation", "src.pyLIQTR.qubitization.phase_estimation", "src.pyLIQTR.qubitization.qsvt", "src.pyLIQTR.qubitization.qsvt_dynamics", "src.pyLIQTR.qubitization.qubitized_gates", "src.pyLIQTR.scheduler.DAG", "src.pyLIQTR.scheduler.Instruction", "src.pyLIQTR.scheduler.scheduler", "src.pyLIQTR.scheduler.scheduler_utils", "src.pyLIQTR.scheduler.sets", "src.pyLIQTR.utils.Hamiltonian", "src.pyLIQTR.utils.circuit_decomposition", "src.pyLIQTR.utils.get_hdf5", "src.pyLIQTR.utils.global_ancilla_manager", "src.pyLIQTR.utils.pauli_string_manip", "src.pyLIQTR.utils.plot_helpers", "src.pyLIQTR.utils.printing", "src.pyLIQTR.utils.qsp_helpers", "src.pyLIQTR.utils.resource_analysis", "src.pyLIQTR.utils.utils", "Welcome to pyLIQTR\u2019s documentation!", "Installing pyliqtr", "Releases and development"], "titleterms": {"": 132, "0": 5, "1": 5, "2": 5, "3": 5, "about": 4, "addmod": [16, 54], "all": 5, "analysi": 4, "angler": [25, 108], "angler_optim": 27, "api": [2, 3, 132], "argument": 4, "atomic_lattic": 19, "attribut": 31, "behavior": 3, "benchmark": 23, "best": 4, "binarytounari": [16, 55], "bitwisezrot": [16, 56], "block": [0, 2], "blockencod": [11, 34, 35, 36, 37, 38, 39, 40, 41], "branch": 134, "build": 33, "burgers_nonlinear": 20, "carlemanlinear": [11, 35], "cascading_transl": [16, 68], "catalyticallycontrolledhadamard": 16, "cell_complex": [19, 84], "chang": 5, "changelog": 5, "chebyshevpoli": 27, "chemicalhamiltonian": [14, 45], "circuit": [2, 3, 4, 15, 16, 17, 18, 22, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "circuit_decomposit": [31, 123], "cirq_transform": [22, 97], "citat": 132, "clam": [0, 2, 3, 19, 20, 21, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "classic": 0, "clifford": 4, "clifford_g": [22, 98], "code": 6, "compon": 0, "configur": 7, "conftest": [23, 32], "content": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "contribut": 6, "controlleduniformsuperposit": [16, 57], "convers": [25, 109], "custom": 3, "cycl": 134, "cyclic_shift": [16, 69], "dag": [29, 117], "debug": 7, "debugg": 7, "decomposit": [2, 3, 4], "develop": 134, "df_innerprepar": [16, 58], "df_outerprepar": [16, 59], "df_rotationsblock": [16, 60], "df_util": 31, "diagonal_bitstr": [16, 70], "disclaim": 133, "doc": 33, "document": [6, 33, 132], "doublefactor": [11, 36], "eigenvalu": 0, "electron": 0, "electronicstructur": [14, 46], "ellips": [22, 99], "encod": [0, 2], "environ": 133, "equalitytest": 16, "estim": [0, 2], "exact_decomp": [22, 100], "examplefmatric": [16, 61], "expand": 27, "export": 4, "factor": [0, 2, 3], "featur": 0, "fermi_hubbard_square_encod": [11, 40], "fermionic_model": [14, 51], "firstquant": [11, 37], "fitter": 27, "fixuptableqrom": [16, 62], "flaggedprepareuniformsuperposit": [16, 63], "flagzeroasfailur": 16, "fourier_respons": 26, "gate": [2, 3], "gate_approxim": [22, 101], "gate_complex": 31, "gate_decomp": [22, 23, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107], "gener": 0, "geometri": [19, 85], "get_hdf5": [31, 124], "getencod": [11, 41], "getinst": [14, 52], "global_ancilla_manag": [31, 125], "grid_oper": [22, 102], "guidelin": 33, "hamiltonian": [0, 31, 122], "hamiltonian_encod": [16, 71], "high": 5, "i": 0, "id": 0, "ii": 0, "iii": 0, "implement": 16, "inclus": 5, "indic": 132, "instal": 133, "instanc": [0, 2], "instruct": [6, 29, 118, 134], "intern": 3, "iv": 0, "lattic": 19, "lattice_definit": [19, 86], "latticeinst": [14, 47], "level": 5, "like": 4, "linearization_tool": 20, "lineart": [11, 38], "liqtr": 4, "matric": [22, 103], "matrixinst": [14, 48], "method": [0, 2, 3, 31], "modul": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "moleculeparamet": 14, "multicz": [16, 72], "multilinear_algebra": [19, 20, 87], "named_factor": [25, 110], "nonlinearod": [14, 49], "note": 4, "openqasm": 4, "oper": [0, 2, 3, 16, 17, 19, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92], "operator_complex": [19, 88], "operator_lattic": [19, 89], "operator_sim": [19, 90], "operator_str": [19, 91], "optim": 27, "oracl": 0, "output": 22, "overview": 4, "packag": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "pauli_string_manip": [31, 126], "paulistringlcu": [11, 39], "pe": [12, 42], "pe_gat": [12, 43], "pe_sim": [12, 44], "pest": 0, "pest_interfac": 24, "pest_python": 24, "phase": [0, 2, 3], "phase_estim": [28, 113], "phase_factor": [25, 26, 27, 108, 109, 110, 111, 112], "phaseestim": [12, 13, 42, 43, 44], "phasegradientrot": [16, 64], "physical_data": [19, 93], "plot_help": [31, 127], "point_enumer": [22, 104], "practic": 4, "precis": 22, "prepar": [0, 16, 73], "prepare_firstquant": 16, "prepare_lineart": [16, 74], "prepare_oracle_pauli_lcu": [16, 75], "preparemuunaryencod": 16, "preparenu": 16, "preparenusuperposit": 16, "preparepowertwost": 16, "preparet_firstquant": 16, "prepareuv_firstquant": 16, "primit": 0, "print": [31, 128], "problem": [0, 2], "probleminst": [14, 45, 46, 47, 48, 49, 50, 51, 52, 53], "process": 0, "productpauliexponenti": [16, 65], "pylcircuit": 15, "pyliqtr": [0, 1, 2, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "pyloper": 15, "qromwithmeasurementuncomput": [16, 66], "qsp": [0, 15], "qsp_helper": [31, 129], "qsvt": [0, 28, 114], "qsvt_dynam": [28, 115], "quantum": 0, "qubit": [0, 2, 28, 113, 114, 115, 116], "qubitized_g": [28, 116], "refer": [2, 3, 132], "reflect": [16, 76], "releas": 134, "resourc": 4, "resource_analysi": [31, 130], "review": 6, "ring": [22, 105], "rotation_g": [22, 106], "rotationsqrom": [16, 67], "run": 7, "schedul": [2, 3, 4, 29, 117, 118, 119, 120, 121], "scheduler_util": [29, 120], "select": 0, "select_lineart": [16, 79], "select_oracle_pauli_lcu": [16, 80], "select_prepare_pauli": [16, 81], "selectv": [16, 77], "selectvutil": [16, 78], "sequenc": 0, "set": [22, 29, 121], "signal": 0, "simqsp": [19, 94], "simul": [0, 25, 112], "solve_diophantin": [22, 107], "specif": 7, "speed": 4, "spin_model": [14, 53], "src": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "step": 133, "structur": 0, "style": 6, "submodul": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32], "subpackag": [9, 10, 12, 15, 16, 19, 22, 25, 31], "swap_network": [16, 82], "t": 4, "tabl": 132, "tensor_method": [19, 95], "test": [6, 7, 13, 17, 18, 21, 23, 30, 32], "test_binarytounari": 17, "test_catalyticallycontrolledhadamard": 17, "test_cirq_transform": 23, "test_cyclic_shift": 17, "test_dataandkeycondit": 17, "test_diagonal_bitstr": 17, "test_equalitytest": 17, "test_exact_decomp": 23, "test_flagzeroasfailur": 17, "test_gate_complex": 32, "test_hamiltonian_encod": 17, "test_heisenberg": 21, "test_matric": 23, "test_multicz": 17, "test_pe_g": 13, "test_phasegradientrot": 17, "test_point_enumer": 23, "test_prepar": 17, "test_preparemuunaryencod": 17, "test_preparenusuperposit": 17, "test_preparepowertwost": 17, "test_preparet_firstquant": 17, "test_print": 32, "test_productpauliexponenti": 17, "test_pylcircuit": 18, "test_pyloper": 18, "test_qromwithmeasurementuncomput": 17, "test_qtadd": 17, "test_qualtran_resource_analyze_multiple_g": 30, "test_qualtran_resource_analyze_single_g": 30, "test_reflect": 17, "test_resoure_analyz": 32, "test_rotationsqrom": 17, "test_selectv": 17, "test_solve_diophantin": 23, "test_transl": 17, "test_uniformsuperpositionij": 17, "test_util": 32, "time_dynam": [19, 96], "translat": [16, 83], "tutori": 0, "uniformsuperpositionij": 16, "usag": 4, "user": [3, 132], "util": [0, 2, 3, 17, 19, 31, 32, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131], "v": 0, "v0": 5, "v1": 5, "vi": 0, "vii": 0, "viii": 0, "vlasov_spectr": 20, "welcom": 132}})