# Configuration file for the Sphinx documentation builder.
#
# For the full list of built-in configuration values, see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html
# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from pathlib import Path

_doc_root = Path(__file__).parent
pyliqtr_root_path = _doc_root.parent
sys.path.insert(0, str(pyliqtr_root_path))

# make it so Sphinx can find custom extensions
doc_extensions_path = _doc_root / "_extensions"
sys.path.insert(1, str(doc_extensions_path))

# -- Project information -----------------------------------------------------

project = 'pyLIQTR'
copyright = '2024, MIT Lincoln Laboratory'
author = 'Rob Rood'

# The full version, including tags
__version__ = ""
exec(open(os.path.join(pyliqtr_root_path / "src", "pyLIQTR", "_version.py")).read())
release = __version__

# The short X.Y version
version = release


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # "nbsphinx",
    # "recommonmark",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.mathjax",
    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "myst_nb",
    "jupyter_sphinx",
    "sphinx.ext.intersphinx",
    "sphinx.ext.mathjax",
    # custom extensions
    "notebook_as_py_download",
    "autodoc_descriptor",
]

intersphinx_mapping = {
    "python": ("https://docs.python.org/3.8", None),
    "matplotlib": ("https://matplotlib.org/stable", None),
    "numpy": ("https://numpy.org/doc/1.23/", None),
}


# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = [".rst", ".md"]

# myst by default only allows implicit targets to top-level headers
# set this to the max depth to allow tagrets (up to 6)
myst_heading_anchors = 3

# convert .py files into notebooks
nb_custom_formats = {
    ".pct.py": ["jupytext.reads", {"fmt": "py:percent"}],
}
nb_execution_excludepatterns = ["examples/*.ipynb", "qpulse/*.ipynb"]

# The master toctree document.
master_doc = "index"

# only document classes and functions in __all__
autosummary_ignore_module_all = False

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store", "**.ipynb_checkpoints"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = None


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"
html_logo = "./_static/pyliqtr_logo.png"
html_favicon = "./_static/pyliqtr_logo.png"

# Theme options are theme-specific and customize the look and feel of a themehtml_theme_options
# further.  For a list of options available for each theme, see the
# documentation.
# https://sphinx-rtd-theme.readthedocs.io/en/stable/configuring.html
html_theme_options = {
    "navigation_depth": 5,  # side-panel table of contents depth
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ["_static"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# -- Extension configuration -------------------------------------------------

# Generate autosummaries
autosummary_generate = True

nitpicky = False
